[
  {
    "id": 1,
    "questionDe": "(s5) Warum ist Überlast im Internet ein zentrales Problem für TCP?",
    "questionJa": "なぜTCPではネットワークの過負荷（Überlast）が重要な問題なのか？",
    "answerDe": [
      "Überlast ist Hauptgrund für Verspätung oder Verlust im Internet.",
      "Retransmissions verschlimmern Überlast.",
      "TCP misst Überlast anhand Änderungen des Delay.",
      "Reduziert temporär die Window-Größe und damit die Datenrate."
    ],
    "answerJa": [
      "過負荷はインターネットでの遅延やデータ損失の主な原因。",
      "再送信は過負荷をさらに悪化させる。",
      "TCPは遅延の変化から過負荷を検出する。",
      "一時的にウィンドウサイズを縮小し、送信速度を抑制する。"
    ],
    "explanationDe": [
      "In Computernetzwerken wie dem Internet ist Überlast (Congestion) eines der größten Probleme, da sie zu Paketverlusten und Verzögerungen führt.",
      "Wenn zu viele Pakete gleichzeitig durch das Netzwerk geschickt werden, können Router oder Zwischengeräte die Daten nicht mehr rechtzeitig weiterleiten – es entsteht ein sogenannter Engpass.",
      "TCP erkennt Überlast nicht direkt, sondern anhand von Anzeichen wie erhöhter Round Trip Time (RTT) oder dem Verlust von Bestätigungen (ACKs).",
      "Wenn TCP solche Anzeichen bemerkt, reduziert es die sogenannte Fenstergröße (Window Size), wodurch weniger Daten gleichzeitig übertragen werden.",
      "Das Ziel ist es, die Übertragungsrate zu verringern, um die Überlast zu lindern, ähnlich wie bei einer Autobahn, auf der man langsamer fährt, um einen Stau zu vermeiden.",
      "Retransmissions, also das erneute Senden verlorener Pakete, sind notwendig, können aber selbst zur Überlast beitragen, wenn sie unkontrolliert erfolgen.",
      "Im Gegensatz zu einfacheren Protokollen wie UDP, das keine Rücksicht auf Netzwerkzustand nimmt, reagiert TCP aktiv auf Überlastung, was es besonders zuverlässig macht."
    ],
    "explanationJa": [
      "コンピュータネットワーク、特にインターネットにおいて、過負荷（Congestion）は通信の遅延やパケット損失を引き起こす最も重大な問題の1つです。",
      "例えば、多くのユーザーが同時に動画を視聴するような状況では、ルータやネットワーク機器が処理しきれずに渋滞（ボトルネック）が起きます。",
      "TCPはネットワークの混雑状態を直接的に観測することはできませんが、遅延（RTT: Round Trip Time）の増加やACK（確認応答）の遅れ・欠如からそれを推測します。",
      "このような兆候が見られた場合、TCPはウィンドウサイズ（Window Size）を一時的に小さくして、一度に送信するデータ量を減らします。",
      "これは交通渋滞の例に似ており、速度を落として通行量を調整することで、全体の流れを改善しようとするアプローチです。",
      "パケットの再送信（Retransmission）は、データの正確な受信を保証するために重要ですが、もし過剰になると、ネットワークをさらに圧迫して逆効果になることもあります。",
      "この点で、ネットワークの状態に反応しないUDPと異なり、TCPはネットワークの状態を考慮して制御する仕組みを備えているため、信頼性の高い通信を実現しています。"
    ],
    "originalSlideText": "❑ Überlast ist Hauptgrund für Verspätung oder Verlust im Internet\n❑ Retransmissions verschlimmern Überlast\n❑ TCP misst Überlast anhand Änderungen des Delay\n❑ Reduziert temporär Window Größe und damit Rate",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 2,
    "questionDe": "(s6) Was ist Slow Start in TCP und wie funktioniert es?",
    "questionJa": "TCPの『Slow Start』とは何か？どのように動作するか？",
    "answerDe": [
      "Slow Start ist eine spezielle Überlastkontrolle bei neuer Verbindung oder verlorener Nachricht.",
      "Zu Beginn wird nur eine Nachricht mit Daten gesendet (Receiver Window wird nicht ganz gefüllt).",
      "Falls ACK ohne Verlust eintrifft, wird die Datenmenge verdoppelt.",
      "Exponentielle Steigerung bis zum Slow Start Threshold.",
      "Danach lineare Steigerung der Datenmenge solange keine Überlast auftritt."
    ],
    "answerJa": [
      "Slow Startは新しい接続やパケット損失時に用いられる特別な過負荷制御方式。",
      "最初は1つのデータパケットのみを送信（受信側のウィンドウは完全には使われない）。",
      "ACKが損失なしに返ってくると、送信データ量が2倍に増加。",
      "この倍増は『Slow Start Threshold』に達するまで続く。",
      "その後は過負荷がない限り、データ量は直線的に増加。"
    ],
    "explanationDe": [
      "Slow Start ist ein Mechanismus in TCP, der bei Beginn einer neuen Verbindung oder nach dem Verlust eines Segments aktiviert wird, um Überlast zu vermeiden.",
      "Anstatt sofort die maximale Datenrate zu nutzen, beginnt TCP mit einer sehr kleinen Menge an Daten – meist nur einem Segment.",
      "Wenn der Empfänger das Segment korrekt bestätigt (ACK), geht der Sender davon aus, dass keine Überlast besteht und verdoppelt die Datenmenge in jedem Round-Trip-Zyklus.",
      "Diese exponentielle Steigerung setzt sich fort, bis ein vordefinierter Schwellenwert erreicht wird – der sogenannte Slow Start Threshold.",
      "Danach erfolgt nur noch eine lineare Steigerung, das heißt, die Datenmenge wird pro RTT um eine konstante Menge erhöht, um Überlast zu vermeiden.",
      "Das Ziel dieses Verfahrens ist es, die verfügbare Bandbreite schnell, aber kontrolliert auszunutzen.",
      "Im Vergleich zu einem sofortigen maximalen Senden verhindert Slow Start effektiv eine zu frühe Überlastung, besonders in neuen oder nicht bekannten Netzwerken."
    ],
    "explanationJa": [
      "TCPのSlow Start（スロー・スタート）は、新しい接続が確立されたときや、パケットが失われた際に使用される過負荷回避の仕組みです。",
      "開始時に一度に大量のデータを送ってネットワークを混雑させないよう、最初は1つだけデータセグメントを送信します。",
      "その後、ACK（確認応答）が正常に返ってくるたびに送信可能なデータ量を倍にしていきます（指数関数的増加）。",
      "この増加は「Slow Start Threshold（スロー・スタートしきい値）」に達するまで続きます。",
      "その後は直線的に送信量が増え、ネットワークの状態に応じて慎重に通信量を調整します。",
      "この方法により、TCPはネットワークに突然過大な負荷をかけず、通信路の容量を安全に評価しながら使用できるようになります。",
      "たとえば、動画配信サービスで最初に短時間バッファを溜めるような動作も、同様の目的で行われており、Slow Startと似た考え方です。"
    ],
    "originalSlideText": "❑ TCP besitzt Slow Start\n Spezielle Überlastkontrolle für neue Verbindung oder bei verlorener Nachricht\n Am Anfang einzelne Nachricht mit Daten (Receiver Window wird nicht ganz gefüllt)\n Falls ACK ohne Verlust → doppelte Menge an Daten\n Exponentielle Steigerung bis zu Slow Start Threshold\n Danach lineare Steigerung der Datenmenge solange keine Überlast",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 3,
    "questionDe": "(s7) Warum ist Slow Start in TCP eigentlich nicht wirklich langsam und wie hilft es bei Überlastung?",
    "questionJa": "なぜTCPのSlow Startは実際にはそれほど“スロー”ではないのか？ また、それが過負荷防止にどう役立つのか？",
    "answerDe": [
      "Slow Start ist nicht wirklich langsam, da RTT im Internet oft unter 100 ms liegt.",
      "Maximaler Durchsatz wird meist innerhalb einer Sekunde erreicht.",
      "TCP reagiert effektiv bei Überlastung und verhindert stärkere Überlastung.",
      "Verhindert Congestion Collapse, wenn alle Implementierungen korrekt arbeiten."
    ],
    "answerJa": [
      "Slow Startは実際には遅くなく、RTTが100ms未満のことが多いため、1秒以内に最大スループットに達することが多い。",
      "TCPはネットワークの過負荷時に素早く対応し、さらなる悪化を防ぐ。",
      "すべてのTCP実装が適切に動作すれば、輻輳崩壊（Congestion Collapse）を防ぐことができる。"
    ],
    "explanationDe": [
      "Obwohl der Begriff „Slow Start“ vermuten lässt, dass der Datenversand langsam beginnt, ist dies in der Praxis meist nicht der Fall.",
      "Im heutigen Internet liegt die Round Trip Time (RTT) zwischen Sender und Empfänger häufig unter 100 Millisekunden.",
      "Da sich die Fenstergröße bei jedem erfolgreichen ACK verdoppelt, wächst die Datenrate exponentiell – das bedeutet, dass schon nach wenigen RTTs ein hoher Durchsatz erreicht wird.",
      "Innerhalb von nur einer Sekunde kann TCP so oft die volle Übertragungsgeschwindigkeit nutzen.",
      "Slow Start ist besonders hilfreich, um bei einer neuen Verbindung keine Überlast zu verursachen, während das Netzwerkverhalten noch unbekannt ist.",
      "Wenn alle TCP-Implementierungen sich an dieses Verfahren halten, kann ein gefährliches Phänomen – das sogenannte Congestion Collapse – vermieden werden.",
      "Im Vergleich zu Protokollen ohne Überlastkontrolle wie UDP bietet TCP hier einen entscheidenden Vorteil in stabilen Netzwerken mit hoher Last."
    ],
    "explanationJa": [
      "『Slow Start』という名前からはデータ送信が遅く始まる印象を受けますが、実際には非常に素早く通信速度が上昇します。",
      "現在のインターネット環境では、RTT（往復遅延時間）は100ミリ秒未満であることが多く、毎回のACK応答で送信量が倍増するため、数回の通信で最大速度に達することができます。",
      "つまり、最初の1秒間でTCP接続はすでに十分なデータ送信能力を発揮できるのです。",
      "この仕組みにより、接続初期の突然の過負荷を防ぎながら、ネットワークの状態に応じて適切な速度で通信を進められます。",
      "また、TCPのこの特性が守られれば、『Congestion Collapse（輻輳崩壊）』と呼ばれる深刻な通信障害を回避できます。",
      "Congestion Collapseとは、再送信による混雑の悪循環によってネットワーク全体の効率が著しく低下する現象です。",
      "UDPのような過負荷制御がないプロトコルと比べて、TCPのこの設計は混雑環境下でも安定した通信を提供する点で非常に有効です。"
    ],
    "originalSlideText": "❑ Nicht wirklich „slow“\n RTT im Internet oft weniger als 100 ms → maximaler Durchsatz nach einer Sekunde\n❑ Reagiert gut falls Netzwerk überlastet (vermeidet stärkere Überlastung)\n❑ Schnelle Vermeidung von Congestion Collapse falls alle TCP Implementierungen den Regeln folgen",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 4,
    "questionDe": "(s8) Welche Weiterentwicklungen des TCP-Kontrollalgorithmus gibt es und was unterscheidet sie?",
    "questionJa": "TCPの過負荷制御アルゴリズムにはどのような進化形があり、それぞれの違いは何か？",
    "answerDe": [
      "Der ursprüngliche Algorithmus wird als TCP Tahoe bezeichnet.",
      "TCP Reno enthält Fast Recovery und Fast Retransmit für höheren Durchsatz bei gelegentlichem Verlust.",
      "TCP Vegas und NewReno waren um 2000 weit verbreitet.",
      "Heute sind TCP CUBIC und BBR die am häufigsten genutzten Varianten."
    ],
    "answerJa": [
      "元の制御方式はTCP Tahoeと呼ばれる。",
      "TCP RenoはFast RecoveryとFast Retransmitを備え、損失が時々ある環境で高いスループットを維持する。",
      "2000年頃にはTCP VegasやNewRenoが広く使われていた。",
      "現在はTCP CUBICとBBRが主流となっている。"
    ],
    "explanationDe": [
      "Im Laufe der Zeit wurde der ursprüngliche TCP-Überlastkontrollalgorithmus weiterentwickelt, um besser auf verschiedene Netzwerkbedingungen reagieren zu können.",
      "TCP Tahoe war die erste Version mit Slow Start, Congestion Avoidance und Fast Retransmit. Diese Version reduziert das Sende-Fenster stark bei Paketverlust.",
      "TCP Reno verbessert Tahoe durch die Einführung von Fast Recovery: Nach einem Paketverlust wird das Sende-Fenster nicht ganz zurückgesetzt, sondern moderat reduziert, um Datenfluss aufrechtzuerhalten.",
      "TCP Vegas versucht Überlastungen zu vermeiden, bevor sie entstehen, indem es die Differenz zwischen erwarteter und tatsächlicher RTT analysiert. Es ist präventiver, aber in der Praxis weniger robust.",
      "NewReno baut auf Reno auf und verbessert das Verhalten bei mehrfachen Paketverlusten innerhalb eines Fensters.",
      "CUBIC ist heute in Linux-Systemen der Standard – es nutzt eine kubische Funktion für die Erhöhung der Datenrate und ist besonders in Hochgeschwindigkeitsnetzwerken effizient.",
      "BBR (Bottleneck Bandwidth and RTT) verwendet ein völlig neues Modell: Es schätzt Bandbreite und RTT, anstatt auf Paketverlust zu warten – dies führt zu höherem Durchsatz, insbesondere in modernen Netzwerken mit geringer Paketverlustrate."
    ],
    "explanationJa": [
      "TCPの過負荷制御はネットワーク環境の多様化に合わせて進化してきました。",
      "最初の代表的な制御方式がTCP Tahoeで、Slow Start、輻輳回避、Fast Retransmitを含みます。パケット損失が発生すると送信ウィンドウを大きく縮小します。",
      "TCP Renoでは、Fast Recoveryが追加され、損失後もウィンドウサイズを完全には戻さず、通信の継続性を保つ工夫がされています。これにより、軽微な損失があってもスループットを維持できます。",
      "TCP VegasはRTT（ラウンドトリップ時間）に基づく制御を採用し、ネットワークが混雑する前に反応する予防型のアプローチを取ります。ただし、実運用ではTCP Renoに比べて広くは普及しませんでした。",
      "NewRenoはRenoを拡張し、複数のパケット損失があった場合の処理を改善しています。",
      "近年主流となっているのがTCP CUBICで、データ送信速度をキュービック関数で調整することで、高帯域幅環境でも効率的な転送が可能です。Linux系OSで標準として広く使われています。",
      "BBR（Bottleneck Bandwidth and RTT）は損失ベースではなく、帯域幅とRTTの推定に基づいて動作する新しいアプローチで、特に損失が少ないネットワークで高い性能を発揮します。"
    ],
    "originalSlideText": "❑ Immer wieder kleinere Änderungen des Algorithmus\n❑ Vorherige Erklärung entspricht TAHOE\n❑ TCP RENO mit Fast Recovery (auch Fast Retransmit)\n Höherer Durchsatz falls Verlust nur gelegentlich\n❑ Zusätzlich: TCP Vegas und NewReno (meistgenutzt in 2000)\n❑ Heute: TCP CUBIC und BBR (siehe auch VL 13)",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 5,
    "questionDe": "(s9) Wie funktionieren SACK und ECN als Mechanismen zur Überlastkontrolle in TCP?",
    "questionJa": "TCPにおける過負荷制御の仕組みとして、SACKとECNはどのように機能するのか？",
    "answerDe": [
      "TCP misst Überlast anhand der Varianz der RTT.",
      "SACK: Empfänger teilt mit, welche Daten fehlen; nur fehlende Daten werden erneut gesendet.",
      "SACK funktioniert nicht gut bei systematischen Verlusten.",
      "ECN: Router markieren überlastete TCP-Segmente.",
      "Empfänger erkennt Überlast und informiert Sender im ACK.",
      "Sender reagiert verzögert, da ACK abgewartet werden muss.",
      "ECN wird im Internet nur selten eingesetzt."
    ],
    "answerJa": [
      "TCPはRTTの変動から過負荷を推定する。",
      "SACK：受信者が欠損データを通知し、送信者はそのデータだけを再送する。",
      "SACKはパケット損失が連続的な場合にはうまく機能しないことがある。",
      "ECN：ルータが過負荷を検知してTCPセグメントにマークを付ける。",
      "受信者はそれをACKで送信者に伝える。",
      "ACKを待つ必要があり、反応が遅れる可能性がある。",
      "ECNはインターネットではあまり一般的ではない。"
    ],
    "explanationDe": [
      "Neben den klassischen Verfahren wie Slow Start wurden mit SACK (Selective Acknowledgment) und ECN (Explicit Congestion Notification) zwei moderne Mechanismen eingeführt, um TCP effizienter auf Überlastungen reagieren zu lassen.",
      "SACK erlaubt es dem Empfänger, genau anzugeben, welche Daten er erhalten hat und welche fehlen. Dadurch muss der Sender nicht ganze Fenster erneut senden, sondern nur die fehlenden Teile.",
      "Dies reduziert die Zahl unnötiger Übertragungen und spart Bandbreite – insbesondere wenn nur einzelne Pakete verloren gehen.",
      "Allerdings ist SACK weniger wirksam, wenn viele aufeinanderfolgende Pakete fehlen – also bei systematischen oder Burst-Verlusten.",
      "ECN funktioniert anders: Router entlang des Pfads erkennen eine bevorstehende Überlast und markieren die TCP-Segmente anstelle des Droppens.",
      "Der Empfänger erkennt die Markierung und informiert den Sender durch ein spezielles Bit im ACK, sodass dieser seine Rate senken kann.",
      "Da die Reaktion auf ECN verzögert erfolgt (Sender muss ACK abwarten), ist die Kontrolle langsamer als bei Paketverlust. Außerdem wird ECN im realen Internet nur selten genutzt, da es sowohl von Routern als auch Endpunkten aktiv unterstützt werden muss."
    ],
    "explanationJa": [
      "TCPの過負荷制御を補完する技術として、SACK（Selective Acknowledgment）とECN（Explicit Congestion Notification）が導入されました。",
      "SACKは、受信側が「どのデータを受け取っていないか」を詳細に通知する方式です。これにより、送信側は必要なデータだけを再送すればよく、無駄な再送を避けることができます。",
      "例えば、10個中1つだけが失われた場合、従来のTCPでは全てを再送する必要があるのに対し、SACKならその1つだけで済みます。",
      "しかし、連続したパケットが失われるような場合には、SACKでも再送の効率は下がることがあります。",
      "一方、ECNはネットワークのルータがパケットをドロップする代わりに“混雑している”ことをパケットにマークして伝える仕組みです。",
      "受信側がこのマークをACKで送信側に通知し、送信側はその情報をもとに送信速度を下げます。ただし、ACKを待つ必要があるため反応はやや遅れます。",
      "また、ECNを利用するには、通信経路上のすべてのルータと端末が対応している必要があり、現在のインターネットでは対応環境が限られているため、あまり一般的ではありません。"
    ],
    "originalSlideText": "❑ TCP misst Überlast anhand Varianz der RTT\n Betrachtet Netzwerk als Black Box und nutzt externe Maße\n❑ Selective Acknowledgement (SACK)\n Empfänger gibt an, welche Daten fehlen\n Nur benötigte Daten werden neu versandt\n Oft nicht nur zufällige Pakete verloren → Funktioniert nicht sehr gut\n❑ Explicit Congestion Notification (ECN)\n Router auf Pfad messen Überlast und markieren TCP Segment\n Empfänger weiß von Überlast und teilt es in ACK mit\n Dadurch aber Verzögerung: Sender muss auf ACK warten\n Nur selten im Internet verwendet",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 6,
    "questionDe": "(s10) Was ist ein TCP-Segment und welche strukturellen Merkmale gelten für alle Arten von Nachrichten?",
    "questionJa": "TCPセグメントとは何か？そして、すべての通信に共通する構造上の特徴は何か？",
    "answerDe": [
      "Ein TCP-Segment ist eine Nachricht des TCP-Protokolls.",
      "Das Format gilt für Nachrichten mit Daten, ACKs und den 3-Wege-Handshake.",
      "Felder in einem Segment können sich auf beide Datenströme beziehen.",
      "Gleichzeitig: Daten an den Empfänger, ACK für empfangene Segmente, Window Advertisement."
    ],
    "answerJa": [
      "TCPセグメントとは、TCPプロトコルで送受信される1つの通信単位（メッセージ）である。",
      "フォーマットはデータ送信、ACK（確認応答）、3ウェイハンドシェイクなどすべての種類のメッセージに共通して使われる。",
      "各フィールドは、双方向の通信（送信・受信の両方）に関連する情報を含むことができる。",
      "1つのセグメント内で、データの送信とACK応答、受信ウィンドウの通知を同時に行うことが可能。"
    ],
    "explanationDe": [
      "Ein TCP-Segment ist die grundlegende Einheit, mit der das Transmission Control Protocol (TCP) Daten zwischen zwei Computern überträgt.",
      "Egal ob es sich um eine Datenübertragung, ein ACK oder den Verbindungsaufbau handelt – alle diese Nachrichten folgen demselben Format.",
      "Dieses einheitliche Format vereinfacht die Verarbeitung der Pakete durch das Betriebssystem und stellt sicher, dass TCP flexibel mit verschiedenen Anforderungen umgehen kann.",
      "Ein Segment besteht aus einem Header und optionalen Daten. Der Header enthält viele Felder, wie z. B. Sequenznummern, Quell- und Zielport, Prüfsummen und Flags.",
      "Besonders interessant ist, dass Felder im Segment Informationen für beide Richtungen enthalten können – zum Beispiel kann ein Segment Daten vom Client zum Server senden und gleichzeitig ein ACK für zuvor empfangene Daten enthalten.",
      "Diese Multiplex-Funktion ermöglicht einen effizienten Datenaustausch mit minimalem Overhead.",
      "Im Vergleich zu Protokollen wie UDP, die keine solchen kombinierten Funktionen bieten, ist TCP dadurch deutlich leistungsfähiger und zuverlässiger."
    ],
    "explanationJa": [
      "TCPセグメントとは、TCP（Transmission Control Protocol）でデータを送受信する際の基本的な単位です。",
      "セグメントには、通常のデータ転送はもちろん、接続確立の3ウェイハンドシェイクやACK（確認応答）にも共通のフォーマットが使われます。",
      "この統一フォーマットにより、送信側と受信側の処理が簡素化され、安定した通信を実現できます。",
      "各セグメントはヘッダーとデータ本体に分かれており、ヘッダーには送信元・宛先ポート番号、シーケンス番号、確認応答番号、ウィンドウサイズ、チェックサムなどの情報が含まれます。",
      "特に重要なのは、1つのセグメントで複数の機能（データ送信とACK応答など）を同時に処理できることです。",
      "例えば、Webブラウザがサーバからデータを受け取る際に、その応答として自動的に次のデータ要求や確認応答も同じセグメントで送信できます。",
      "このような多機能性により、TCPはUDPのような単純なプロトコルと比べて、より高い信頼性と効率を提供します。"
    ],
    "originalSlideText": "❑ TCP Segment: Nachricht von TCP\n Format einheitlich für Nachrichten mit Daten, ACK, 3-Way Handshake\n❑ Felder einer Nachricht können sich auf beide Datenströme beziehen\n Gleichzeitig Daten zu Empfänger, ACK für empfangene Pakete, Window Advertisement",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 7,
    "questionDe": "(s11) Welche Funktionen haben das ACKNOWLEDGEMENT NUMBER und das WINDOW-Feld in einem TCP-Segment?",
    "questionJa": "TCPセグメントにおけるACKNOWLEDGEMENT NUMBERとWINDOWフィールドはそれぞれどのような役割を果たすか？",
    "answerDe": [
      "ACKNOWLEDGEMENT NUMBER gibt die Sequenznummer der erwarteten nächsten Daten an.",
      "Gleiches ACK wird gesendet, falls ein Segment fehlt und weitere bereits empfangen wurden.",
      "WINDOW zeigt den verfügbaren Puffer beim Empfänger an."
    ],
    "answerJa": [
      "ACKNOWLEDGEMENT NUMBERは、受信側が次に期待しているデータのシーケンス番号を示す。",
      "途中のセグメントが欠けていても、それ以降のセグメントを受け取った場合には同じACKが繰り返される。",
      "WINDOWは受信側のバッファの空き容量を示し、送信側に送信可能な量を知らせる。"
    ],
    "explanationDe": [
      "Das ACKNOWLEDGEMENT NUMBER-Feld in einem TCP-Segment spielt eine zentrale Rolle für die Zuverlässigkeit des Datenverkehrs.",
      "Es zeigt dem Sender an, welche Daten erfolgreich empfangen wurden, indem es die Sequenznummer des nächsten erwarteten Bytes angibt.",
      "Wenn ein Segment verloren geht, aber spätere Segmente eintreffen, sendet der Empfänger wiederholt dasselbe ACK, um dem Sender den Verlust mitzuteilen (cumulative ACK).",
      "Dieses Verhalten wird unter anderem von der 'Fast Retransmit'-Technik genutzt, um Verluste schnell zu erkennen.",
      "Das WINDOW-Feld hingegen gibt an, wie viel freier Speicherpuffer der Empfänger aktuell hat – es dient der Flusskontrolle.",
      "Anhand dieses Wertes entscheidet der Sender, wie viele Daten er senden darf, ohne den Empfänger zu überlasten.",
      "Zusammen ermöglichen diese beiden Felder einen dynamischen, zuverlässigen und anpassungsfähigen Datenfluss, der sich automatisch an Netzwerkbedingungen anpasst."
    ],
    "explanationJa": [
      "TCPセグメントに含まれるACKNOWLEDGEMENT NUMBER（確認応答番号）は、受信側が次に受け取りたいデータのシーケンス番号を送信側に伝えるフィールドです。",
      "例えば、シーケンス番号1000までのデータを正しく受け取っている場合、ACKには1001が入ります。",
      "途中のデータが失われていても、それ以降のデータを受信した場合には、同じACK番号を繰り返し送信して欠損を示すことができます（累積ACK）。",
      "この仕組みは、Fast Retransmitと呼ばれる迅速な再送を促す重要な信号になります。",
      "一方、WINDOW（ウィンドウ）フィールドは、受信側の空きバッファ容量を表しており、送信側に対してどの程度のデータを送ってよいかを知らせます。",
      "これにより、受信側が処理しきれないほどのデータが送られてくるのを防ぎ、通信の安定性を保ちます。",
      "このACKとWINDOWの連携によって、TCPは信頼性の高い通信と効率的なフロー制御を実現しているのです。"
    ],
    "originalSlideText": "❑ ACKNOWLEDGEMENT NUMBER: Sequenznummer der erwarteten nächsten Daten\n Gleiches ACK, falls ein Segment fehlt und weitere Segmente dahinter empfangen\n❑ WINDOW: Freier Puffer",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 8,
    "questionDe": "(s12) Welche Aufgaben haben SEQUENCE NUMBER, PORT-Nummern und CHECKSUM in einem TCP-Segment?",
    "questionJa": "TCPセグメントにおいて、SEQUENCE NUMBER、PORT番号、CHECKSUMはそれぞれどのような役割を持つか？",
    "answerDe": [
      "SEQUENCE NUMBER gibt die Sequenznummer des ersten Bytes der Daten an.",
      "Sie hilft dem Empfänger, die Reihenfolge zuzuordnen und die ACKNOWLEDGEMENT NUMBER zu berechnen.",
      "DESTINATION PORT identifiziert das Zielprogramm, SOURCE PORT das Quellprogramm.",
      "CHECKSUM wird für Header und Daten berechnet und dient der Fehlererkennung."
    ],
    "answerJa": [
      "SEQUENCE NUMBERはデータの最初のバイトのシーケンス番号であり、受信側が順序を把握しACK番号を計算するのに使う。",
      "DESTINATION PORTは宛先プログラム、SOURCE PORTは送信元プログラムを識別する。",
      "CHECKSUMはヘッダーとデータに対して計算され、誤り検出に使われる。"
    ],
    "explanationDe": [
      "Die SEQUENCE NUMBER ist ein zentrales Feld im TCP-Segment und bestimmt, an welcher Position im Datenstrom die enthaltenen Daten beginnen.",
      "Der Empfänger nutzt diese Nummer, um eingehende Segmente korrekt zu ordnen und zu erkennen, ob Daten fehlen oder in der richtigen Reihenfolge ankommen.",
      "Mit Hilfe der SEQUENCE NUMBER berechnet der Empfänger auch die ACKNOWLEDGEMENT NUMBER, die dem Sender mitgeteilt wird.",
      "Die PORT-Nummern (SOURCE und DESTINATION PORT) ermöglichen die Zuordnung des Segments zu einer bestimmten Anwendung oder einem Dienst auf Sender- und Empfängerseite.",
      "Zum Beispiel: Port 80 steht für HTTP, Port 443 für HTTPS, Port 25 für SMTP usw.",
      "Die CHECKSUM schließlich wird über den gesamten TCP-Header und die Daten berechnet und bei der Ankunft erneut überprüft.",
      "Sie dient der Erkennung von Bitfehlern während der Übertragung und stellt sicher, dass nur fehlerfreie Segmente verarbeitet werden – ein wichtiger Bestandteil der TCP-Zuverlässigkeit."
    ],
    "explanationJa": [
      "TCPセグメントのSEQUENCE NUMBER（シーケンス番号）は、データストリーム内でこのセグメントがどこから始まるかを示します。",
      "受信側はこの番号を使って、データの順序を正しく並べたり、欠損があるかどうかを判断したりします。",
      "この番号をもとに、次に期待するデータ位置を示すACKNOWLEDGEMENT NUMBERも計算されます。",
      "SOURCE PORTとDESTINATION PORTは、セグメントがどのアプリケーション間でやり取りされているかを識別するために使われます。",
      "たとえば、ポート80はHTTP、443はHTTPS、25はSMTPなど、通信相手のプロセスを特定するために不可欠です。",
      "CHECKSUM（チェックサム）は、セグメント全体（ヘッダーとデータ）を対象に計算され、送信時に付加されます。",
      "受信側で再度チェックサムを計算し、一致しない場合にはそのセグメントを破棄することで、転送中の誤りを検出します。これはTCPの信頼性を支える重要な仕組みです。"
    ],
    "originalSlideText": "❑ SEQUENCE NUMBER: Sequenznummer des ersten Byte der Daten, Empfänger ordnet Segmente und berechnet ACKNOWLEDGEMENT NUMBER\n❑ DESTINATION PORT: Programm auf Ziel, SOURCE PORT: Programm von Sender\n❑ CHECKSUM: Berechnet für Header und Daten",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 9,
    "questionDe": "(s13) Welche zentralen Funktionen bietet TCP im Vergleich zu anderen Transportprotokollen?",
    "questionJa": "TCPは他のトランスポートプロトコルと比べてどのような主要機能を提供しているか？",
    "answerDe": [
      "TCP ist das wichtigste Transportprotokoll in TCP/IP.",
      "Es bietet Zuverlässigkeit, Flusskontrolle, Full Duplex Verbindungen, Stream Interface und Überlastkontrolle.",
      "Garantie für korrekte Reihenfolge und keine Duplikate bei der Datenübertragung.",
      "Alle Segmente verwenden dasselbe Format für Daten- und Kontrollpakete.",
      "Verlorene Pakete werden adaptiv erneut gesendet."
    ],
    "answerJa": [
      "TCPはTCP/IPで最も重要なトランスポートプロトコルである。",
      "信頼性、フロー制御、フルデュプレックス通信、ストリームインターフェース、過負荷制御などの機能を備える。",
      "データの順序を保証し、重複を防ぐ。",
      "すべてのセグメントがデータ用・制御用に共通のフォーマットを使用する。",
      "失われたパケットは適応的な方法で再送される。"
    ],
    "explanationDe": [
      "TCP (Transmission Control Protocol) ist das am weitesten verbreitete Transportprotokoll im Internet, da es eine Vielzahl an Funktionen für zuverlässige Datenübertragung bietet.",
      "Eines der Hauptmerkmale ist die Zuverlässigkeit: Jedes gesendete Datenpaket wird bestätigt (ACK) und bei Verlust erneut gesendet.",
      "Die Flusskontrolle (Flow Control) regelt, wie viel Daten der Sender abhängig vom freien Puffer des Empfängers schicken darf – dies verhindert Überlastung beim Empfänger.",
      "TCP bietet Full Duplex, d. h. gleichzeitiges Senden und Empfangen von Daten, was beispielsweise bei Videoanrufen oder Chats wichtig ist.",
      "Das Stream Interface erlaubt eine kontinuierliche Datenübertragung ohne vordefinierte Paketgrenzen, im Gegensatz zu Datagrammen wie bei UDP.",
      "Alle TCP-Segmente – egal ob zur Datenübertragung oder für Verbindungsaufbau – nutzen ein einheitliches Segmentformat, was die Verarbeitung vereinfacht.",
      "Die Überlastkontrolle sorgt dafür, dass TCP seine Sendegeschwindigkeit an die aktuelle Netzwerkauslastung anpasst und so die Stabilität des Netzes unterstützt."
    ],
    "explanationJa": [
      "TCP（Transmission Control Protocol）は、インターネットで最も広く使用されているトランスポート層プロトコルで、信頼性のあるデータ転送を実現するための多くの機能を備えています。",
      "その中でも重要なのが信頼性です。送信されたデータはACK（確認応答）によって確認され、もし損失があれば再送されます。",
      "フロー制御では、受信側のバッファサイズに応じて送信量を調整することで、受信側の処理能力を超えないようにします。",
      "また、TCPはフルデュプレックス通信をサポートしており、送受信を同時に行えるため、双方向のやり取りが必要なアプリケーション（例：ビデオ会議）にも適しています。",
      "データは連続したストリームとして扱われ、固定の区切りがなく自由なサイズで転送されます。これはUDPのようなパケット単位とは異なります。",
      "データパケット（データセグメント）も制御パケット（三者間ハンドシェイクなど）も同じフォーマットで送られるため、実装が簡素化されます。",
      "また、ネットワークが混雑している場合には、TCPは自動的に送信速度を調整し、ネットワークの健全性を維持する機能（過負荷制御）も備えています。"
    ],
    "originalSlideText": "❑ TCP ist wichtigstes Transportprotokoll von TCP/IP\n❑ Bietet Zuverlässigkeit, Flusskontrolle, Full Duplex Verbindungen, Stream Interface, Überlastkontrolle\n❑ Garantiert Daten in richtiger Reihenfolge ohne Duplikate zu übertragen\n❑ Alle Segmente benutzen gleiches Format (Kontroll- und Datenpakete)\n❑ Sender überträgt verlorene Pakete anhand adaptiven Verfahren erneut",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 10,
    "questionDe": "(s15) Wie werden Weiterleitungstabellen in Routern erstellt und aktualisiert?",
    "questionJa": "ルーターにおけるルーティングテーブル（転送テーブル）はどのように生成・更新されるのか？",
    "answerDe": [
      "Weiterleitungstabellen müssen erstellt und regelmäßig aktualisiert werden.",
      "Routing-Informationen werden an andere Systeme weitergeleitet.",
      "Es existieren verschiedene Routingprotokolle."
    ],
    "answerJa": [
      "ルーティングテーブルは初期に構築され、その後も継続的に更新される必要がある。",
      "ルーティング情報は他のシステムにも伝達される。",
      "複数のルーティングプロトコルが存在する。"
    ],
    "explanationDe": [
      "Router benötigen sogenannte Weiterleitungstabellen (Routing Tables), um zu entscheiden, über welchen Weg ein IP-Paket weitergeleitet werden soll.",
      "Diese Tabellen enthalten Informationen über erreichbare Netzwerke und die jeweils nächste Station (Next Hop) auf dem Weg zum Ziel.",
      "Die Erstellung dieser Tabellen kann entweder manuell (statisches Routing) oder automatisch über Routingprotokolle (dynamisches Routing) erfolgen.",
      "Routingprotokolle wie RIP, OSPF oder BGP ermöglichen es Routern, Informationen über Netzwerkverbindungen und Topologieänderungen untereinander auszutauschen.",
      "Sobald sich die Netzstruktur verändert – etwa durch einen Ausfall oder durch das Hinzufügen neuer Netze –, müssen die Tabellen entsprechend aktualisiert werden.",
      "Diese Aktualisierungen erfolgen entweder durch Benachrichtigungen anderer Router oder durch regelmäßige Austauschprotokolle.",
      "Dadurch wird gewährleistet, dass IP-Pakete immer den effizientesten oder verfügbaren Pfad nehmen und Netzwerkausfälle vermieden bzw. umgangen werden können."
    ],
    "explanationJa": [
      "ルーターは、IPパケットをどの経路で転送するかを決定するために、ルーティングテーブル（転送テーブル）を使用します。",
      "このテーブルには、到達可能なネットワークと、それぞれの宛先に対する次の中継地点（ネクストホップ）の情報が記録されています。",
      "ルーティングテーブルは、手動（静的ルーティング）で設定される場合と、自動的にルーティングプロトコルを用いて構築・更新される場合があります。",
      "たとえば、RIP、OSPF、BGPといったプロトコルは、ルーター同士がネットワーク情報を交換し、ルーティング経路を最適化することを可能にします。",
      "ネットワーク構成が変更されたとき（障害発生や新規ネットワーク追加など）、ルーティングテーブルも更新する必要があります。",
      "この更新は、他のルーターからの通知や、定期的な情報交換によって行われます。",
      "これにより、IPパケットが常に最も効率的または到達可能な経路を通って送信されるようになり、ネットワークの信頼性が保たれます。"
    ],
    "originalSlideText": "❑ Weiterleitungstabellen in Routern müssen erstellt / aktualisiert werden\n❑ Routing Informationen müssen an andere Systeme weitergeleitet werden\n❑ Verschiedene Routingprotokolle existieren",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 11,
    "questionDe": "(s16) Was ist der Unterschied zwischen statischem und dynamischem Routing?",
    "questionJa": "静的ルーティングと動的ルーティングの違いは何か？",
    "answerDe": [
      "Statisches Routing: Tabelle wird beim Systemstart erstellt.",
      "Nur manuelle Änderungen durch Administrator möglich.",
      "Dynamisches Routing: Routing-Software aktualisiert Tabelle kontinuierlich.",
      "Stellt optimale Routen sicher, erkennt Netzwerkfehler.",
      "Initialisierung mit statischen Routen möglich."
    ],
    "answerJa": [
      "静的ルーティング：ルーティングテーブルはシステム起動時に作成される。",
      "管理者による手動変更のみ可能。",
      "動的ルーティング：ルーティングソフトウェアがテーブルを継続的に更新する。",
      "最適な経路を選択し、ネットワーク障害も検出できる。",
      "初期設定には静的ルートを用いることも可能。"
    ],
    "explanationDe": [
      "Statisches und dynamisches Routing sind zwei grundlegende Methoden, um Routingtabellen in Netzwerken zu verwalten.",
      "Beim statischen Routing wird die Weiterleitungstabelle einmal beim Systemstart festgelegt. Änderungen erfordern manuelle Eingriffe durch einen Administrator.",
      "Dieses Verfahren ist einfach und benötigt keine zusätzliche Software, eignet sich aber nur für stabile Netzwerke ohne häufige Änderungen.",
      "Dynamisches Routing hingegen nutzt spezialisierte Software (Route Propagation), die kontinuierlich die Netzwerkstruktur beobachtet und bei Änderungen automatisch die Routingtabellen anpasst.",
      "Dadurch können dynamische Protokolle auf Ausfälle reagieren, neue Netzwerke integrieren und immer optimale Pfade für Datenpakete berechnen.",
      "Ein Vorteil des dynamischen Routings ist auch die Fähigkeit, mit anderen Routern zu kommunizieren und deren Informationen in die eigene Routingentscheidung einzubeziehen.",
      "Trotzdem kann dynamisches Routing mit einem statischen Basissatz initialisiert werden, z. B. wenn ein neues Gerät ins Netzwerk integriert wird."
    ],
    "explanationJa": [
      "静的ルーティングと動的ルーティングは、ネットワーク上でルーティングテーブルを構築・管理するための2つの基本的な方法です。",
      "静的ルーティングでは、ルーティングテーブルはシステム起動時に手動で設定され、その後の変更も管理者が明示的に行う必要があります。",
      "この方法はシンプルで追加のソフトウェアを必要とせず、小規模で変更の少ないネットワークに適しています。",
      "一方、動的ルーティングはルーティング情報伝播用のソフトウェアを用い、ネットワークの構成や状況を常に監視し、必要に応じて自動でテーブルを更新します。",
      "これにより、機器の障害や新しいネットワークの追加に柔軟に対応でき、データが常に最適な経路で送られるようになります。",
      "また、他のルーターと情報を交換し、それをもとに経路を調整できる点も動的ルーティングの利点です。",
      "なお、動的ルーティングでも初期状態の構築には静的ルートを利用することがあり、両者は排他的ではなく補完的に使われることがあります。"
    ],
    "originalSlideText": "❑ Statisches Routing\n Weiterleitungstabelle bei Systemstart erstellt\n Kann nur manuell von Administrator geändert werden\n❑ Dynamisches Routing\n Route Propagation Software aktualisiert Weiterleitungstabelle kontinuierlich\n Stellt sicher, dass Datagramme optimale Route nutzen\n Kommuniziert mit anderen Systemen, erkennt Netzwerkfehler\n Initialisierung mit Routen wie statisches Routing",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 12,
    "questionDe": "(s17) Welche Vor- und Nachteile hat statisches Routing?",
    "questionJa": "静的ルーティングにはどのような利点と欠点があるか？",
    "answerDe": [
      "Vorteile:",
      "– Einfach zu definieren.",
      "– Keine zusätzliche Software notwendig.",
      "– Kein zusätzlicher Verkehr im Internet.",
      "– Kein Rechenaufwand für Routinginformationen.",
      "Nachteile:",
      "– Unflexibel.",
      "– Berücksichtigt keine Netzwerkfehler oder Topologieänderungen."
    ],
    "answerJa": [
      "利点：",
      "– 設定が簡単。",
      "– 追加のソフトウェアが不要。",
      "– ネットワークに余分な通信が発生しない。",
      "– 情報転送のための計算処理が不要。",
      "欠点：",
      "– 柔軟性に欠ける。",
      "– ネットワーク障害や構成変更に対応できない。"
    ],
    "explanationDe": [
      "Statisches Routing ist besonders in kleinen oder sehr stabilen Netzwerken beliebt, da es leicht zu konfigurieren ist.",
      "Ein Administrator kann einfache Regeln festlegen, die genau bestimmen, wohin bestimmte Datenpakete gesendet werden sollen.",
      "Da keine Routingprotokolle eingesetzt werden, entsteht kein zusätzlicher Datenverkehr zur Routenberechnung – das spart Bandbreite.",
      "Auch der Router selbst wird entlastet, da er keine Rechenressourcen für das Sammeln und Auswerten von Netzwerkstatusdaten benötigt.",
      "Allerdings ist diese Methode nicht flexibel: Wenn sich die Netzwerkstruktur ändert oder ein Router ausfällt, bleibt die Routingtabelle unverändert.",
      "Das bedeutet, dass Daten verlorengehen können oder fehlerhafte Wege eingeschlagen werden, bis ein Administrator manuell eingreift.",
      "In großen Netzwerken mit dynamischen Anforderungen ist statisches Routing daher ungeeignet – dort ist dynamisches Routing vorzuziehen."
    ],
    "explanationJa": [
      "静的ルーティングは、小規模または構成が安定しているネットワークでよく使われます。設定が簡単で、決められたルールに基づいて通信を制御できます。",
      "管理者は、特定の宛先に対してどのルートを使うかを手動で指定し、その情報はネットワーク機器に保存されます。",
      "この方法では、ルーティングプロトコルによる通信が発生しないため、帯域幅が節約され、ルーターの処理負荷も軽くなります。",
      "しかし、ネットワークに変更が加わった場合（たとえばルーターの故障や新しいネットワークの追加など）には、自動的に対応できません。",
      "このため、通信が失敗したり、誤ったルートを通ってしまうリスクがあり、手動での修正が必要になります。",
      "こうした理由から、構成が頻繁に変わる大規模なネットワークには不向きです。",
      "その場合は、動的ルーティングの導入が望ましく、より柔軟かつ効率的な運用が可能になります。"
    ],
    "originalSlideText": "❑ Vorteile\n Leicht zu definieren\n Benötigt keine weitere Software\n Kein zusätzlicher Verkehr im Internet\n Keine Rechenleistung für Weiterleitung der Informationen\n❑ Nachteile\n Unflexibel\n Netzwerkfehler oder Topologieänderungen nicht berücksichtigt",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 13,
    "questionDe": "(s18) In welchen typischen Fällen verwenden Hosts statisches Routing und wie sieht eine solche Weiterleitungstabelle aus?",
    "questionJa": "ホストが静的ルーティングを利用する典型的なケースとはどのようなものか？またそのルーティングテーブルはどのようになるか？",
    "answerDe": [
      "Die meisten Hosts nutzen statisches Routing.",
      "Typischerweise gibt es nur eine Netzwerkverbindung und einen Router zum Internet.",
      "Zwei Einträge in der Routingtabelle sind ausreichend.",
      "Es wird eine Default Route für alle Ziele außerhalb des lokalen Netzes genutzt."
    ],
    "answerJa": [
      "ほとんどのホストは静的ルーティングを利用している。",
      "一般的に、1つのネットワーク接続と1台のルーターでインターネットに接続している。",
      "ルーティングテーブルには2つのエントリで十分である。",
      "ローカルネットワーク外のすべての通信にはデフォルトルートが使われる。"
    ],
    "explanationDe": [
      "In vielen Fällen, z. B. bei gewöhnlichen PCs oder Laptops in Haushalten oder kleinen Firmen, ist statisches Routing die bevorzugte Lösung.",
      "Solche Hosts haben in der Regel nur eine einzige Netzwerkverbindung – etwa über WLAN oder Ethernet – und sind mit genau einem Router verbunden, der den Zugang zum Internet vermittelt.",
      "In diesem Fall reicht es, zwei statische Routing-Einträge zu definieren: einer für das lokale Netz und einer als Default Route für alle anderen IP-Adressen.",
      "Die Default Route (Standardgateway) leitet alle Pakete, die nicht explizit dem lokalen Netz zugeordnet sind, an den Router weiter.",
      "Diese einfache Konfiguration ist ausreichend für den alltäglichen Internetgebrauch und erfordert keine dynamische Routenanpassung.",
      "Auch bei Geräten wie Druckern, IoT-Geräten oder Servern ohne Routingsoftware ist diese Methode üblich.",
      "Da sich die Netzstruktur in solchen Umgebungen selten ändert, ist statisches Routing eine zuverlässige und wartungsarme Lösung."
    ],
    "explanationJa": [
      "一般家庭のPCやノートパソコン、あるいは小規模オフィスのホストでは、静的ルーティングが一般的に使用されています。",
      "このようなホストは通常、1つのネットワーク接続（たとえばWi-Fiや有線LAN）を通じて、1台のルーターに接続し、そこからインターネットにアクセスします。",
      "そのため、ルーティングテーブルには最低限の2つのエントリ（ローカルネットワーク用とデフォルトルート用）を設定するだけで済みます。",
      "デフォルトルートとは、宛先がローカルネットワークに存在しないときに、すべてのパケットを特定のゲートウェイ（ルーター）に送るルールのことです。",
      "このような単純な構成でも、インターネットや社内システムに支障なくアクセスできます。",
      "プリンターやIoT機器、簡易サーバーなど、動的ルーティングが不要なデバイスでも同様の方法がよく使われます。",
      "ネットワーク構成が頻繁に変わらない環境では、静的ルーティングは管理が容易で信頼性の高い方法です。"
    ],
    "originalSlideText": "❑ Großteil der Hosts nutzt statisches Routing\n Oft eine Netzwerkverbindung und Router verbindet zu Internet\n❑ Im Beispiel reichen schon zwei Einträge\n❑ Nutzt Default Route für alle Hosts außerhalb des lokalen Netz",
    "explanationImage": "",
    "questionImage": ""
  },
  {
    "id": 14,
    "questionDe": "(s19) Wie geht dynamisches Routing mit Netzwerkverbindungen und -ausfällen um?",
    "questionJa": "動的ルーティングはネットワーク接続や障害にどのように対応するのか？",
    "answerDe": [
      "Die meisten Router nutzen dynamisches Routing.",
      "Statisches Routing ist nur bei einfacher Verbindung wie R1 zum ISP denkbar.",
      "Bei Verbindung von zwei ISPs müssen dynamische Routinginformationen ausgetauscht werden."
    ],
    "answerJa": [
      "大多数のルーターは動的ルーティングを使用している。",
      "単純な接続（例：R1がISPに接続している場合）では静的ルーティングも可能。",
      "2つのISPが接続されている場合は、動的なルーティング情報の交換が必要となる。"
    ],
    "explanationDe": [
      "Dynamisches Routing ist besonders für Netzwerke mit mehreren möglichen Pfaden oder wechselnden Verbindungen unverzichtbar.",
      "In einem einfachen Szenario – etwa wenn ein Router wie R1 nur mit einem einzigen ISP verbunden ist – könnte auch statisches Routing ausreichen.",
      "Sobald jedoch mehrere ISPs oder Pfade im Spiel sind, ist dynamisches Routing notwendig, damit sich die Router gegenseitig über erreichbare Netzwerke und Änderungen informieren können.",
      "Durch den Austausch von Routinginformationen können Router Netzwerkveränderungen, z. B. neue Pfade oder Ausfälle, automatisch erkennen und darauf reagieren.",
      "Ohne dynamische Aktualisierung könnten Pakete über nicht funktionierende Verbindungen geschickt werden, was zu Datenverlust oder Verzögerung führt.",
      "Dynamisches Routing ermöglicht es dem Netzwerk, bei Verbindungsproblemen automatisch Ausweichrouten zu finden, ohne dass ein Administrator eingreifen muss.",
      "Das ist insbesondere für große Netzwerke oder das Internet unerlässlich, wo manuelle Verwaltung unmöglich wäre."
    ],
    "explanationJa": [
      "動的ルーティングは、複数の通信経路が存在するネットワークや、接続状況が変化する環境で不可欠な仕組みです。",
      "単純に1台のルーター（例：R1）が1つのISPにだけ接続されている場合は、静的ルーティングでも十分なことがあります。",
      "しかし、複数のISPとの接続や経路が存在する場合には、ルーター同士が到達可能なネットワークやその変更をリアルタイムで交換する必要があります。",
      "動的ルーティングでは、ルーターが自動的にネットワークの変化を検出し、それに応じてルーティングテーブルを更新します。",
      "これにより、接続障害が発生しても、手動による設定変更なしで適切な代替経路を選択できます。",
      "もし動的ルーティングがなければ、パケットは障害が発生している経路に送られ続け、通信失敗や大きな遅延を引き起こします。",
      "特にインターネットのように大規模で複雑なネットワークでは、動的ルーティングが安定運用の鍵となっています。"
    ],
    "originalSlideText": "❑ Großteil der Router nutzt Dynamisches Routing\n❑ Statisches Routing für Router 𝑅1 in letzten Beispiel denkbar\n Router hat Anbindung an ISP\n Leitet alle Daten nur an diesen weiter\n❑ Bei Verbindung von zwei ISPs müssen dynamische Routing Informationen ausgetauscht werden",
    "explanationImage": "",
    "questionImage": ""
  }
  
  
  
  
  
  
  
  
  
  
  
  
  
  
]