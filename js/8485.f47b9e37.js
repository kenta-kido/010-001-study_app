"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[8485],{495:function(e,n,r){r.d(n,{A:function(){return N}});var i=r(6768),t=r(4232),a=r(144);const s={class:"card mb-4 shadow-sm"},d={class:"card-body"},l={class:"card-title"},u={class:"text-muted fst-italic"},g={key:0},m=["src"],o={key:1,class:"mt-3"},h={class:"alert alert-success"},c={key:0},P={key:1},f={class:"alert alert-info mt-2"},w={key:0},I={key:1},b={class:"mt-3"},z={key:0},k={key:1},D={key:2},v={key:3},p={key:4},F=["src"],E={class:"mt-4"},T={class:"border rounded p-3 bg-white text-secondary",style:{"white-space":"pre-wrap","font-family":"inherit"}};var H={__name:"QuestionItem",props:{question:Object},setup(e){const n=(0,a.KR)(!1);return(r,a)=>((0,i.uX)(),(0,i.CE)("div",s,[(0,i.Lk)("div",d,[(0,i.Lk)("h5",l,"Q"+(0,t.v_)(e.question.id)+": "+(0,t.v_)(e.question.questionJa),1),(0,i.Lk)("p",u,"("+(0,t.v_)(e.question.questionDe)+")",1),e.question.questionImage?((0,i.uX)(),(0,i.CE)("div",g,[(0,i.Lk)("img",{src:`./images/${e.question.questionImage}`,class:"img-fluid rounded my-2 border",alt:"question image"},null,8,m)])):(0,i.Q3)("",!0),(0,i.Lk)("button",{class:"btn btn-outline-primary mt-2",onClick:a[0]||(a[0]=e=>n.value=!n.value)},(0,t.v_)(n.value?"Hide Answer":"Check Answer"),1),n.value?((0,i.uX)(),(0,i.CE)("div",o,[(0,i.Lk)("div",h,[a[1]||(a[1]=(0,i.Lk)("strong",null,"Antwort (De):",-1)),a[2]||(a[2]=(0,i.Lk)("br",null,null,-1)),Array.isArray(e.question.answerDe)?((0,i.uX)(),(0,i.CE)("ul",c,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(e.question.answerDe,(e,n)=>((0,i.uX)(),(0,i.CE)("li",{key:n},(0,t.v_)(e),1))),128))])):((0,i.uX)(),(0,i.CE)("p",P,(0,t.v_)(e.question.answerDe),1))]),(0,i.Lk)("div",f,[a[3]||(a[3]=(0,i.Lk)("strong",null,"Übersetzung (Ja):",-1)),a[4]||(a[4]=(0,i.Lk)("br",null,null,-1)),Array.isArray(e.question.answerJa)?((0,i.uX)(),(0,i.CE)("ul",w,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(e.question.answerJa,(e,n)=>((0,i.uX)(),(0,i.CE)("li",{key:n},(0,t.v_)(e),1))),128))])):((0,i.uX)(),(0,i.CE)("p",I,(0,t.v_)(e.question.answerJa),1))]),(0,i.Lk)("div",b,[a[6]||(a[6]=(0,i.Lk)("p",{class:"fw-bold mb-1"},"Erklärung (De):",-1)),Array.isArray(e.question.explanationDe)?((0,i.uX)(),(0,i.CE)("div",z,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(e.question.explanationDe,(e,n)=>((0,i.uX)(),(0,i.CE)("p",{key:n},(0,t.v_)(e),1))),128))])):((0,i.uX)(),(0,i.CE)("p",k,(0,t.v_)(e.question.explanationDe),1)),a[7]||(a[7]=(0,i.Lk)("p",{class:"fw-bold mb-1"},"解説 (Ja):",-1)),Array.isArray(e.question.explanationJa)?((0,i.uX)(),(0,i.CE)("div",D,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(e.question.explanationJa,(e,n)=>((0,i.uX)(),(0,i.CE)("p",{key:n},(0,t.v_)(e),1))),128))])):((0,i.uX)(),(0,i.CE)("p",v,(0,t.v_)(e.question.explanationJa),1)),e.question.explanationImage?((0,i.uX)(),(0,i.CE)("div",p,[(0,i.Lk)("img",{src:`./images/${e.question.explanationImage}`,class:"img-fluid rounded my-2 border",alt:"explanation image"},null,8,F)])):(0,i.Q3)("",!0),(0,i.Lk)("div",E,[a[5]||(a[5]=(0,i.Lk)("p",{class:"fw-bold mb-1"},"原文（スライド抜粋）:",-1)),(0,i.Lk)("div",T,(0,t.v_)(e.question.originalSlideText),1)])])])):(0,i.Q3)("",!0)])]))}};const x=H;var N=x},8485:function(e,n,r){r.r(n),r.d(n,{default:function(){return w}});r(8111),r(116);var i=r(6768),t=r(4232),a=r(144),s=r(1387),d=r(495),l=r(3529),u=JSON.parse('[{"id":1,"questionDe":"(s3) Was sind die Ziele der Vorlesung über IP-Datagramme?","questionJa":"この講義（IPデータグラム）で学ぶべき目的・ゴールは何か？","answerDe":["Einblick in den Aufbau von IP-Datagrammen.","Verständnis der Erzeugung von IP-Datagrammen.","Verständnis des Transports von IP-Datagrammen."],"answerJa":["IPデータグラムの構造についての理解。","IPデータグラムの生成方法の理解。","IPデータグラムの転送方法の理解。"],"explanationDe":["In dieser Vorlesung geht es um ein zentrales Element des Internets: das IP-Datagramm. Ziel ist es, den Studierenden ein umfassendes Verständnis davon zu vermitteln, wie IP-Datagramme aufgebaut sind, wie sie erzeugt werden und wie sie durch das Internet transportiert werden.","Der Aufbau bezieht sich auf die Struktur eines Datagramms, das in einen Header und einen Payload unterteilt ist. Der Header enthält wichtige Steuerinformationen wie Quell- und Zieladresse, während der Payload die eigentlichen Daten trägt.","Die Erzeugung von IP-Datagrammen erfolgt durch sendende Applikationen oder Betriebssysteme. Dabei werden die Daten in Blöcke aufgeteilt und mit einem Header versehen.","Der Transport betrifft den Weg eines Datagramms vom Sender bis zum Empfänger über mehrere Netzwerke und Router hinweg. Dabei wird das Prinzip des verbindungslosen Dienstes verwendet, bei dem jedes Datagramm unabhängig übertragen wird.","Verglichen mit verbindungsorientierten Diensten wie TCP ist das IP-Protokoll einfacher, aber auch unzuverlässiger. Diese Einfachheit erlaubt jedoch eine hohe Flexibilität und Effizienz im Netzwerk.","Ein Beispiel aus dem Alltag: Beim Versenden einer E-Mail werden die Inhalte in Datagramme gepackt und auf verschiedenen Wegen durch das Internet geleitet, bevor sie beim Empfänger wieder zusammengesetzt werden.","Dieses Wissen bildet die Grundlage für das Verständnis moderner Netzwerktechnologien wie IPv4, IPv6, NAT oder Routing-Protokolle."],"explanationJa":["この講義では、インターネットの中核技術であるIPデータグラムについて学びます。目的は、IPデータグラムがどのように構造化され、どのように生成され、どのようにインターネットを通じて転送されるのかを理解することです。","データグラムの構造とは、主にヘッダーとペイロード（データ本体）に分かれており、ヘッダーには送信元や宛先アドレス、フラグメント情報など、制御に必要な情報が格納されます。","データグラムはアプリケーションやOSによって生成され、データは一定の単位で分割され、ヘッダー情報とともに送信されます。","これらのデータグラムは、インターネット上の複数のルーターやネットワークを経由して受信者に届けられます。このとき「接続なし」の方式（verbindungsloser Dienst）で個別に送信され、各パケットは独立して処理されます。","例えば、TCPのような接続指向型のプロトコルと比べると、IPはシンプルである反面、到達保証がありません。ただし、このシンプルさによりネットワーク上での処理が高速で柔軟になります。","身近な例としては、Eメールの送信時に、本文や添付ファイルがいくつかのデータグラムに分割され、異なる経路で送られてから受信者側で再構成される、という流れがあります。","このような知識は、IPv4やIPv6、NAT（アドレス変換）、ルーティングプロトコルといったネットワーク技術を理解するための基礎となります。"],"originalSlideText":"Ziele:\\n❑ Einblick in den Aufbau, \\ndie Erzeugung und den \\nTransport von IP \\nDatagrammen","explanationImage":"","questionImage":""},{"id":2,"questionDe":"(s5) Was versteht man unter einem IP-Datagramm und was gehört zu dessen Einführung?","questionJa":"IPデータグラムとは何か？導入としてどのような観点が重要とされているか？","answerDe":["Format der Pakete im Internet.","Kapselung von Datagrammen.","Weiterleitung von Datagrammen.","Fragmentierung und Zusammensetzung von Fragmenten."],"answerJa":["インターネットにおけるパケットの形式。","データグラムのカプセル化。","データグラムの転送方法。","フラグメント化とその再構成。"],"explanationDe":["Ein IP-Datagramm ist die grundlegende Einheit der Datenübertragung im Internet. Es stellt ein Paket dar, das aus Steuerinformationen (Header) und Nutzdaten (Payload) besteht.","Im Rahmen der Einführung wird betont, dass man das Format dieser Pakete verstehen muss – insbesondere, wie sie innerhalb des Internets strukturiert und verarbeitet werden.","Die Kapselung bezieht sich darauf, wie ein IP-Datagramm in andere Netzwerkrahmen eingebettet wird, damit es über unterschiedliche physische Netzwerke übertragen werden kann.","Bei der Weiterleitung nutzt das Internet das sogenannte Next-Hop-Prinzip, bei dem Router basierend auf der Zieladresse entscheiden, wohin das Datagramm als Nächstes geschickt wird.","Fragmentierung ist ein Mechanismus, um große Datagramme aufzuteilen, wenn ein Netzwerk auf dem Pfad nur kleinere Einheiten unterstützt. Die Wiederzusammensetzung der Fragmente erfolgt erst beim Empfänger.","Ein Beispiel: Beim Versenden eines großen Videos kann das Video in viele kleine Datagramme zerlegt werden, die über verschiedene Routen ankommen. Der Empfänger muss sie korrekt zusammensetzen.","Die Einführung legt somit die Basis für ein Verständnis der IP-Kommunikation und betont, dass mehrere Prozesse – Struktur, Transport, Fragmentierung – eng miteinander verbunden sind."],"explanationJa":["IPデータグラムとは、インターネット上での基本的なデータ転送単位を指します。ヘッダー（制御情報）とペイロード（データ本体）で構成され、ネットワークを介して送受信されます。","この講義の導入部では、まずインターネットで扱われるパケット形式そのものを理解することが重要だとされています。特に、どのように構造化され、処理されるかが鍵です。","カプセル化とは、IPデータグラムをイーサネットなどの異なるネットワーク技術のフレーム内に包み込む（エンキャプスレーションする）手法です。これにより物理的に異なるネットでも伝送可能になります。","データグラムの転送では、「次の中継点（Next Hop）」の概念が使われ、ルーターがパケットの宛先情報をもとに、どこへ送るかを決定します。","フラグメント化とは、ネットワークの制限（MTU）に応じて大きなパケットを分割する処理で、受信側で元に戻す（再構成する）必要があります。","例えば、動画ファイルを送るとき、そのデータは複数の小さなデータグラムに分かれて送信されます。各データグラムは異なる経路をたどり、受信者のもとで正しく並び替えて統合されます。","このように、IP通信ではパケットの構造、送信方法、フラグメント処理などが密接に関係しており、それらの連携を理解することがネットワークの理解に不可欠です。"],"originalSlideText":"Einführung\\n❑ Bisher: \\n Architektur des Internet\\n Adressierung im Internet\\n❑ Format der Pakete im Internet\\n❑ Kapselung von Datagrammen, Weiterleitung, Fragmentierung, \\nZusammensetzung von Fragmenten","explanationImage":"","questionImage":""},{"id":3,"questionDe":"(s6) Was bedeutet verbindungsloser Dienst im Internet?","questionJa":"インターネットにおける『接続なしサービス（verbindungsloser Dienst）』とは何か？","answerDe":["Internet verwendet verbindungslosen Dienst als grundlegenden Übertragungsdienst.","Zuverlässiger, verbindungsorientierter Dienst baut auf diesem verbindungslosen Dienst auf."],"answerJa":["インターネットは基本的な転送手段として『接続なしサービス』を使用している。","信頼性のある接続型サービス（例：TCP）は、この接続なしサービスの上に構築されている。"],"explanationDe":["Ein verbindungsloser Dienst bedeutet, dass keine dauerhafte Verbindung zwischen Sender und Empfänger aufgebaut wird. Jedes Datenpaket wird unabhängig verschickt – ohne zu prüfen, ob der Empfänger bereit ist oder ob vorherige Pakete angekommen sind.","Im Internet basiert das IP-Protokoll auf diesem Prinzip. Es schickt sogenannte IP-Datagramme ohne Sicherstellung der Zustellung, Reihenfolge oder Korrektheit.","Dieser Ansatz ermöglicht eine einfache und flexible Übertragung über verschiedene Netzwerke hinweg – unabhängig davon, ob sie zuverlässig oder instabil sind.","Ein Beispiel: Beim Versenden von E-Mails oder beim Streaming von Musik wird jedes Datenpaket separat gesendet. Selbst wenn ein Paket verloren geht, wird die Übertragung fortgesetzt.","Ein verbindungsorientierter Dienst – wie das TCP-Protokoll – baut auf diesem Mechanismus auf und fügt Funktionen wie Fehlererkennung, Paket-Wiederholung und Reihenfolge-Sicherung hinzu.","Vergleicht man dies mit einem Telefonat (verbindungsorientiert) und einer Postkarte (verbindungslos): Bei der Postkarte weiß man nicht, ob oder wann sie ankommt. Das ist die Idee des verbindungslosen Dienstes.","Diese Trennung von Basisübertragung (verbindungslos) und Zusatzfunktionen (z. B. durch TCP) macht das Internet skalierbar und effizient."],"explanationJa":["『接続なしサービス（verbindungsloser Dienst）』とは、送信者と受信者の間に事前の接続を確立せず、データパケットを個別・独立に送信する方式を指します。","インターネットの根幹をなすIPプロトコルはこの方式を採用しており、各IPデータグラムは一つずつ単独で送られ、相手が受け取ったか、順番通りか、正しいかなどは確認されません。","この方式のメリットは、柔軟性とシンプルさです。ネットワークの途中でルートが変わっても問題なく機能し、異なる種類のネットワーク（有線・無線など）をまたいで利用できます。","たとえば、メールを送る際や音楽をストリーミングする際には、各データの断片が個別に送られており、どれかが遅れても通信全体は進行します。","一方、TCPのような『接続型サービス（verbindungsorientierter Dienst）』は、このIPの上に構築され、パケットの順序や到達の保証、エラーの修正などを提供します。","イメージで言えば、接続なしは『はがき』のようなもので、送っただけで相手が受け取ったか分かりません。一方、電話は接続を確立してから会話するため、確実なやり取りが可能です。","このように、インターネットではまず軽量で効率的な接続なしの仕組みを土台にし、必要に応じて接続型のプロトコルを使うことで、柔軟かつ高性能な通信を実現しています。"],"originalSlideText":"Verbindungsloser Dienst\\n❑ Internet verwendet verbindungslosen Dienst als \\ngrundlegenden Übertragungsdienst\\n❑ Zuverlässiger, verbindungsorientierter Dienst baut auf \\ndiesen auf und nutzt diesen","explanationImage":"","questionImage":""},{"id":4,"questionDe":"(s7) Wie funktioniert die Übertragung virtueller Pakete im verbindungslosen Dienst?","questionJa":"接続なしサービスにおいて、仮想パケットはどのように転送されるのか？","answerDe":["Verbindungsloser Dienst erweitert das Prinzip von Paket Switching.","Pakete werden unabhängig voneinander durch das Internet übertragen.","Jedes Paket enthält Informationen über den Empfänger.","Router leiten Pakete weiter, indem sie die Zieladresse nutzen, um den nächsten Router auf dem Pfad zu bestimmen."],"answerJa":["接続なしサービスはパケットスイッチングの原理を拡張している。","各パケットは独立してインターネット上を転送される。","各パケットには宛先に関する情報が含まれている。","ルーターは宛先アドレスをもとに、次のルーターを決定してパケットを転送する。"],"explanationDe":["Im verbindungslosen Dienst wird das Prinzip des Packet Switching verwendet, bei dem jede Nachricht in kleine Pakete aufgeteilt wird. Diese Pakete werden einzeln und unabhängig voneinander durch das Netzwerk gesendet.","Der Begriff \'virtuelle Pakete\' beschreibt dabei Pakete, die nicht an bestimmte Hardwareformate gebunden sind, sondern nach einem einheitlichen Internetformat gestaltet sind.","Jedes Paket enthält die vollständige Zieladresse, wodurch es unabhängig von anderen Paketen den richtigen Pfad durch das Netzwerk finden kann.","Router im Netzwerk analysieren die Zieladresse und treffen dann auf Basis ihrer Weiterleitungstabellen eine Entscheidung, an welchen \'nächsten Hop\' sie das Paket senden.","Das bedeutet, dass Pakete sogar in unterschiedlicher Reihenfolge oder über unterschiedliche Routen beim Empfänger ankommen können.","Ein Beispiel ist das Streaming von Musik: Die Datenpakete für einen Song können über verschiedene Wege ankommen, ohne dass vorher eine feste Verbindung eingerichtet wurde.","Dieser Mechanismus macht das Internet robust und anpassungsfähig – selbst bei Ausfällen oder Änderungen in der Netzwerkstruktur funktioniert die Kommunikation weiter."],"explanationJa":["接続なしサービスでは、『パケットスイッチング』という通信方式が採用されています。これは、メッセージを複数の小さなパケットに分割して、それぞれ個別にネットワークを通じて送信するという方式です。","ここで言う『仮想パケット』とは、ハードウェアの物理形式に依存しない、インターネット用に統一された形式のパケットのことを指します。","各パケットには完全な宛先IPアドレスが含まれており、どのルートを通るかはその都度ルーターが判断するため、前後のパケットと異なる経路を通ることもあります。","ルーターはパケットを受け取ると、その宛先アドレスを解析し、自身のルーティングテーブルをもとに『次に送るべきルーター（Next Hop）』を決定します。","そのため、受信者はパケットが順不同で届いても、最終的には再構成することができます。","例えば、YouTubeの動画やSpotifyの音楽などは、個々のパケットが様々な経路をたどりながら最終的に受信者の元へ到達しています。","このように、仮想パケットと接続なしの仕組みにより、ネットワークは非常に柔軟で障害に強い設計となっています。"],"originalSlideText":"Virtuelle Pakete (1)\\n❑ Verbindungsloser Dienst erweitert Prinzip von Paket \\nSwitching\\n Individuelle Pakete werden unabhängig voneinander im Internet \\nübertragen\\n Paket enthält Informationen über Empfänger\\n❑ Weiterleitung der Pakete erfolgt durch Router\\n Nutzt Zieladresse der Pakete um nächsten Router auf Pfad zu \\nfinden","explanationImage":"","questionImage":""},{"id":5,"questionDe":"(s8) Warum ist ein universelles, virtuelles Paketformat im Internet notwendig?","questionJa":"なぜインターネットでは『仮想的でユニバーサルなパケット形式』が必要とされるのか？","answerDe":["Das Internet besteht aus heterogenen Netzwerken mit inkompatiblen Frameformaten.","Netzwerkadressierungen unterscheiden sich, Router können Frame Header nicht einfach anpassen.","Das Internetprotokoll definiert ein hardwareunabhängiges Paketformat.","Virtuell bedeutet: Nicht an Hardware gebunden und von Hardware nicht direkt erkennbar.","Universell bedeutet: Jedes Gerät im Internet hat Software, um IP-Pakete zu verarbeiten."],"answerJa":["インターネットは異なるネットワーク技術から構成されており、それぞれフレーム形式が異なる。","ネットワークのアドレス形式も異なるため、ルーターがフレームヘッダーを単純に変換することはできない。","IPプロトコルはハードウェアに依存しないパケット形式を定義している。","『仮想的』とは、ハードウェアに依存せず、物理的には認識されないことを意味する。","『ユニバーサル』とは、すべてのホストやルーターがIPパケットを理解し処理できることを意味する。"],"explanationDe":["Das Internet verbindet viele verschiedene Netzwerke, die auf unterschiedlichen Technologien basieren, z. B. Ethernet, Wi-Fi, DSL oder Glasfaser. Diese Netzwerke verwenden jeweils eigene Frameformate und Adressierungsschemata.","Würde man versuchen, ein einheitliches Format für Hardwareframes zu verwenden, könnten viele Netzwerke nicht miteinander kommunizieren. Router wären überfordert, da sie die Header-Informationen von inkompatiblen Formaten nicht korrekt umwandeln könnten.","Aus diesem Grund definiert das Internetprotokoll (IP) ein einheitliches, sogenanntes virtuelles Paketformat, das unabhängig von der zugrunde liegenden Hardware funktioniert.","Virtuell bedeutet in diesem Zusammenhang, dass das Format nicht direkt von der Netzwerktechnologie erkannt oder verarbeitet wird – es ist quasi \'unsichtbar\' für die Hardware.","Universell bedeutet, dass alle Geräte im Internet – egal mit welcher Technologie – über eine Protokollsoftware verfügen, die in der Lage ist, IP-Datagramme zu interpretieren und weiterzuleiten.","Ein praktisches Beispiel: Ein Smartphone im Wi-Fi-Netzwerk kann mit einem Webserver kommunizieren, der über Glasfaser angebunden ist – weil beide IP-Datagramme verstehen, obwohl ihre physischen Übertragungsarten grundverschieden sind.","Diese Trennung von logischer Paketstruktur und physischer Übertragung macht das Internet skalierbar, interoperabel und zukunftssicher gegenüber neuen Technologien."],"explanationJa":["インターネットは、イーサネット、Wi-Fi、光ファイバー、携帯回線など、異なる技術基盤のネットワークを相互に接続しています。それぞれのネットワークは固有のフレーム形式やアドレス構造を持っています。","もしインターネット全体でハードウェアのフレーム形式を統一しようとすれば、異なるネットワーク間での通信が極めて困難になります。ルーターはフレームヘッダーを正確に変換できず、正しく転送できなくなってしまいます。","そこでIPプロトコルでは、ハードウェアに依存しない『仮想的なパケット形式』を採用しています。これは論理的なパケット構造であり、物理的なネットワーク層からは直接は認識されません。","『仮想的（virtuell）』とは、パケットがハードウェアの物理層に縛られておらず、どのようなネットワーク技術でも同じ形式を保つことを意味します。","また『ユニバーサル（universell）』とは、インターネット上のすべてのホストやルーターがIPパケットの構造を理解し、それに対応するソフトウェアを持っているという意味です。","例えば、家庭内のWi-Fiを使ったスマートフォンが、遠くの光ファイバー回線に接続されたWebサーバにアクセスできるのは、両者がIPデータグラムという共通形式を使って通信しているからです。","このように、物理的なネットワークと論理的なパケット構造を分離することで、インターネットは異なる技術間の互換性を保ち、技術の進化にも柔軟に対応できる構造になっています。"],"originalSlideText":"Virtuelle Pakete (2)\\n❑ Verwendung von Format von Hardware Frames für Internet \\nPakete?\\n Internet besteht aus heterogenen Netzwerken mit \\ninkompatiblen Frameformaten\\n Adressierung in Netzwerken unterschiedlich, Router kann nicht \\neinfach Frame Header anpassen\\n❑ Internet Protokoll definiert von Hardware unabhängiges \\nPaketformat\\n❑ Virtuelles, Universelles Paket\\n Virtuell: Nicht an Hardware gebunden und von Hardware nicht \\nerkannt/verstanden\\n Universell: Jeder Host/Router im Internet hat \\nProtokollsoftware um Internet Pakete zu verstehen","explanationImage":"","questionImage":""},{"id":6,"questionDe":"(s9) Aus welchen Teilen besteht ein IP-Datagramm und wie wird seine Größe bestimmt?","questionJa":"IPデータグラムはどのような構成要素から成り、サイズはどのように決定されるか？","answerDe":["Ein IP-Datagramm besteht aus Header und Payload.","Die Datenmenge im Datagramm ist nicht festgelegt.","Die Größe wird vom Sender bzw. der Applikation abhängig vom Verwendungszweck bestimmt.","Beispiel: Ein Datagramm pro Tasteneingabe oder große Datagramme für Videostreaming."],"answerJa":["IPデータグラムはヘッダーとペイロード（データ本体）から構成される。","データグラム内のデータ量は固定ではない。","サイズは送信者またはアプリケーションが用途に応じて決定する。","例：キーボードの1回の入力ごとに1つのデータグラムを送る、またはビデオストリーミング用に大きなデータグラムを使う。"],"explanationDe":["Ein IP-Datagramm ist die Standardstruktur zur Datenübertragung im Internetprotokoll. Es besteht immer aus zwei Teilen: einem Header mit Steuerinformationen und einem Payload mit den eigentlichen Nutzdaten.","Der Header enthält z. B. Informationen über Quell- und Zieladresse, Fragmentierung oder Zeitbegrenzung (TTL).","Der Payload enthält die zu übertragenden Daten – beispielsweise Teile einer Datei, eines Videos oder einer Nachricht.","Die Größe eines Datagramms ist flexibel. Sie hängt vom Einsatzzweck ab und wird durch den sendenden Host oder die Applikation bestimmt.","So kann etwa eine Chat-Anwendung sehr kleine Datagramme senden – eines pro Tastendruck. Eine Streaming-Plattform hingegen nutzt große Datagramme, um die Übertragungsrate zu maximieren.","Größere Datagramme reduzieren den relativen Anteil des Overheads (Header), da pro Byte Nutzdaten weniger Zusatzinformationen benötigt werden.","Es gibt jedoch technische Begrenzungen für die maximale Größe – insbesondere durch die maximale Übertragungseinheit (MTU) im Netzwerk, was in späteren Folien behandelt wird."],"explanationJa":["IPデータグラムは、インターネットプロトコル（IP）によるデータ転送の基本単位です。常に『ヘッダー』と『ペイロード』という2つの要素から構成されます。","ヘッダーには送信元IPアドレス、宛先IPアドレス、フラグメント情報、TTL（生存時間）などの制御情報が含まれます。","一方、ペイロードには実際に送信されるデータが含まれます。たとえば、ファイルの一部、ビデオデータ、チャットメッセージなどが該当します。","データグラムのサイズは固定ではなく、送信するアプリケーションや用途に応じて決まります。","たとえば、チャットアプリではキー入力ごとに小さなデータグラムを送信しますが、動画配信では帯域を効率よく使うために大きなデータグラムが使われます。","大きなデータグラムを使うことで、1バイトあたりに必要なヘッダーの割合（オーバーヘッド）を抑えることができ、通信効率が向上します。","ただし、ネットワーク機器が一度に扱える最大サイズ（MTU）の制限があり、それを超えると後で説明する『フラグメント化』が必要になります。"],"originalSlideText":"IP Datagramm (1)\\n❑ IP Datagramm: Bezeichnung für Internet Pakete in TCP/IP \\nProtokollen\\n❑ Besteht aus Header und Payload (Daten)\\n❑ Menge an Daten in Datagrammen ist nicht fest\\n❑ Wird von Sender/Applikation nach Zweck festgelegt\\n Beispiel: Jede Tasteneingabe als ein Datagramm oder große \\nDatagramme für Videostreaming","explanationImage":"","questionImage":""},{"id":7,"questionDe":"(s10) Welche Bedeutung hat die Größe von IP-Datagrammen für den Datentransport?","questionJa":"IPデータグラムのサイズは、データの転送においてどのような意味を持つのか？","answerDe":["IPv4 erlaubt bis zu 64K Oktetts als Payload.","Header ist meistens viel kleiner als Payload.","Große Datagramme helfen, den Durchsatz zu maximieren.","Zu große Datagramme können jedoch zu Problemen führen."],"answerJa":["IPv4では最大64Kバイトのペイロードを許可している。","通常、ヘッダーはペイロードよりもかなり小さい。","大きなデータグラムは通信のスループット向上に貢献する。","しかし、サイズが大きすぎると問題が発生する可能性がある。"],"explanationDe":["In IPv4 kann ein IP-Datagramm eine maximale Größe von etwa 65.535 Bytes haben – das schließt sowohl Header als auch Payload ein.","In der Praxis ist der Header im Vergleich zur Nutzlast (Payload) relativ klein, was bedeutet, dass bei größeren Datagrammen ein höherer Anteil der Daten tatsächlich nützliche Informationen enthält.","Ein größerer Payload führt zu weniger Protokolloverhead pro Byte, wodurch der Gesamtdurchsatz (Menge an effektiv übertragenen Daten) gesteigert wird.","Das ist besonders bei datenintensiven Anwendungen wie Videostreaming oder Dateiübertragungen vorteilhaft, bei denen große Datenmengen effizient über das Netzwerk transportiert werden müssen.","Allerdings gibt es Grenzen: Wenn ein Datagramm zu groß für die maximale Übertragungseinheit (MTU) eines Netzwerks ist, muss es fragmentiert werden.","Fragmentierung kann die Effizienz verringern und zu Problemen wie Paketverlust, zusätzlichem Verarbeitungsaufwand oder erhöhter Fehleranfälligkeit führen.","Deshalb ist es in der Praxis wichtig, eine Balance zwischen großer Nutzlast und MTU-Kompatibilität zu finden – z. B. durch Path MTU Discovery."],"explanationJa":["IPv4では、IPデータグラムは最大で約65,535バイト（64Kバイト）までのサイズを持つことが可能で、これはヘッダーとペイロードの合計サイズです。","通常、ヘッダーは20〜60バイト程度で、ペイロードと比べて非常に小さくなっています。そのため、サイズの大きなデータグラムを使うほど、相対的にオーバーヘッドが減ります。","つまり、1バイトあたりの実際の有効データ量が増えるため、通信の効率（スループット）が向上します。","この利点は、動画配信や大容量ファイル転送のような、データ量の多いアプリケーションで特に重要です。","ただし、データグラムが大きすぎると、通過するネットワークのMTU（最大転送単位）を超えてしまう可能性があります。","その場合は『フラグメンテーション（分割）』が発生し、パケットが複数に分けられ再構成される必要があります。この過程では、処理負荷の増加、再構成ミス、パケット損失などの問題が発生しやすくなります。","したがって、実際のネットワーク設計では、データサイズの最適化とネットワークの制限（MTU）とのバランスをとることが重要になります（例：Path MTU Discovery）。"],"originalSlideText":"IP Datagramm (2)\\n❑ IPv4 erlaubt bis zu 64K Oktetts als Payload\\n❑ Header meist viel kleiner als Payload\\n❑ Große Datagramme helfen Durchsatz zu maximieren ( \\nHeader ist Overhead)\\n❑ Zu große Datagramme können zu Problemen führen, \\nErklärung später","explanationImage":"","questionImage":""},{"id":8,"questionDe":"(s12) Welche Informationen enthält der IPv4-Header und wozu dienen sie?","questionJa":"IPv4ヘッダーにはどのような情報が含まれており、それぞれの目的は何か？","answerDe":["Enthält Informationen zur Weiterleitung des Datagramms.","Beinhaltet die Quelladresse (Source) und Zieladresse (Destination).","Gibt den Typ der Daten im Payload an.","Die Adressen sind IP-Adressen, nicht MAC-Adressen.","Beziehen sich auf den ursprünglichen Sender und das endgültige Ziel – nicht auf die Router dazwischen.","Felder haben feste Größe zur effizienten Verarbeitung."],"answerJa":["データグラムの転送に必要な情報を含む。","送信元アドレス（Source）と宛先アドレス（Destination）が含まれる。","ペイロードに含まれるデータの種類を示す。","アドレスはIPアドレスであり、MACアドレスではない。","これらのアドレスは中継ルーターではなく、元の送信者と最終受信者を指している。","各フィールドは固定サイズで、処理効率が良いよう設計されている。"],"explanationDe":["Der IPv4-Header ist ein zentraler Bestandteil jedes IP-Datagramms. Er enthält alle notwendigen Steuerinformationen, die Router benötigen, um das Paket korrekt weiterzuleiten.","Dazu gehören die Quelladresse (IP-Adresse des sendenden Hosts) und die Zieladresse (IP-Adresse des empfangenden Hosts). Diese sind notwendig, damit jedes Datagramm seinen Weg im Netzwerk finden kann.","Außerdem gibt es ein Feld, das den Typ der Nutzdaten im Payload angibt – zum Beispiel ob es sich um ein TCP-, UDP- oder ICMP-Paket handelt.","Wichtig ist, dass die im Header enthaltenen Adressen keine MAC-Adressen sind, sondern IP-Adressen. Damit ist der Header unabhängig von der verwendeten Hardwaretechnologie.","Der Header bezieht sich immer auf den ursprünglichen Sender und das endgültige Ziel – Zwischenstationen wie Router werden nicht adressiert.","Alle Felder im Header haben eine feste Größe. Das erleichtert die Verarbeitung in Hardware und Software, weil die Positionen der Felder immer bekannt sind.","Diese standardisierte Struktur ermöglicht es Routern weltweit, IP-Datagramme effizient und interoperabel zu verarbeiten – ein Grundpfeiler des Internets."],"explanationJa":["IPv4ヘッダーは、IPデータグラムにおける制御情報を集約した非常に重要な部分です。この情報をもとに、ルーターはパケットを正しく中継・転送することができます。","ヘッダーには送信元IPアドレス（どこから来たか）と宛先IPアドレス（どこに届けるか）が含まれ、これによりネットワーク上のルーターは次に送るべき経路を判断できます。","また、ペイロード内に含まれているデータの種類（例えばTCPパケット、UDPパケットなど）を示すフィールドも存在します。","このヘッダーで使われているのはMACアドレスではなく、IPアドレスです。つまり、ネットワークの物理的な構成（LANやWi-Fiなど）に依存しない設計になっています。","指定されるアドレスは、中継するルーターではなく、元の送信者と最終的な受信者を意味します。これにより、途中の経路変更などにも柔軟に対応できます。","各フィールドは固定長で定義されており、ルーターやOSが効率的に処理できるようになっています。たとえば、ヘッダーを解析する際に位置を逐一探す必要がありません。","このように、IPv4ヘッダーの標準化された構造は、インターネットの規模や異種ネットワーク間でも、統一的かつ迅速にパケットを処理できる基盤を支えています。"],"originalSlideText":"Format von IPv4 Datagramm Header (1)\\n❑ Enthält Informationen um Datagramm weiterzuleiten\\n❑ Adresse des Sender (Source), Adresse des Empfänger (Destination), Typ der Daten in Payload\\n❑ Adressen sind IP Adressen (keine MAC Adressen)\\n Beziehen sich auf ursprünglichen Sender und endgültiges Ziel, nicht die Router dazwischen\\n❑ Felder haben feste Größe (effiziente Verarbeitung)","explanationImage":"","questionImage":""},{"id":9,"questionDe":"(s13) Welche Aufgaben haben die einzelnen Felder im IPv4-Header (Teil 2)?","questionJa":"IPv4ヘッダーの各フィールド（その2）は、それぞれどのような役割を持つか？","answerDe":["VERS: Version des Protokolls (für IPv4: \'4\').","H.LEN: Länge des Headers in 32-Bit-Einheiten (ohne Optionen: \'5\').","SERVICE TYPE: Typ des Dienstes (wird fast nie genutzt).","TOTAL LENGTH: Gesamtgröße von Header und Payload.","IDENTIFICATION: Eindeutige Nummer zur Wiederzusammensetzung von Fragmenten.","FLAGS: Kennzeichnung, ob Datagramm fragmentiert ist bzw. ob es das letzte Fragment ist.","FRAGMENT OFFSET: Position des Fragments im ursprünglichen Datagramm.","TIME TO LIVE (TTL): Zähler, der bei jedem Router reduziert wird; bei 0 wird das Paket verworfen."],"answerJa":["VERS：IPのバージョン（IPv4の場合は「4」）。","H.LEN：ヘッダーの長さ（32ビット単位、オプションなしで「5」）。","SERVICE TYPE：サービスの種別（ほとんど使われない）。","TOTAL LENGTH：ヘッダーとペイロードの合計長。","IDENTIFICATION：フラグメントの再構成に使う識別番号。","FLAGS：このデータグラムがフラグメントかどうか、また最後のフラグメントかを示す。","FRAGMENT OFFSET：元のデータグラム内でのフラグメントの位置。","TIME TO LIVE（TTL）：ルーターを通過するごとに減少し、0になると廃棄される。"],"explanationDe":["Der IPv4-Header enthält mehrere Felder, die jeweils eine spezielle Funktion haben und entscheidend für den Transport eines Pakets sind.","Das Feld VERS gibt die Version des Internetprotokolls an – bei IPv4 ist dies der Wert \'4\'.","H.LEN steht für Header Length und gibt an, wie viele 32-Bit-Wörter der Header umfasst. Ein Wert von 5 bedeutet 5 × 32 = 160 Bit (also 20 Byte) ohne Optionen.","SERVICE TYPE sollte ursprünglich unterschiedliche Dienstklassen (z. B. für Latenz oder Priorität) kennzeichnen, wird jedoch kaum genutzt.","TOTAL LENGTH beschreibt die gesamte Größe des IP-Datagramms, einschließlich Header und Payload – wichtig zur Überprüfung und Fragmentierung.","IDENTIFICATION ist eine eindeutige Nummer, die alle Fragmente eines ursprünglichen Datagramms gemeinsam haben, damit der Empfänger sie korrekt wieder zusammensetzen kann.","FLAGS bestehen aus drei Bits: Das erste ist reserviert, das zweite zeigt an, ob Fragmentierung erlaubt ist, und das dritte, ob es sich um das letzte Fragment handelt.","FRAGMENT OFFSET gibt die genaue Position des Fragments im gesamten Datenstrom an – in 8-Byte-Schritten.","TIME TO LIVE (TTL) ist ein Schutzmechanismus gegen Endlosschleifen. Jeder Router, den das Paket passiert, verringert diesen Wert. Ist er bei 0, wird das Paket gelöscht und eine Fehlermeldung (ICMP) gesendet."],"explanationJa":["IPv4ヘッダーには、ネットワーク上でデータを正しく転送・制御するための多数の情報がフィールドとして含まれています。","「VERS」は使用しているIPのバージョンを表しており、IPv4では値「4」が入ります。","「H.LEN」はヘッダーの長さを示し、32ビット単位で指定されます。値が「5」の場合、5×32＝160ビット＝20バイトとなり、これはオプションなしの標準的な長さです。","「SERVICE TYPE」は当初は優先度やリアルタイム性を示す用途が想定されていましたが、実際にはほとんど利用されていません。","「TOTAL LENGTH」は、ヘッダーとデータ本体（ペイロード）を含めたIPデータグラム全体のサイズを示しており、受信側での整合性確認や分割処理に使われます。","「IDENTIFICATION」は、フラグメント（断片）された複数のデータグラムが元の1つのパケットであることを識別するための一意の番号です。","「FLAGS」は3ビットの構成で、断片化の許可や最後のフラグメントかどうかを示します。","「FRAGMENT OFFSET」は、各フラグメントが元のデータ内のどこに位置するかを表し、8バイト単位で指定されます。","「TTL（Time To Live）」はループ防止のために使われるもので、ルーターを通過するたびに値が減少し、0になるとそのパケットは破棄され、エラーメッセージ（ICMP）が送られます。"],"originalSlideText":"Format von IPv4 Datagramm Header (2)\\n❑ VERS: Version (für IPv4: „4“)\\n❑ H.LEN: Größe in 32 Bit Einheiten, falls keine Optionen: „5“\\n❑ SERVICE TYPE: Dienst des Datagramm (fast nie genutzt)\\n❑ TOTAL LENGTH: Gesamtmenge an Daten in Header und Payload\\n❑ IDENTIFICATION: Eindeutige Nummer um Fragmente zusammen zu setzen\\n❑ FLAGS: Ist Datagramm Fragment bzw. letztes Fragment?\\n❑ FRAGMENT OFFSET: Position des Fragment im vollständigen Datagramm\\n❑ TIME TO LIVE: Von Router dekrementiert, bei 0 von Router verworfen und Fehlermeldung","explanationImage":"","questionImage":""},{"id":10,"questionDe":"(s14) Welche weiteren Felder enthält der IPv4-Header und welche Funktionen haben sie?","questionJa":"IPv4ヘッダーには他にどのようなフィールドがあり、それぞれどのような機能を持つのか？","answerDe":["TYPE: Gibt den Typ der Nutzdaten im Payload an.","HEADER CHECKSUM: Prüfsumme für die Integrität des Headers.","SOURCE IP ADDRESS: 32-Bit-Adresse des ursprünglichen Senders.","DESTINATION IP ADDRESS: 32-Bit-Adresse des endgültigen Ziels.","IP OPTIONS: Zusatzinformationen zur Steuerung der Verarbeitung (selten genutzt).","PADDING: Füllt Header auf 32-Bit-Grenze auf."],"answerJa":["TYPE：ペイロードのデータタイプを示す。","HEADER CHECKSUM：ヘッダー部分の整合性を確認するためのチェックサム。","SOURCE IP ADDRESS：送信元（オリジナル送信者）の32ビットIPアドレス。","DESTINATION IP ADDRESS：最終的な受信者の32ビットIPアドレス。","IP OPTIONS：パケットの処理や転送に関する追加情報（ほとんど使用されない）。","PADDING：ヘッダーサイズを32ビット境界に揃えるための補足。"],"explanationDe":["Neben den zuvor genannten Feldern enthält der IPv4-Header weitere wichtige Informationen, die für die korrekte Verarbeitung des Pakets notwendig sind.","Das Feld TYPE (auch \'Protocol\') gibt an, welcher Typ von Protokoll im Payload transportiert wird – z. B. TCP (Wert 6), UDP (Wert 17) oder ICMP (Wert 1). Diese Information wird benötigt, damit der Empfänger weiß, wie er die Nutzdaten interpretieren soll.","Die HEADER CHECKSUM dient zur Fehlererkennung. Sie wird vom Sender berechnet und vom Empfänger überprüft. Wenn ein Bit im Header verändert wurde (z. B. durch Übertragungsfehler), erkennt der Empfänger dies an einer nicht übereinstimmenden Prüfsumme.","SOURCE IP ADDRESS und DESTINATION IP ADDRESS sind die beiden wichtigsten Adressen im Header – sie identifizieren eindeutig den ursprünglichen Sender und das beabsichtigte Endziel.","Die IP OPTIONS ermöglichen Sonderfunktionen wie das Setzen von Routen oder Zeitstempeln, werden aber in der Praxis fast nie verwendet, da sie die Verarbeitung verlangsamen.","Das PADDING-Feld ist notwendig, um die Länge des Headers auf ein Vielfaches von 32 Bit aufzufüllen, was für viele Netzwerkgeräte eine Voraussetzung für effiziente Verarbeitung ist.","Diese Felder machen den IPv4-Header vollständig und ermöglichen eine sichere, effiziente und flexible Datenübertragung im Internet."],"explanationJa":["前のスライドで紹介されたフィールドに加えて、IPv4ヘッダーにはさらなる重要なフィールドがあり、これらもパケットの正確な処理に欠かせません。","「TYPE（Protocol）」は、ペイロード内に格納されているデータのプロトコルタイプを示します。たとえばTCP（値6）、UDP（値17）、ICMP（値1）などです。この情報によって受信側は、どのプロトコルでデータを解釈すればよいかを判断できます。","「HEADER CHECKSUM」は、ヘッダーの内容に誤りがないかどうかを確認するためのチェックサムです。送信側で計算され、受信側で再計算されます。ヘッダーにビットエラーがあると、チェックサムが一致しなくなり、エラーとして検出されます。","「SOURCE IP ADDRESS」と「DESTINATION IP ADDRESS」は、それぞれ元の送信者と最終的な受信者を表す32ビットのIPアドレスで、インターネット通信における核心となる情報です。","「IP OPTIONS」は、パケット転送の挙動に関する追加指示（例：経路の指定やタイムスタンプなど）を含めるためのフィールドですが、処理が重くなるため、実際にはほとんど利用されていません。","「PADDING」は、ヘッダーのサイズを32ビット（4バイト）の倍数に揃えるために使われます。これはハードウェアやソフトウェアが効率的に処理を行うために必要な調整です。","これらのフィールドによってIPv4ヘッダーは完成され、柔軟で信頼性のあるデータ通信が可能となっています。"],"originalSlideText":"Format von IPv4 Datagramm Header (3)\\n❑ TYPE: Typ der Payload\\n❑ HEADER CHECKSUM: Checksumme der Felder in Header\\n❑ SOURCE IP ADDRESS: 32 Bit Adresse von original Sender (nicht des vorherigen Router)\\n❑ DESTINATION IP ADDRESS: 32 Bit Adresse des endgültigen Ziels (nicht des nächsten Router)\\n❑ IP OPTIONS: Steuerung von Weiterleitung/Verarbeitung, fast nie genutzt\\n❑ PADDING: Auffüllen auf 32 Bit Grenze","explanationImage":"","questionImage":""},{"id":11,"questionDe":"(s15) Wie ist der IPv6-Header aufgebaut und wie unterscheidet er sich vom IPv4-Header?","questionJa":"IPv6ヘッダーはどのような構造をしており、IPv4ヘッダーとどのように異なるのか？","answerDe":["IPv6 verwendet ein komplett neues Header-Format.","Der Header ist in einen Base Header und optionale Extension Header unterteilt.","Wie bei IPv4 folgt auf den Header der Payload."],"answerJa":["IPv6では完全に新しいヘッダーフォーマットが使用されている。","ヘッダーは基本ヘッダー（Base Header）とオプションの拡張ヘッダー（Extension Header）に分かれている。","IPv4と同様、ヘッダーの後にペイロードが続く。"],"explanationDe":["Mit IPv6 wurde das Header-Design grundlegend überarbeitet, um effizienter, skalierbarer und zukunftssicher zu sein. Das Ziel war es, den Header zu vereinfachen und gleichzeitig erweiterbar zu gestalten.","Der IPv6-Header besteht aus einem festen Basis-Header (Base Header), der alle wichtigen Standardinformationen wie Quelladresse, Zieladresse, Payload-Länge usw. enthält.","Im Gegensatz zu IPv4 verzichtet IPv6 auf viele selten genutzte Felder und ersetzt diese durch sogenannte Extension Header, die bei Bedarf angehängt werden können.","Diese Trennung zwischen Basisinformationen und optionalen Erweiterungen reduziert die Standardgröße des Headers und macht die Verarbeitung schneller.","Wie bei IPv4 folgt auf den Header der Payload – also die eigentlichen zu übertragenden Daten.","Ein praktischer Vorteil: Router können die meisten IPv6-Pakete schneller verarbeiten, weil sie nur den Base Header analysieren müssen, sofern keine Erweiterungen vorhanden sind.","Zusammengefasst bietet der IPv6-Header mehr Flexibilität und bessere Zukunftsfähigkeit bei gleichzeitig höherer Effizienz als der IPv4-Header."],"explanationJa":["IPv6では、IPv4からヘッダーフォーマットが大きく見直され、より効率的で拡張性があり、将来的な技術進化にも対応できる構造が採用されています。","IPv6ヘッダーは『基本ヘッダー（Base Header）』と『拡張ヘッダー（Extension Header）』という2つの構成に分かれています。","基本ヘッダーには、送信元アドレス、宛先アドレス、ペイロード長などの必要最低限の情報のみが含まれます。","一方、IPv4に存在した多くのあまり使われないフィールドは廃止され、必要な場合のみExtension Headerとして付加されるようになっています。","この設計により、ルーターなどのネットワーク機器は基本ヘッダーだけを見ればよいため、パケットの処理が高速になります。","IPv4と同様に、ヘッダーの後ろにはペイロード（データ本体）が続きますが、構造がシンプルなため、機器の負荷が軽減されます。","このように、IPv6のヘッダーは柔軟性と効率性を兼ね備えており、今後のインターネットの拡張にも対応できるように設計されています。"],"originalSlideText":"Format von IPv6 Datagramm Header\\n❑ Komplett neues Header Format\\n❑ Header geteilt in Base Header und kleinere, optionale Extension Header\\n❑ Wie in IPv4 folgt darauf Payload","explanationImage":"","questionImage":""},{"id":12,"questionDe":"(s16) Welche Merkmale hat der IPv6-Basis-Header im Vergleich zum IPv4-Header?","questionJa":"IPv6の基本ヘッダー（Base Header）は、IPv4ヘッダーと比べてどのような特徴があるか？","answerDe":["Der IPv6-Header ist doppelt so groß wie der IPv4-Header.","Trotz der größeren Größe enthält er weniger Informationen.","Die IP-Adressen sind viermal so groß wie in IPv4.","Source und Destination beziehen sich – wie bei IPv4 – auf ursprünglichen Sender und endgültiges Ziel, nicht auf Router dazwischen."],"answerJa":["IPv6のヘッダーはIPv4の約2倍の大きさがある。","大きさに反して、含まれる情報はIPv4より少ない。","IPアドレスはIPv4の4倍（128ビット）に拡張されている。","送信元と宛先は、IPv4と同様に、中継ルーターではなく、オリジナルの送信者と最終受信者を指す。"],"explanationDe":["Der IPv6-Basis-Header wurde entwickelt, um eine einfachere und schnellere Verarbeitung durch Router zu ermöglichen. Obwohl er mit 40 Byte doppelt so groß ist wie der 20-Byte-Header von IPv4, enthält er weniger Felder.","Einer der Hauptgründe für die größere Größe ist, dass IPv6 128-Bit-Adressen verwendet – im Vergleich zu den 32-Bit-Adressen von IPv4. Dadurch sind allein Quell- und Zieladresse jeweils viermal so lang.","Im Gegensatz zu IPv4 wurde der Header entschlackt: viele optionale oder selten genutzte Felder wurden entfernt oder in Extension Header ausgelagert.","Wichtig ist, dass – wie bei IPv4 – die Quelladresse den ursprünglichen Sender und die Zieladresse den endgültigen Empfänger bezeichnen. Sie beziehen sich also nicht auf zwischengeschaltete Router.","Das hilft, Routing-Entscheidungen klar und konsistent zu treffen, unabhängig von der Route, die das Paket nimmt.","Ein weiterer Vorteil ist, dass durch das feste und vereinfachte Format die Verarbeitung in Hardware (z. B. Routern) beschleunigt wird.","Zusammengefasst stellt der IPv6-Basis-Header eine kompakte, aber flexible Struktur dar, die für das moderne, skalierbare Internet optimiert wurde."],"explanationJa":["IPv6の基本ヘッダー（Base Header）は、処理の高速化と簡素化を目的に設計されています。サイズは40バイトで、IPv4の標準ヘッダー（20バイト）の約2倍です。","サイズが大きい理由の一つは、IPアドレスが128ビット（16バイト）に拡張されていることです。IPv4では32ビットだったため、送信元と宛先の情報だけで8バイトから32バイトへと増加しています。","ただし、それ以外のフィールドは大幅に削減されています。IPv4であまり使われなかったフィールドや複雑なオプションは、IPv6ではExtension Headerに分離されました。","IPv4と同様に、送信元と宛先のアドレスは、それぞれデータのオリジナルの送信者と最終的な受信者を表しており、ルーターなど中継機器は対象になりません。","これにより、ネットワークの途中でルーティング経路が変わっても、一貫した処理が可能になります。","また、IPv6ヘッダーの固定長構造は、ネットワーク機器（ルーターなど）における高速処理を可能にし、通信のパフォーマンスを向上させます。","このように、IPv6の基本ヘッダーは大きくなったものの、情報構造が整理され、拡張性と効率性を両立したデザインとなっています。"],"originalSlideText":"IPv6 Base Header Format (1)\\n❑ Doppelt so groß wie IPv4 Header, enthält aber weniger \\nInformation\\n IP Adressen viermal so groß wie in IPv4\\n❑ Wie in IPv4 bezieht sich Source auf original Sender und \\nDestination auf endgültiges Ziel (nicht Router dazwischen)","explanationImage":"","questionImage":""},{"id":13,"questionDe":"(s17) Welche Felder enthält der IPv6 Base Header und was sind ihre Funktionen?","questionJa":"IPv6の基本ヘッダーにはどのようなフィールドがあり、それぞれどのような機能を持つのか？","answerDe":["VERS: Version (Wert \'6\' für IPv6).","TRAFFIC CLASS: Kennzeichnet Dienstklasse.","FLOW_LABEL: Dient für Label Switching (heute weniger genutzt).","PAYLOAD_LENGTH: Gibt Größe des Payloads in Oktetts an.","NEXT_HEADER: Gibt den Typ der nächsten Information an (Extension Header oder Payload)."],"answerJa":["VERS：プロトコルのバージョンを示す（IPv6では「6」）。","TRAFFIC CLASS：サービスの種類や優先度を示す。","FLOW_LABEL：ラベルスイッチングに使用（現在はあまり使われていない）。","PAYLOAD_LENGTH：ペイロード（データ本体）のサイズをバイト単位で示す。","NEXT_HEADER：次に続く情報の種類（拡張ヘッダーまたはペイロード）を示す。"],"explanationDe":["Der IPv6 Base Header enthält standardisierte Felder, die für die Steuerung und Verarbeitung von IP-Paketen notwendig sind. Er ist klar strukturiert und effizient aufgebaut.","VERS ist das Versionsfeld und zeigt an, dass es sich um ein IPv6-Paket handelt – der Wert ist fest auf \'6\' gesetzt.","TRAFFIC CLASS ist ein 8-Bit-Feld, das zur Kennzeichnung der Dienstqualität oder Priorisierung von Paketen dient. Damit können z. B. Echtzeitdaten bevorzugt behandelt werden.","FLOW_LABEL ist ein 20-Bit-Feld, das ursprünglich für sogenannte \'Label Switched Paths\' gedacht war. Es sollte Pakete identifizieren, die zu einem bestimmten Datenfluss gehören. Heute wird es nur selten verwendet.","PAYLOAD_LENGTH gibt die Länge der Nutzdaten in Oktetts an – also die Größe des Payloads, der nach dem Base Header folgt. Das ist wichtig für die Verarbeitung und Weiterleitung.","NEXT_HEADER ist ein zentrales Feld in IPv6: Es gibt an, ob nach dem Base Header ein Extension Header oder direkt ein Transportprotokoll wie TCP oder UDP folgt. Dadurch ist IPv6 modular aufgebaut.","Durch diese klar definierte Struktur lässt sich der Header einfach analysieren, was die Verarbeitung in Routern beschleunigt und die Erweiterbarkeit des Protokolls unterstützt."],"explanationJa":["IPv6の基本ヘッダーには、データの転送や処理に必要な主要な情報を格納するフィールドが含まれています。これらは明確な構造で設計され、効率的な処理が可能です。","「VERS」はIPのバージョンを示すフィールドで、IPv6パケットであることを示すために「6」が設定されています。","「TRAFFIC CLASS」は8ビットのフィールドで、サービス品質（QoS）やパケットの優先度などを指定します。たとえば、音声通話やビデオ会議のトラフィックに優先順位をつけることができます。","「FLOW_LABEL」は20ビットのフィールドで、元々は特定の通信フローを識別し、ラベルベースの転送経路（Label Switching）で利用することを目的としていましたが、現在ではほとんど使用されていません。","「PAYLOAD_LENGTH」は、ヘッダーの後に続くペイロード（データ本体）のサイズをバイト単位で示すフィールドです。データの境界や処理に不可欠な情報です。","「NEXT_HEADER」はIPv6における拡張性の中核となるフィールドで、この後に続くデータが拡張ヘッダーなのか、それともTCP/UDPなどのトランスポート層プロトコルなのかを指定します。","このような構造により、IPv6は拡張性に富み、ネットワーク機器が効率的に処理を行えるよう設計されています。"],"originalSlideText":"IPv6 Base Header Format (2)\\n❑ VERS: Version („6“ für IPv6)\\n❑ TRAFFIC CLASS: Klasse des Dienst\\n❑ FLOW_LABEL: Für Label Switching, mittlerweile weniger wichtig\\n❑ PAYLOAD_LENGTH: Größe von Payload in Oktetts\\n❑ NEXT_HEADER: Typ der folgenden Information (Extension Header, Payload)","explanationImage":"","questionImage":""},{"id":14,"questionDe":"(s18) Was sind Extension Header in IPv6 und wie funktionieren sie?","questionJa":"IPv6のエクステンションヘッダー（Extension Header）とは何か？どのような仕組みで機能するのか？","answerDe":["Extension Header können feste oder variable Länge haben.","Bei variabler Länge enthalten sie ein Längenfeld.","Sowohl Base Header als auch Extension Header besitzen das NEXT_HEADER-Feld."],"answerJa":["エクステンションヘッダーは固定長または可変長の形式を取ることができる。","可変長の場合、長さを示すフィールドを含んでいる。","基本ヘッダーと拡張ヘッダーの両方がNEXT_HEADERフィールドを持つ。"],"explanationDe":["Extension Header sind ein zentrales Konzept in IPv6, das Flexibilität und Erweiterbarkeit ermöglicht. Sie erlauben es, zusätzliche Informationen anzuhängen, ohne das feste Format des Basis-Headers zu verändern.","Im Gegensatz zu IPv4, bei dem optionale Felder im Haupt-Header enthalten waren, werden in IPv6 optionale Informationen in separaten Extension Headern gekapselt.","Diese Header können entweder eine feste Länge haben – zum Beispiel bei Routing- oder Fragmentierungsinformationen – oder eine variable Länge, in welchem Fall ein Längenfeld enthalten sein muss.","Jeder Extension Header enthält ein NEXT_HEADER-Feld, das angibt, welches Element danach folgt: ein weiterer Extension Header oder das eigentliche Transportprotokoll wie TCP oder UDP.","Auch der Base Header enthält ein NEXT_HEADER-Feld, das auf den ersten Extension Header verweist (falls vorhanden). Dieses Prinzip ähnelt einer verketteten Liste.","Durch diese modulare Kette können Header nur dann eingefügt werden, wenn sie benötigt werden – z. B. ein Fragmentierungs-Header nur bei Fragmenten.","Das reduziert den Overhead bei Standardpaketen und sorgt für effiziente Verarbeitung und bessere Skalierbarkeit des Protokolls."],"explanationJa":["IPv6におけるエクステンションヘッダー（Extension Header）は、柔軟性と拡張性を提供するための仕組みであり、必要に応じて追加の情報を付加することができます。","IPv4ではオプション情報がメインのヘッダー内に含まれていましたが、IPv6ではこうした情報は独立したエクステンションヘッダーとして分離され、必要な場合にのみ使用されます。","エクステンションヘッダーには、固定長のもの（例：ルーティング情報やフラグメント情報）と、可変長のものがあります。可変長の場合は、長さを示すフィールドが含まれています。","各エクステンションヘッダーにはNEXT_HEADERフィールドがあり、その次に続く情報（さらに別のエクステンションヘッダーやTCP/UDPなどのトランスポート層プロトコル）を指定します。","基本ヘッダーもまたNEXT_HEADERフィールドを持ち、最初のエクステンションヘッダーの種類を指します。これにより、複数のヘッダーが「鎖」のように連結された構造になります。","このような構造によって、不要な情報を省き、必要な場合にのみ特定の制御情報を追加できるため、標準的なパケットではヘッダーが最小限に保たれます。","結果として、処理の効率性が向上し、大規模かつ柔軟なネットワーク運用が可能となっています。"],"originalSlideText":"Extension Header\\n❑ Extension Header können feste Größe haben (festgelegt in \\nStandard)\\n❑ Bei variabler Länge enthalten Sie Feld mit Längenangabe\\n❑ Base Header und Extension Header enthalten \\nNEXT_HEADER","explanationImage":"","questionImage":""},{"id":15,"questionDe":"(s20) Wie funktioniert die Weiterleitung von IP-Datagrammen im Internet?","questionJa":"インターネットにおけるIPデータグラムの転送（ルーティング）はどのように行われるのか？","answerDe":["Das Internet verwendet Next-Hop-Forwarding.","Router nutzen die Zieladresse aus dem Header, um den nächsten Hop zu bestimmen.","Das Datagramm wird an den nächsten Hop weitergeleitet (nächster Router oder Zielhost).","Router verwenden Weiterleitungstabellen (Forwarding Tables).","Diese Tabellen werden beim Start initialisiert und bei Topologieänderungen aktualisiert.","Tabellen enthalten Einträge mit Zielnetzwerk und zugehörigem nächsten Hop."],"answerJa":["インターネットでは『Next-Hop Forwarding（次ホップ転送）』が採用されている。","ルーターはIPデータグラムのヘッダーにある宛先アドレスを使って、次の中継先（ホップ）を決定する。","パケットは、次のルーターまたは最終的なホストへ転送される。","ルーターは『フォワーディングテーブル（転送表）』を使って転送先を決める。","このテーブルは起動時に初期化され、ネットワーク構成の変化に応じて更新される。","テーブルには、各宛先ネットワークと、それに対応する次のホップの情報が記録されている。"],"explanationDe":["Im Internet erfolgt die Datenweiterleitung nicht direkt von Quelle zu Ziel, sondern über mehrere Zwischenstationen – sogenannte Router. Diese bestimmen schrittweise, wohin ein Paket als Nächstes geschickt wird.","Dabei kommt das Prinzip des \'Next-Hop-Forwarding\' zum Einsatz: Ein Router schaut sich nur die Zieladresse im IP-Header an und entscheidet, an welchen nächsten Router (Hop) das Paket weitergeleitet wird.","Diese Entscheidung basiert auf einer sogenannten Weiterleitungstabelle (Forwarding Table), die jedem Zielnetzwerk einen passenden nächsten Hop zuordnet.","Die Weiterleitungstabellen werden beim Start des Routers geladen und bei Änderungen im Netzwerk (z. B. Ausfall eines Routers oder neue Verbindungen) automatisch oder manuell aktualisiert.","Ein Eintrag in der Tabelle könnte z. B. lauten: \'Zielnetz 192.168.2.0/24 → Weiterleiten an Router B\'.","Dieses Verfahren ermöglicht eine skalierbare, flexible Weiterleitung, ohne dass jeder Router den gesamten Pfad oder die gesamte Internet-Topologie kennen muss.","Der Prozess wiederholt sich bei jedem Router entlang des Pfads, bis das Paket sein endgültiges Ziel erreicht – entweder ein Endgerät oder der Zielserver."],"explanationJa":["インターネット上のデータ転送は、送信元から直接宛先に届くのではなく、複数のルーター（中継点）を経由して行われます。このとき用いられるのが『Next-Hop Forwarding（次ホップ転送）』という仕組みです。","各ルーターはIPヘッダー内の宛先アドレスだけを見て、次にパケットを送るべきルーター（次ホップ）を判断します。この判断には『フォワーディングテーブル（転送表）』が使われます。","この転送表は、特定の宛先ネットワークに対してどのルーターに転送するかを定義したもので、ルーター起動時に初期化され、その後ネットワーク構成の変更に応じて更新されます。","たとえば、192.168.2.0/24というネットワークへのデータグラムは『ルーターBに転送』というエントリがある場合、ルーターはルーターBにそのパケットを送信します。","この方法により、ルーターはインターネット全体の構造を知らなくても、部分的な情報だけで効率よくパケットを転送できます。","ルーターごとにこの処理が繰り返されることで、最終的にパケットは目的地のホストやサーバへと到達します。","このようにして、インターネット全体が動的でスケーラブルな構造のもとに、分散的にデータ通信を実現しているのです。"],"originalSlideText":"Weiterleitung von Datagrammen (1)\\n❑ Internet nutzt Next-Hop Forwarding\\n Router auf Pfad nutzt Zieladresse aus Header um nächsten Hop \\nzu finden\\n Leitet an Hop weiter (weiterer Router oder Ziel)\\n❑ IP Router nutzen Weiterleitungstabelle (Forwarding Table)\\n Initialisierung bei Start des Router, Aktualisierung bei \\nÄnderungen von Topologie\\n❑ Enthält Einträge mit Ziel und nächstem Hop","explanationImage":"","questionImage":""},{"id":16,"questionDe":"(s21) Wie ist die Weiterleitungstabelle (Forwarding Table) aufgebaut und wovon hängt ihre Größe ab?","questionJa":"フォワーディングテーブル（転送表）はどのように構成され、その大きさは何によって決まるのか？","answerDe":["Die Größe der Weiterleitungstabelle ist proportional zur Anzahl der Netzwerke, nicht der Hosts.","Ziele werden als Netzwerke angegeben, nicht als einzelne Geräte."],"answerJa":["フォワーディングテーブルのサイズは、個々のホストの数ではなく、ネットワークの数に比例する。","宛先は単一のホストではなく、ネットワーク単位で指定される。"],"explanationDe":["Eine Weiterleitungstabelle (Forwarding Table) enthält Informationen darüber, wie ein Router eingehende IP-Datagramme basierend auf ihrer Zieladresse weiterleiten soll.","Statt für jeden einzelnen Host eine eigene Regel zu speichern – was bei Milliarden von Geräten im Internet unpraktikabel wäre – fasst man Adressen zu Netzwerken zusammen.","Ein typischer Eintrag in einer Weiterleitungstabelle hat zwei Hauptkomponenten: ein Zielnetzwerk (z. B. 192.168.1.0/24) und den zugehörigen nächsten Hop.","Die Angabe als Netzwerk – also eine IP-Adresse mit Netzmaske – reduziert die Anzahl der notwendigen Einträge erheblich.","Dadurch wächst die Tabelle nicht mit der Anzahl aller möglichen Endgeräte, sondern nur mit der Anzahl der erreichbaren Netzwerke.","Das spart Speicher und beschleunigt die Suche innerhalb der Tabelle, besonders in großen Backbone-Routern.","In der Praxis nutzt man auch Default-Routen für Ziele, die nicht explizit in der Tabelle stehen, was die Anzahl der Einträge weiter reduziert."],"explanationJa":["フォワーディングテーブル（転送表）は、ルーターが受信したIPデータグラムをどの中継先に転送すべきかを判断するための情報を持つ表です。","インターネットには膨大な数のホスト（端末）が存在するため、それぞれに個別のエントリを作成するのは非現実的です。その代わり、同じネットワーク内のホストをまとめて扱うことで効率化しています。","具体的には、宛先はIPアドレスとネットマスクの組み合わせ（例：192.168.1.0/24）で表され、そのネットワークに属するすべてのホストに対して同じルーティングを適用します。","これにより、個々のデバイスごとのルールを作る必要がなくなり、エントリ数を大幅に減らすことができます。","フォワーディングテーブルのサイズは、インターネット全体のホスト数ではなく、ルーターが認識するネットワークの数に応じて増減します。","また、表の検索も高速化されるため、大規模なバックボーンルーターでも高速にパケット処理が可能です。","実際には、特定の宛先が見つからない場合のために『デフォルトルート（default route）』を使うことで、さらに表の規模を小さく抑えています。"],"originalSlideText":"Weiterleitung von Datagrammen (2)\\n❑ Größe von Weiterleitungstabelle proportional zur Anzahl an \\nNetzwerken, nicht Hosts\\n Ziele als Netzwerk angegeben","explanationImage":"","questionImage":""},{"id":17,"questionDe":"(s22) Wie funktioniert das Matching von Zieladressen mit Hilfe von Netzwerkpräfixen in der Weiterleitungstabelle?","questionJa":"フォワーディングテーブルにおけるネットワークプレフィックス（接頭部）を用いた宛先アドレスの照合（マッチング）はどのように行われるか？","answerDe":["Eine Maske in der Weiterleitungstabelle dient dazu, den Netzwerkanteil der Adresse zu extrahieren.","Die Zieladresse D wird mit der Maske kombiniert, um das Präfix zu erhalten.","Dieses Präfix wird mit den Einträgen in der Weiterleitungstabelle verglichen.","Bei Übereinstimmung wird das Paket an den zugehörigen Next Hop weitergeleitet."],"answerJa":["転送表に含まれるマスクは、宛先アドレスからネットワーク部分を抽出するために使われる。","宛先アドレス D に対してマスクを適用し、プレフィックス（接頭部）を取得する。","得られたプレフィックスを、転送表の各エントリと照合する。","一致が見つかれば、そのエントリに記載された次ホップへパケットを転送する。"],"explanationDe":["Router verwenden sogenannte Netzwerkpräfixe, um effizient zu entscheiden, wie ein IP-Paket weitergeleitet werden soll. Ein Netzwerkpräfix besteht aus einer Kombination aus IP-Adresse und Maske (z. B. 192.168.1.0/24).","Die Maske bestimmt, wie viele Bits der Adresse den Netzwerkanteil darstellen – in diesem Beispiel 24 Bits.","Wenn ein Paket eintrifft, nimmt der Router die Zieladresse (z. B. 192.168.1.42) und verknüpft sie logisch mit der Maske eines Eintrags in der Weiterleitungstabelle.","Diese Verknüpfung (Bitweise UND-Verknüpfung) liefert das Präfix der Zieladresse, das dann mit dem Eintrag verglichen wird.","Stimmt das Präfix überein, wird das Paket an den zugehörigen Next Hop weitergeleitet.","Auf diese Weise lassen sich viele IP-Adressen mit wenigen Präfixen zusammenfassen, was die Größe der Weiterleitungstabelle klein und effizient hält.","Diese Methode ist besonders wichtig in großen Netzwerken mit vielen Subnetzen und wechselnden Pfaden, wie z. B. im Backbone des Internets."],"explanationJa":["ルーターは、ネットワークプレフィックス（接頭部）という考え方を用いて、IPデータグラムをどこへ転送すべきかを判断します。プレフィックスとは、IPアドレスとネットマスクを組み合わせたもので（例：192.168.1.0/24）、ネットワークの範囲を示します。","このマスクは、IPアドレスのうち、どこまでがネットワーク部であるかを示すため、何ビットを比較すべきかを明確にします。","ルーターがパケットを受け取ると、まず宛先IPアドレスに対して転送表のマスクを論理積（AND演算）で適用し、ネットワークプレフィックスを導出します。","そして、この導出したプレフィックスが、転送表のエントリに記載されているプレフィックスと一致するかを比較します。","一致が見つかれば、そのエントリに従って、対応する次ホップへパケットを送ります。","この方法により、IPアドレスの範囲をネットワーク単位で効率的に扱うことができ、転送表のサイズを大きくしすぎずに済みます。","特に、サブネットが多数存在し、ルートが頻繁に変化する大規模ネットワークやインターネットのバックボーンでは、非常に重要な技術です。"],"originalSlideText":"Netzwerk Präfix und Matching (1)\\n❑ Maske in Weiterleitungstabelle um Netzwerkanteil der \\nAdresse zu erhalten\\n❑ Zu Ziel IP Adresse D muss Eintrag in Weiterleitungstabelle  \\ngefunden werden\\n❑ Mit Maske wird Präfix von D extrahiert und mit Destination \\nFeld in Weiterleitungstabelle verglichen\\n❑ Bei Übereinstimmung Weiterleitung an Next Hop","explanationImage":"","questionImage":""},{"id":18,"questionDe":"(s23) Wie wird der Netzwerkpräfix-Vergleich in der Praxis durchgeführt und welche Rolle spielen Bitmasken dabei?","questionJa":"実際のネットワークにおけるプレフィックスの照合はどのように行われ、ビットマスクはどのような役割を果たしているか？","answerDe":["Effizienter Vergleich erfolgt durch Bitmasken.","Test erfolgt über die Bedingung: (Mask[i] & D) == Destination[i].","In der Praxis sind Weiterleitungstabellen sehr groß.","Tabellen können einen Default-Eintrag für nicht explizit angegebene Ziele enthalten."],"answerJa":["プレフィックスの照合は、ビットマスクを使って効率的に行われる。","照合は『(Mask[i] & D) == Destination[i]』という条件で評価される。","実際の運用では、フォワーディングテーブルの規模は非常に大きい。","明示的に記述されていない宛先のために、デフォルトエントリが用意されることがある。"],"explanationDe":["In großen Netzwerken enthalten Weiterleitungstabellen zahlreiche Einträge, die unterschiedliche Zielnetzwerke abdecken. Um die Effizienz zu gewährleisten, werden Bitmasken verwendet.","Die Bitmaske erlaubt es, bestimmte Bits der Zieladresse gezielt zu extrahieren – typischerweise den Netzwerkanteil. Das erfolgt über eine bitweise UND-Verknüpfung: (Mask[i] & D), wobei D die Zieladresse ist.","Das Ergebnis wird mit dem gespeicherten Netzwerkteil (Destination[i]) im Forwarding-Eintrag verglichen. Wenn die Werte übereinstimmen, wird das Datagramm an den zugeordneten Next Hop gesendet.","Dieser Vergleichsmechanismus ermöglicht eine sehr schnelle Auswertung, da binäre Operationen hardwareseitig effizient umgesetzt werden können.","In der Praxis enthalten Routertabellen häufig tausende Einträge – vor allem bei Internet Service Providern. Daher ist diese Optimierung essenziell.","Um mit unbekannten oder nicht explizit definierten Zielen umzugehen, wird häufig ein sogenannter \'Default-Eintrag\' genutzt. Dieser greift, wenn keine andere Regel passt.","Solche Einträge lauten oft: \'Für alle anderen Adressen → Weiterleiten an Gateway X\'. Sie gewährleisten, dass kein Paket verloren geht, auch wenn es keine genaue Übereinstimmung gibt."],"explanationJa":["大規模ネットワークでは、フォワーディングテーブルには非常に多くのエントリが含まれており、ルーターが効率的に照合処理を行う必要があります。","この照合を効率化するために、ビットマスクが使用されます。ビットマスクを使って宛先アドレスからネットワーク部を取り出し、既存のエントリと比較します。","比較は『(Mask[i] & D) == Destination[i]』という形で行われます。ここで、Mask[i] はエントリのネットワークマスク、D はパケットの宛先アドレスです。","このようなビット演算による比較は、ハードウェアレベルで高速に処理できるため、大量のエントリを持つルーターでも実用的です。","特にISP（インターネットサービスプロバイダー）などでは、数千単位のエントリを扱う必要があるため、この仕組みは不可欠です。","さらに、全ての宛先が事前に登録されているわけではないため、照合に失敗した場合のために『デフォルトエントリ（Default Route）』が設定されていることがあります。","このエントリは、明示されていないすべてのアドレスに対して指定されたゲートウェイへ転送するというもので、パケットのロスを防ぐ役割を果たします。"],"originalSlideText":"Netzwerk Präfix und Matching (2)\\n❑ Effizienter Vergleich durch Bitmasken\\n❑ Test, ob (Mask[i] & D) == Destination [i]\\n❑ Weiterleitungstabelle aus letztem Beispiel\\n Ziel 192.4.10.3 erreicht Router 𝑅2\\n Vergleich für erste drei Einträge schlagen fehl\\n❑ Weiterleitungstabellen in Praxis sehr groß\\n❑ Kann Default Eintrag für nicht aufgeführte Ziele enthalten","explanationImage":"","questionImage":""},{"id":19,"questionDe":"(s24) Was bedeutet Longest Prefix Match und warum ist es wichtig bei der IP-Weiterleitung?","questionJa":"Longest Prefix Match（最長一致）とは何を意味し、IPのルーティングにおいてなぜ重要なのか？","answerDe":["Hostspezifische Routen sind möglich, wenn die Maske die komplette Adresse abdeckt.","Adressmasken können sich überlappen, z. B. /16 und /24.","Ein Datagramm kann auf mehrere Einträge passen.","Die Weiterleitung erfolgt anhand des längsten passenden Präfixes (Longest Prefix Match).","Einträge mit längerem Präfix werden von der Software zuerst geprüft."],"answerJa":["マスクがアドレス全体を覆う場合、ホスト単位のルーティングが可能。","アドレスマスクは、/16 と /24 のように重複することがある。","1つのデータグラムが複数のエントリにマッチする場合がある。","その中で最も長く一致するプレフィックスに基づいて転送される（Longest Prefix Match）。","より長いプレフィックスのエントリが優先的にソフトウェアで評価される。"],"explanationDe":["In der IP-Routingpraxis kann eine Zieladresse auf mehrere Einträge in der Weiterleitungstabelle passen – besonders wenn sich Präfixe überschneiden, wie etwa 128.10.0.0/16 und 128.10.2.0/24.","Beide Einträge würden für eine Adresse wie 128.10.2.3 zutreffen. Um in solchen Fällen die genaueste Route auszuwählen, wird das Prinzip des Longest Prefix Match verwendet.","Dabei wird der Eintrag mit dem längsten übereinstimmenden Präfix bevorzugt – in unserem Beispiel wäre das 128.10.2.0/24 mit 24 Bits, statt 128.10.0.0/16 mit 16 Bits.","Diese Methode erlaubt es, sehr feingranulare (feinkörnige) Steuerung für bestimmte Hosts oder Subnetze zu realisieren, während gleichzeitig generelle Routen bestehen bleiben.","Hostspezifische Routen (z. B. /32) können damit gezielt für einzelne Endgeräte definiert werden.","Die Routingsoftware prüft daher zuerst die Einträge mit den längsten Präfixen, bevor sie zu kürzeren übergeht.","Ohne dieses Verfahren würde ein weniger spezifischer Eintrag eventuell bevorzugt, was zu ineffizienter oder sogar falscher Weiterleitung führen könnte."],"explanationJa":["IPルーティングにおいて、1つの宛先アドレスが複数のルーティングエントリに一致するケースがあります。これは、アドレスマスクが重複している場合に起こります（例：128.10.0.0/16 と 128.10.2.0/24）。","たとえば、宛先が 128.10.2.3 の場合、どちらのネットワーク定義にもマッチします。","このようなときに、より具体的な経路を選択するために『Longest Prefix Match（最長一致）』という原則が適用されます。","これは、一致するプレフィックスの中で、最も長く一致する（＝ビット数が多い）エントリを優先して選択するというルールです。この例では /24 が /16 より優先されます。","これにより、より細かいルーティング制御が可能になり、特定のホストやサブネットに対して個別のルールを定義することができます。","また、/32 のようにホスト単位でのルート指定も可能であり、きめ細かいネットワーク制御が実現されます。","ルーティングソフトウェアは、まず長いプレフィックス（細かい定義）から順に照合を試みるため、適切で最も詳細なルートが選ばれるようになっています。"],"originalSlideText":"Netzwerk Präfix und Matching (3)\\n❑ Hostspezifische Routen möglich (Anderer Pfad als andere \\nHosts im Netz)\\n Maske deckt komplette Adresse ab\\n❑ Adressmasken können überlappen\\n Einträge für 128.10.0.0/16 und 128.10.2.0/24\\n Datagramm für 128.10.2.3 trifft für beide\\n❑ Weiterleitung nutzt längsten Präfix (Longest Prefix Match)\\n❑ Einträge mit längsten Präfix zuerst von Software analysiert\\n Eintrag für 128.10.2.0/24 wird genutzt","explanationImage":"","questionImage":""},{"id":20,"questionDe":"(s25) Was versteht man unter Best-Effort Delivery im Internet und welche Probleme können dabei auftreten?","questionJa":"インターネットにおける『Best-Effort型配送（最善努力型配送）』とは何を意味し、その際にどのような問題が起こりうるか？","answerDe":["IPv4 und IPv6 verwenden Best-Effort Delivery.","Probleme: Duplikate, verspätete oder falsch geordnete Datagramme, fehlerhafte Daten, verlorene Datagramme.","Ursachen: Störungen durch Rauschen, unterschiedliche Übertragungspfade.","Zusätzliche Protokolle sind notwendig, um diese Probleme zu beheben."],"answerJa":["IPv4およびIPv6はBest-Effort型の配送を採用している。","問題例：パケットの重複、遅延、順序の乱れ、データの破損、パケットの喪失など。","原因：ハードウェアがノイズに弱い、パケットが異なる経路を通るなど。","これらの問題に対応するために、追加のプロトコル（例：TCP）が必要。"],"explanationDe":["Best-Effort Delivery ist ein Übertragungsprinzip, bei dem das Netzwerk sein Bestes gibt, um ein Paket zuzustellen, jedoch keine Garantie dafür bietet.","Das Internetprotokoll (IP) – sowohl in der Version 4 als auch 6 – arbeitet nach diesem Prinzip: Pakete werden ohne vorherigen Verbindungsaufbau verschickt, und es wird nicht sichergestellt, ob sie überhaupt oder korrekt ankommen.","Daraus resultieren mögliche Probleme wie doppelte Zustellung (Duplikate), verspätete oder in falscher Reihenfolge empfangene Pakete, beschädigte Inhalte oder vollständiger Paketverlust.","Ein Hauptgrund dafür ist die Nutzung verschiedener Pfade durch das Netz. Jedes IP-Datagramm kann über eine andere Route zum Ziel gelangen, abhängig von der momentanen Netzlast oder Ausfällen.","Zudem sind Netzwerkgeräte und Übertragungsmedien anfällig für elektrische Störungen (z. B. Rauschen), die die Integrität der Daten beeinträchtigen können.","Um dennoch eine zuverlässige Kommunikation zu ermöglichen, werden auf höheren Ebenen des Netzwerkprotokollstapels zusätzliche Protokolle eingesetzt – z. B. TCP, das Fehler erkennt, verlorene Pakete neu sendet und die Reihenfolge wiederherstellt.","Diese Trennung zwischen einfacher, schneller Zustellung (IP) und zuverlässiger Kommunikation (TCP) macht das Internet flexibel und leistungsfähig."],"explanationJa":["Best-Effort Delivery（最善努力型配送）は、ネットワークがパケットの配送を『できる限り頑張って』行うが、必ずしも成功するとは限らないという方式です。","インターネットで使われているIP（IPv4およびIPv6）はこの方式に基づいており、パケットは事前に接続を確立することなく送信されます。正しく届く保証や通知もありません。","そのため、配信に伴ってさまざまな問題が発生する可能性があります。例えば、パケットが重複して届いたり、遅れて届いたり、順番が入れ替わったり、内容が破損したり、そもそも届かなかったりする場合があります。","このような問題は、パケットがルートによって異なる経路をたどることや、ネットワーク機器・通信媒体がノイズなどの外的要因に弱いことに起因します。","こうした不安定さを補うために、上位層のプロトコル（例：TCP）が使われます。TCPは、エラー検出、再送、順序の復元などの機能を提供し、通信の信頼性を担保します。","このように、IPは高速・簡潔なデータ転送を行い、信頼性は上位プロトコルに任せるという階層的な設計が、インターネットの柔軟性と拡張性を支えています。","したがって、Best-Effort Deliveryは不完全ながらも効率的な方式であり、他のプロトコルと組み合わせることで完全な通信が実現されます。"],"originalSlideText":"Best-Effort Delivery\\n❑ IPv4 und IPv6 verwenden Best-Effort Delivery\\n❑ Mögliche Probleme\\n Duplikate der Datagramme\\n Datagramme verspätet oder in falscher Reihenfolge\\n Fehlerhafte Daten\\n Verlorene Datagramme\\n❑ Gründe\\n Hardware anfällig für Interferenz durch Rauschen\\n Verschiedene Pfade der Datagramme\\n❑ Zusätzliche Protokolle um Fehler zu beheben","explanationImage":"","questionImage":""},{"id":21,"questionDe":"(s27) Was bedeutet IP-Kapselung und warum ist sie notwendig?","questionJa":"IPカプセル化とは何か？なぜそれが必要なのか？","answerDe":["Hardware versteht das Format von IP-Datagrammen nicht.","IP-Datagramm wird als Teil der Payload in einen Frame gekapselt.","Hardware analysiert oder verändert die Payload nicht.","Der Typ im Frame-Header zeigt an, ob das Payload ein IP-Datagramm enthält.","Frame enthält die MAC-Adresse des nächsten Ziels, ermittelt über IP-Adresse des Next Hops."],"answerJa":["ハードウェアはIPデータグラムの形式を理解しない。","IPデータグラムはフレームのペイロードとしてカプセル化（封入）される。","ハードウェアはペイロードを解析・変更せず、そのまま転送する。","フレームヘッダーのタイプフィールドにより、ペイロードがIPデータグラムであることが示される。","フレームには次の転送先のMACアドレスが含まれており、それはNext HopのIPアドレスに基づき解決される。"],"explanationDe":["IP-Kapselung bezeichnet den Prozess, bei dem ein IP-Datagramm in einen Hardware-spezifischen Frame – z. B. Ethernet – eingebettet wird, um über ein physisches Netzwerk übertragen zu werden.","Da Netzwerkhardware wie Netzwerkkarten oder Switches das IP-Protokoll nicht verstehen, muss das Datagramm in ein Format umgewandelt werden, das diese Geräte erkennen können.","Dies erfolgt, indem das IP-Datagramm als Nutzlast (Payload) in einen Frame eingeschlossen wird, dessen Struktur die Hardware versteht – typischerweise mit MAC-Adressen und Prüfsummen.","Wichtig ist, dass die Hardware nur den Frame verarbeitet – nicht den IP-Inhalt. Die IP-Daten bleiben unangetastet und werden vom Zielsystem analysiert.","Im Frame-Header gibt ein Typfeld an, ob es sich bei der Nutzlast um ein IP-Datagramm handelt – z. B. Typ 0x0800 für IPv4 bei Ethernet.","Damit der Frame an den richtigen Router oder Empfänger weitergeleitet wird, enthält er die MAC-Adresse des nächsten Geräts (Next Hop). Diese wird aus der IP-Adresse des Next Hops durch ARP (Address Resolution Protocol) ermittelt.","IP-Kapselung ist essenziell, um das logisch abstrakte Internetprotokoll auf konkreten physischen Netzwerken nutzbar zu machen."],"explanationJa":["IPカプセル化とは、IPデータグラムを物理ネットワークで伝送できるよう、ハードウェア依存のフレーム（例：イーサネット）内に封入する処理を指します。","ネットワーク機器（NICやスイッチなど）はIPプロトコルの内容を直接理解できないため、それらの機器が扱えるフレーム形式に変換する必要があります。","このため、IPデータグラムはそのままの形でフレームのペイロードとして格納され、フレーム構造（MACアドレス、タイプ、チェックサムなど）を用いて転送されます。","重要なのは、ハードウェアが扱うのはフレームであり、IPデータそのものには触れないという点です。IPの内容は最終的な受信者が処理します。","フレームヘッダーには、ペイロードがIPデータグラムであることを示すフィールド（例：イーサネットでは0x0800）が含まれます。","また、フレームには次の転送先のMACアドレスが含まれており、これはNext HopのIPアドレスに基づいてARPなどを使って解決されます。","このように、論理的なIPプロトコルを現実のネットワークで運用するために、カプセル化は不可欠な技術です。"],"originalSlideText":"IP Kapselung (1)\\n❑ Hardware versteht Datagramm Format nicht\\n❑ IP Datagramm wird als Teil der Payload in Frame gekapselt\\n❑ Hardware analysiert oder ändert Daten der Payload nicht\\n❑ Typ in Frame Header gibt an, ob Payload IP Datagramm \\nenthält\\n❑ Frame enthält MAC des nächsten Ziel (wird von Sender zu \\nIP Adresse des Next Hop ermittelt)","explanationImage":"","questionImage":""},{"id":22,"questionDe":"(s28) Wie läuft die IP-Kapselung im Netzwerk ab und welche Rolle spielen Router dabei?","questionJa":"IPカプセル化はネットワーク内でどのように行われ、ルーターはどのような役割を果たしているか？","answerDe":["Kapselung erfolgt in jedem Netzwerksegment.","Router bestimmt den nächsten Hop anhand der Weiterleitungstabelle.","Der Router kapselt das IP-Datagramm in ein Frame für das nächste Netzwerk.","Das Frame wird ins physische Netzwerk gesendet.","Empfänger entfernt das Frame – und kapselt es ggf. erneut, falls er nicht das Endziel ist."],"answerJa":["カプセル化は各ネットワーク区間で行われる。","ルーターは転送表をもとに次のホップを決定する。","ルーターは、次のネットワークに対応するフレームにIPデータグラムをカプセル化する。","そのフレームを物理ネットワークに送信する。","受信者はフレームを取り除き、最終目的地でなければ再度カプセル化して転送する。"],"explanationDe":["IP-Kapselung findet nicht nur einmal am Anfang der Übertragung statt, sondern wird in jedem einzelnen Netzwerksegment erneut durchgeführt.","Wenn ein Router ein IP-Datagramm empfängt, überprüft er dessen Zieladresse und verwendet die Forwarding-Tabelle, um den nächsten Hop zu bestimmen.","Anschließend verpackt der Router das IP-Datagramm in ein neues Frame, das dem spezifischen physikalischen Medium und Protokoll des nächsten Netzwerks entspricht – z. B. Ethernet, Wi-Fi oder PPP.","Das Frame enthält die MAC-Adresse des nächsten Geräts im Pfad (Next Hop), und wird in das entsprechende physische Netzwerk übertragen.","Am nächsten Router oder Host wird das Frame entkapselt, das IP-Datagramm extrahiert und – falls notwendig – erneut gekapselt, um den nächsten Abschnitt zu durchlaufen.","Dieser wiederholte Kapselungsprozess ermöglicht es, IP-Daten unabhängig vom zugrundeliegenden Netzwerktyp zu transportieren.","Dadurch wird die Interoperabilität zwischen verschiedenen Netzwerktypen (z. B. Ethernet und WLAN) sichergestellt – eine der Schlüsselideen des Internetdesigns."],"explanationJa":["IPカプセル化は、一度限りの処理ではなく、各ネットワーク区間（セグメント）で何度も繰り返されます。","ルーターがIPデータグラムを受信すると、まず宛先アドレスを確認し、転送表（フォワーディングテーブル）をもとに次の中継先（Next Hop）を決定します。","その後、次のネットワークに対応するフレーム（例：Ethernetフレーム、Wi-Fiフレームなど）に、IPデータグラムをペイロードとしてカプセル化します。","作成されたフレームには、次ホップのMACアドレスが含まれ、それを物理ネットワーク上に送信します。","フレームを受け取った機器（ルーターまたはホスト）は、カプセル化されたフレームを取り外し、中身のIPデータグラムを取り出します。そして、最終目的地でない場合は、再び次のネットワーク用にカプセル化して送信します。","このようにして、異なる種類のネットワーク（イーサネットと無線LANなど）を跨いでも、IPデータを一貫して運ぶことが可能になります。","この再カプセル化のプロセスこそが、インターネットが異種ネットワーク間の互換性を実現している鍵となる仕組みです。"],"originalSlideText":"IP Kapselung (2)\\n❑ Kapselung erfolgt für jedes Netzwerk\\n❑ Router ermittelt nächsten Hop\\n❑ Kapselt Datagramm in Frame\\n❑ Übertragt Frame in physisches Netzwerk\\n❑ Empfänger entfernt Frame und kapselt neu für nächstes \\nNetzwerk, falls nicht selbst endgültiger Empfänger","explanationImage":"","questionImage":""},{"id":23,"questionDe":"(s29) Was zeigt die Abbildung zur IP-Kapselung in verschiedenen Netzwerken und warum sind unterschiedliche Frameformate erforderlich?","questionJa":"図に示されているように、IPカプセル化は異なるネットワークでどのように行われるか？また、なぜ異なるフレーム形式が必要なのか？（図あり）","answerDe":["Verschiedene physische Netzwerke erfordern unterschiedliche Frameformate und Headergrößen.","Beispiel: Ethernet-Netzwerk verwendet ein spezifisches Frameformat.","Wi-Fi-Netzwerk nutzt ein anderes Format, das zur Funkübertragung geeignet ist."],"answerJa":["異なる物理ネットワークでは、それぞれ異なるフレーム形式やヘッダーサイズが必要。","例：Ethernetネットワークでは専用のフレーム形式を使用。","Wi-Fiネットワークでは無線伝送に適した別の形式を使用。"],"explanationDe":["Die Abbildung zeigt ein Szenario, in dem ein IP-Datagramm mehrere physikalisch unterschiedliche Netzwerke durchläuft – z. B. ein kabelgebundenes Ethernet-Netz und ein drahtloses WLAN.","Da jedes physische Netzwerk eigene Anforderungen, Übertragungsprotokolle und Hardwarestrukturen hat, werden unterschiedliche Frameformate verwendet.","Ein Ethernet-Frame hat beispielsweise ein fest definiertes Format mit Feldern für MAC-Adressen, Typen und Prüfsummen, das für kabelgebundene Netze optimiert ist.","Ein Wi-Fi-Frame hingegen muss zusätzliche Informationen für drahtlose Kommunikation wie Sequenznummern, SSID oder Verschlüsselung tragen.","Das IP-Datagramm bleibt inhaltlich gleich, wird aber beim Übergang von einem Netzwerk zum anderen jeweils neu gekapselt – angepasst an das jeweilige Medium.","Diese flexible Kapselung erlaubt die End-to-End-Kommunikation über heterogene Infrastrukturen hinweg, ohne dass die Endgeräte etwas davon mitbekommen.","Die Abbildung macht deutlich, dass die Interoperabilität des Internets auf dieser dynamischen und kontextabhängigen Kapselung basiert."],"explanationJa":["この図は、IPデータグラムが異なる物理ネットワークを通過する過程を示しています。たとえば、有線のEthernetネットワークと無線のWi-Fiネットワークをまたぐ例です。","各ネットワークには固有の通信規格とハードウェア構造があり、それぞれ適したフレーム形式が必要になります。","Ethernetフレームは、MACアドレス、タイプ、チェックサムなどのフィールドを含む固定的な構造を持ち、有線通信に最適化されています。","一方、Wi-Fiフレームは、無線特有の通信制御（シーケンス番号、SSID、暗号化情報など）を含む構造となっており、無線通信に適した設計です。","このように、IPデータグラム自体は内容を変えずに、ネットワークごとに異なるフレームに再カプセル化されながら伝送されます。","これにより、異なるネットワーク技術間でもIPレベルでの通信がシームレスに実現され、最終的な送受信者には違いが意識されません。","図は、この動的で柔軟なカプセル化の仕組みが、異種ネットワークをつなぐインターネットの根幹であることを視覚的に示しています。"],"originalSlideText":"IP Kapselung (3)\\n❑ Verschiedene physische \\nNetzwerke → unterschiedliche \\nFrameformate und \\nHeadergrößen\\n❑ Beispiel:\\n Netz 1 Ethernet mit \\npassendem Frame\\n Netz 2 Wi-Fi Netzwerk mit \\npassendem Frame","explanationImage":"","questionImage":""},{"id":24,"questionDe":"(s31) Was ist die Maximum Transmission Unit (MTU) und warum kann Fragmentierung notwendig sein?","questionJa":"MTU（最大転送単位）とは何か？また、なぜフラグメンテーション（分割）が必要になるのか？","answerDe":["MTU ist die maximale Datenmenge pro Frame in einer Hardwaretechnologie.","Ein Datagramm muss kleiner oder gleich der MTU eines Netzwerks sein.","Router verbinden Netzwerke mit unterschiedlichen MTUs.","Ist ein Datagramm zu groß, kann es nicht gekapselt werden und muss fragmentiert werden."],"answerJa":["MTU（最大転送単位）は、各ハードウェア技術で1つのフレームに収められる最大のデータ量を示す。","IPデータグラムは、送信先ネットワークのMTU以下でなければならない。","ルーターは異なるMTUを持つネットワークを接続する役割を持つ。","データグラムが大きすぎる場合、カプセル化できず、分割（フラグメンテーション）が必要になる。"],"explanationDe":["Die Maximum Transmission Unit (MTU) ist die maximale Größe eines Datenblocks (in Oktetts), der in einem einzelnen Netzwerk-Frame übertragen werden kann. Diese Größe variiert je nach Netzwerktyp: z. B. 1500 Bytes für Ethernet, 576 Bytes für PPP.","Wenn ein IP-Datagramm durch ein Netzwerk gesendet werden soll, das eine kleinere MTU hat als die Größe des Datagramms, kann das Datagramm nicht direkt übertragen werden.","In einem solchen Fall ist Fragmentierung notwendig – das IP-Datagramm muss in kleinere Teile aufgeteilt werden, die jeweils in ein Frame mit zulässiger Größe passen.","Da Router mehrere Netzwerke mit unterschiedlichen MTUs verbinden, kann es beim Übergang von einem Netzwerksegment zum anderen zu einer MTU-Überschreitung kommen.","Zum Beispiel: Ein Host sendet ein 1500-Byte-Datagramm, aber das nächste Netzwerk erlaubt nur 1000 Byte pro Frame – das Paket passt nicht und muss fragmentiert werden.","Ohne Fragmentierung würde das Paket entweder verworfen oder gar nicht versendet werden können.","MTU und Fragmentierung sind daher zentrale Konzepte für die Interoperabilität zwischen Netzwerken mit verschiedenen physikalischen Eigenschaften."],"explanationJa":["MTU（Maximum Transmission Unit、最大転送単位）とは、1つのネットワークフレーム内で送信可能な最大データサイズ（バイト単位）のことです。このサイズはネットワークの種類によって異なり、例えばEthernetでは1500バイト、PPPでは576バイトです。","IPデータグラムが、通過しようとするネットワークのMTUよりも大きい場合、そのままでは1つのフレームに収まらず、送信できません。","このような場合、IPデータグラムを複数の小さな部分（フラグメント）に分割し、それぞれをMTU以内のフレームにカプセル化して送信する必要があります。","ルーターは異なるMTUを持つネットワーク同士を接続する役割を果たすため、ネットワークをまたぐ際にMTUの不一致が起こる可能性があります。","たとえば、ホストが1500バイトのデータグラムを送信しようとしても、次のネットワークが1000バイトまでしか対応していない場合、分割しなければ送信できません。","フラグメンテーションを行わないと、パケットは破棄されたり、送信自体が失敗したりする可能性があります。","このように、MTUとフラグメント処理は、異なる物理ネットワーク間での円滑な通信を支える重要な仕組みです。"],"originalSlideText":"MTU und Fragmentierung (1)\\n❑ Maximum Transmission Unit (MTU): Maximalmenge an \\nDaten pro Frame in einer Hardwaretechnologie\\n❑ Datagramm muss kleiner oder gleich Netzwerk MTU sein\\n❑ Router kann Netzwerke mit verschiedenen MTUs verbinden \\n→ Datagramm kann zu groß für nächstes Netzwerk sein\\n❑ Falls Host 𝐻1 Datagramm zu Host 𝐻2 mit 1500 Oktetts \\nsendet, kann Router Datagramm nicht kapseln","explanationImage":"","questionImage":""},{"id":25,"questionDe":"(s32) Wie funktioniert die Fragmentierung von IP-Datagrammen bei IPv4 und IPv6?","questionJa":"IPデータグラムのフラグメント化は、IPv4とIPv6でどのように異なるのか？","answerDe":["Fragmentierung unterteilt ein Datagramm in kleinere Teile (Fragmente).","Jedes Fragment wird in einem separaten Frame übertragen.","Bei IPv4 wird Fragmentierung durch Router durchgeführt.","Bei IPv6 muss der sendende Host die Fragmentierung übernehmen.","Ein IPv4-Fragment hat dasselbe Format wie ein vollständiges Datagramm.","Das FLAGS-Feld zeigt, ob es sich um ein Fragment handelt.","Das FRAGMENT OFFSET-Feld hilft bei der Rekonstruktion am Ziel."],"answerJa":["フラグメンテーションとは、1つのデータグラムを複数の小さなフラグメントに分割する処理である。","各フラグメントは個別のフレームに載せて送信される。","IPv4では、ルーターがフラグメント処理を行う。","IPv6では、送信元ホストがフラグメント処理を行う必要がある。","IPv4のフラグメントは、通常のデータグラムと同じ形式を持つ。","FLAGSフィールドは、フラグメントかどうかを示す。","FRAGMENT OFFSETフィールドは、元のデータグラム中の位置を示すために使われる。"],"explanationDe":["Fragmentierung ist notwendig, wenn ein IP-Datagramm größer ist als die MTU des nächsten Netzwerks. In diesem Fall wird es in mehrere kleinere Fragmente aufgeteilt.","Bei IPv4 kann diese Fragmentierung automatisch durch Router entlang des Übertragungswegs erfolgen. Der Router analysiert die MTU des nächsten Netzwerks und zerlegt das Paket entsprechend.","Jedes Fragment erhält seinen eigenen IP-Header, wobei bestimmte Felder – wie die Identifikationsnummer, Flags und das Fragment-Offset – wichtig für die spätere Rekonstruktion sind.","Das FLAGS-Feld zeigt z. B. an, ob noch weitere Fragmente folgen oder ob es sich um das letzte Fragment handelt.","Das FRAGMENT OFFSET gibt die relative Position des Fragments im ursprünglichen Paket an (in 8-Byte-Schritten).","In IPv6 wurde die Fragmentierung auf den sendenden Host verlagert. Router fragmentieren dort nicht mehr – wenn ein Paket zu groß ist, wird es vom Router verworfen und eine ICMP-Fehlermeldung an den Absender gesendet.","Diese Änderung erhöht die Effizienz der Router und zwingt Endsysteme dazu, im Vorfeld die geeignete Paketgröße zu bestimmen – etwa durch Path MTU Discovery."],"explanationJa":["フラグメンテーションとは、IPデータグラムがMTUを超える大きさの場合に、それを複数の小さなフラグメントに分割する処理です。","IPv4では、ルーターがこの分割処理を自動的に実行することが可能です。ルーターは次のネットワークのMTUを調べ、それに合わせてデータグラムを分割します。","各フラグメントは独自のIPヘッダーを持ち、元のデータグラムを再構成するために必要な情報（識別番号、フラグ、フラグメントオフセットなど）が含まれます。","FLAGSフィールドは、データグラムが分割されたものであるか、またはそれが最後のフラグメントであるかを示します。","FRAGMENT OFFSETは、元のデータグラム中のどの位置にこのフラグメントが属しているかを示します（8バイト単位）。","一方、IPv6ではこの処理はルーターでは行われず、送信元ホストが責任を持って分割する必要があります。もし大きすぎるパケットが送られた場合、ルーターはそれを破棄し、送信元にICMPエラーメッセージを返します。","これにより、ルーターの負荷は軽減され、送信側が事前に適切なパケットサイズ（Path MTU）を把握して送信することが求められます。"],"originalSlideText":"MTU und Fragmentierung (2)\\n❑ Fragmentierung: Unterteilt Datagramm in kleinere Teile \\n(Fragmente) und sendet jedes in separatem Frame\\n❑ In IPv4 bestimmt Router Fragmentierung\\n❑ In IPv6 muss sendender Host Fragmentierung durchführen\\n❑ IPv4 Fragment hat gleiches Format wie IPv4 Datagramme\\n FLAGS Field bestimmt, ob Datagramm Fragment ist\\n FRAGMENT OFFSET Feld hilft bei Zusammensetzung im \\nendgültigen Ziel","explanationImage":"","questionImage":""},{"id":26,"questionDe":"(s33) Wie berechnet ein Router die Fragmentierung eines IPv4-Datagramms und welche Informationen werden in die Fragmente übernommen?","questionJa":"ルーターはIPv4データグラムをどのようにフラグメント化するのか？また、どの情報が各フラグメントに引き継がれるのか？","answerDe":["Router berechnet die maximale Datenmenge pro Fragment anhand von Netzwerk-MTU und Headergröße.","Router bestimmt die Anzahl der Fragmente, die nötig sind.","Felder wie IP SOURCE und IP DESTINATION werden in jeden Fragment-Header kopiert."],"answerJa":["ルーターはネットワークのMTUとヘッダーサイズに基づき、フラグメントごとの最大データ量を計算する。","必要なフラグメントの数を決定する。","IP SOURCEやIP DESTINATIONなどのフィールドは、各フラグメントのヘッダーにコピーされる。"],"explanationDe":["Wenn ein IP-Datagramm fragmentiert werden muss, analysiert der Router zunächst die maximale Übertragungsgröße (MTU) des nächsten Netzwerks.","Da jedes Fragment einen eigenen IP-Header benötigt, zieht der Router die Größe des Headers von der MTU ab, um die maximale Größe der Nutzdaten pro Fragment zu berechnen.","Danach teilt er das ursprüngliche Datagramm in so viele Fragmente auf, wie erforderlich sind, um die gesamte Payload abzudecken.","Wichtig dabei ist, dass jedes Fragment bestimmte Felder des Original-Headers übernehmen muss – insbesondere die Quell- und Zieladresse (IP SOURCE, IP DESTINATION), sowie die IDENTIFICATION-Nummer zur späteren Zusammenführung.","Die Fragmentposition wird über das FRAGMENT OFFSET-Feld angegeben, das in jedem Fragment angepasst wird.","Der letzte Fragment ist häufig kleiner als die übrigen, da die Gesamtgröße nicht exakt durch die maximale Fragmentgröße teilbar ist.","Diese strukturierte Fragmentierung ermöglicht es, große Datenpakete auch über Netze mit kleinen MTUs effizient zu übertragen."],"explanationJa":["IPデータグラムがフラグメント化される必要がある場合、ルーターはまず、次のネットワークにおけるMTU（最大転送単位）を確認します。","各フラグメントにはIPヘッダーが必要なため、MTUからヘッダーのサイズを差し引いた値が、フラグメントごとの最大ペイロードサイズとして計算されます。","その後、元のデータグラムのペイロードをいくつのフラグメントに分ける必要があるかを計算し、それぞれのフラグメントを生成します。","各フラグメントには、元のヘッダーからいくつかの重要なフィールドがコピーされます。特に、送信元アドレス（IP SOURCE）、宛先アドレス（IP DESTINATION）、識別番号（IDENTIFICATION）はすべてのフラグメントに共通です。","また、各フラグメントの中での位置を示すFRAGMENT OFFSETフィールドも適切に設定されます。","元のデータサイズがフラグメントサイズで割り切れない場合、最後のフラグメントだけが他よりも小さくなります。","このようなフラグメント処理により、大きなデータグラムもMTUの小さいネットワークを通じて確実に転送できるようになります。"],"originalSlideText":"MTU und Fragmentierung (3)\\n❑ Router berechnet Maximalmenge an Daten pro Fragment und \\nAnzahl an Fragmente\\n❑ Nutzt dazu Netzwerk MTU und Header Größe\\n❑ Kopiert Felder wie IP SOURCE und IP DESTINATION in \\nFragment Header","explanationImage":"","questionImage":""},{"id":27,"questionDe":"(s34) Wie wird die Fragmentierung in IPv6 durchgeführt und worin unterscheidet sie sich von IPv4?","questionJa":"IPv6におけるフラグメント処理はどのように行われ、IPv4とはどのように異なるのか？","answerDe":["Ein Teil des ursprünglichen Datagramm-Headers wird in jedes Fragment kopiert.","Die Payload-Länge wird an jedes Fragment angepasst.","Im IPv6-Base-Header gibt es keine Felder zur Fragmentierung.","Fragmentinformationen befinden sich im Fragment-Extension-Header.","Das Vorhandensein dieses Headers zeigt an, dass es sich um ein Fragment handelt."],"answerJa":["元のデータグラムヘッダーの一部が各フラグメントにコピーされる。","各フラグメントごとにペイロードの長さが調整される。","IPv6のベースヘッダーにはフラグメント用のフィールドは存在しない。","フラグメント情報はフラグメント拡張ヘッダーに記述される。","この拡張ヘッダーの存在によって、そのパケットがフラグメントであることが示される。"],"explanationDe":["In IPv6 wurde das Fragmentierungskonzept deutlich verändert. Anders als in IPv4 ist nicht der Router für die Fragmentierung zuständig, sondern ausschließlich der Absender (Host).","Jedes Fragment enthält nicht mehr alle Fragmentierungsinformationen im Base Header, sondern in einem separaten Fragment-Extension-Header.","Dieser spezielle Extension Header enthält Informationen wie die Fragmentnummer, das Fragment-Offset und ein Flag, das angibt, ob weitere Fragmente folgen.","Die übrigen Header-Felder (z. B. Quell- und Zieladresse) werden aus dem ursprünglichen Datagramm übernommen und in jedes Fragment kopiert.","Die Payload-Length im Base Header wird je nach Fragmentlänge angepasst, damit jedes Fragment eine konsistente Struktur aufweist.","Durch das Design mit separaten Extension Headern bleibt der IPv6-Basis-Header einfacher und schlanker, was die Router-Performance verbessert.","Die Existenz eines Fragment-Headers zeigt klar an, dass es sich um einen Teil eines fragmentierten Datagramms handelt – das erleichtert die Verarbeitung am Ziel."],"explanationJa":["IPv6では、フラグメンテーションの設計がIPv4とは大きく異なっています。特に、フラグメント処理はルーターではなく、送信元ホストの責任で行われます。","各フラグメントには、IPv4のようにベースヘッダーにフラグメント情報が含まれるのではなく、専用の拡張ヘッダー（Fragment Extension Header）に記述されます。","この拡張ヘッダーには、フラグメント番号、フラグメントオフセット、後続フラグメントの有無を示すフラグなどが含まれています。","元のIPデータグラムのヘッダーから、送信元アドレスや宛先アドレスなどの情報はすべてのフラグメントにコピーされます。","また、ベースヘッダー内のPayload Lengthフィールドも、それぞれのフラグメントサイズに合わせて調整されます。","フラグメント情報を拡張ヘッダーに分離することで、IPv6のベースヘッダーはシンプルになり、ルーターが処理する際の負荷が軽減されます。","そして、この拡張ヘッダーが存在することで、そのパケットがフラグメントであることが明示され、受信側での処理が容易になります。"],"originalSlideText":"Fragmentierung in IPv6 (1)\\n❑ Wie in IPv4 wird Teil des Datagramm Header in jedes \\nFragment kopiert, Payload Länge wird angepasst\\n❑ Keine zusätzlichen Felder für Fragmentierung im Base \\nHeader, stehen in Fragment Extension Header\\n Existenz des Header zeigt an, dass Datagramm Fragment ist\\n Enthält gleiche Informationen wie Fragment Informationen in \\nIPv4 Header","explanationImage":"","questionImage":""},{"id":28,"questionDe":"(s35) Welche Header werden bei der Fragmentierung in IPv6 in die Fragmente kopiert und warum?","questionJa":"IPv6でフラグメント化を行う際、どのヘッダーが各フラグメントにコピーされるのか？その理由は？","answerDe":["Header werden in fragmentierbar und nicht fragmentierbar unterteilt.","Nicht fragmentierbare Header werden in jedes Fragment kopiert.","Diese Header werden von zwischenliegenden Routern benötigt."],"answerJa":["ヘッダーはフラグメント化可能なものと不可能なものに分類される。","フラグメント化できないヘッダーは、すべてのフラグメントにコピーされる。","これらのヘッダーは中継ルーターが必要とするため。"],"explanationDe":["In IPv6 werden Header-Informationen während der Fragmentierung in zwei Kategorien eingeteilt: fragmentierbare und nicht fragmentierbare Header.","Nicht fragmentierbare Header enthalten wichtige Informationen, die von jedem Gerät auf dem Übertragungsweg – insbesondere Routern – benötigt werden, um das Paket korrekt weiterzuleiten.","Solche Header werden in jedes Fragment eingefügt, damit kein Informationsverlust auftritt und alle Fragmente selbstständig verarbeitet werden können.","Beispiele für nicht fragmentierbare Header sind der IPv6 Base Header und Routing Header, da sie Informationen zur Weiterleitung und Verarbeitung enthalten.","Fragmentierbare Header, wie z. B. Optionen für Endsysteme, müssen hingegen nicht in allen Fragmenten enthalten sein – sie betreffen nur das Zielgerät.","Diese Trennung erhöht die Effizienz und verhindert unnötige Wiederholung großer Headerteile in jedem Fragment.","Das Ziel ist, dass Router unterwegs in der Lage sind, jedes Fragment unabhängig zu analysieren, ohne Kontext von vorherigen Fragmenten zu benötigen."],"explanationJa":["IPv6ではフラグメント処理を行う際、ヘッダーは『フラグメント化可能』と『フラグメント化不可能』という2つのカテゴリに分類されます。","フラグメント化不可能なヘッダーは、パケットの中継経路上にあるルーターが処理に必要とする情報を含むため、すべてのフラグメントにコピーされます。","このような情報が各フラグメントに含まれていないと、中継ルーターが適切に転送できなくなる恐れがあります。","代表的な例としては、IPv6ベースヘッダーやルーティングヘッダーがあり、これらは宛先や転送経路に関する情報を保持します。","一方、宛先ホストだけが使用するような拡張オプションなどは、全フラグメントに含める必要はなく、必要なフラグメントのみに含めればよいとされています。","このようにヘッダーの役割に応じて処理を分けることで、各フラグメントのサイズを最小限に保ちつつ、効率的なパケット転送が実現されます。","また、各フラグメントはそれ単体でも処理可能な構造となっており、前後のフラグメントに依存せずに中継ルーターが分析できる点も重要です。"],"originalSlideText":"Fragmentierung in IPv6 (2)\\n❑ Header werden unterteilt in fragmentierbar und nicht \\nfragmentierbar\\n Nicht fragmentierbare Header werden in jedes Fragment \\nkopiert\\n Werden von zwischenliegenden Routern benötigt","explanationImage":"","questionImage":""},{"id":29,"questionDe":"(s36) Was ist Path MTU Discovery in IPv6 und warum ist sie notwendig?","questionJa":"IPv6におけるPath MTU Discovery（経路MTU探索）とは何か？また、それはなぜ必要なのか？","answerDe":["Der ursprüngliche Sender muss entscheiden, ob Fragmentierung erforderlich ist.","Router verwerfen zu große Datagramme und senden eine ICMP-Fehlermeldung zurück.","Path MTU ist die kleinste MTU entlang des Übertragungswegs.","Der Host muss die MTU jedes Netzwerks im Pfad herausfinden – das ist Path MTU Discovery.","Der Host reduziert die Datagrammgröße bei Fehlern, bis die Übertragung erfolgreich ist.","Die Größe nachfolgender Datagramme ist dadurch begrenzt."],"answerJa":["送信元ホストがフラグメント化が必要かどうかを判断する必要がある。","ルーターは大きすぎるデータグラムを破棄し、ICMPエラーを返す。","Path MTUは通信経路上の最小のMTUである。","ホストは通信経路上の各ネットワークのMTUを調査する必要がある（Path MTU Discovery）。","ホストはエラーを受け取るたびに、データグラムのサイズを縮小する。","この結果、後続のデータグラムの最大サイズが制限される。"],"explanationDe":["In IPv6 ist Fragmentierung durch Router nicht erlaubt. Wenn ein Datagramm zu groß für das nächste Netzwerk ist, wird es vom Router verworfen.","Der Router sendet daraufhin eine ICMPv6-Nachricht (Packet Too Big) an den ursprünglichen Absender zurück, um ihn über die zulässige MTU zu informieren.","Deshalb muss der Host vor dem Senden großer Pakete herausfinden, welche maximale Paketgröße über den gesamten Pfad akzeptiert wird – dies nennt man Path MTU Discovery (PMTUD).","Dabei beginnt der Host mit einem großen Datagramm, z. B. 1500 Byte, und reduziert die Größe schrittweise, wenn er ICMP-Fehlermeldungen erhält.","Wenn ein Datagramm erfolgreich übertragen wird, merkt sich der Host die funktionierende Größe und verwendet sie für alle weiteren Pakete an dieses Ziel.","Path MTU Discovery verhindert unnötige Fragmentierung und verbessert die Effizienz der Übertragung.","Da jeder Pfad unterschiedliche MTU-Werte haben kann (z. B. Ethernet, VPN, Tunnel), ist PMTUD ein unverzichtbarer Mechanismus im IPv6-Netzwerkdesign."],"explanationJa":["IPv6では、ルーターによるフラグメント処理が許可されていません。もしデータグラムが次のネットワークのMTUを超えていた場合、ルーターはそれを破棄し、ICMPv6のエラーメッセージ（Packet Too Big）を送信元に返します。","そのため、送信元ホストは、送信する前に通信経路上のすべてのネットワークが受け入れ可能な最大パケットサイズを特定する必要があります。この仕組みがPath MTU Discovery（経路MTU探索）です。","ホストは通常、Ethernetの標準MTUである1500バイトなどの大きなサイズから送信を始め、もしICMPエラーを受信した場合にはパケットサイズを段階的に縮小します。","その後、エラーが出ずに正常に送信できたサイズを記録し、同じ宛先に対しては以後そのサイズを使い続けます。","このようにして、無駄なフラグメントを避け、通信の効率性と信頼性を高めることができます。","特に、Ethernet、トンネリング、VPNなどの技術を跨ぐ場合、MTUが場所によって異なるため、Path MTU DiscoveryはIPv6の運用において必須の機能です。","なお、IPv4でもPath MTU Discoveryは利用されますが、IPv6ではルーターがフラグメントしないことから特に重要視されています。"],"originalSlideText":"Fragmentierung in IPv6 (3)\\n❑ Ursprünglicher Sender muss über Fragmentierung \\nentscheiden\\n❑ Router verwirft Datagramm und sendet Fehler mit ICMP\\n❑ Path MTU: Minimale MTU des Pfad\\n❑ Host muss MTU von jedem Netzwerk auf Pfad lernen → Path \\nMTU Discovery\\n Host wählt initiale Größe von Datagramm (z.B. Ethernet MTU \\n1500) und sendet\\n Erhält er Fehler von einem Router, reduziert er MTU bis \\nÜbertragung funktioniert\\n Maximalgröße von nachfolgenden Datagrammen beschränkt","explanationImage":"","questionImage":""},{"id":30,"questionDe":"(s37) Wer ist für das Zusammensetzen von IP-Fragmenten verantwortlich und warum übernehmen Router diese Aufgabe nicht?","questionJa":"IPフラグメントの再構成（再結合）は誰が行うのか？なぜルーターはこの処理を行わないのか？","answerDe":["Der Empfänger erkennt anhand von Flags, ob es sich um ein Fragment handelt.","Alle Fragmente haben dieselbe Zieladresse.","Nur der endgültige Empfänger ist für das Zusammensetzen der Fragmente zuständig.","Router fügen Fragmente nicht zusammen.","Dies reduziert den Speicherbedarf in Routern.","Routen können sich dynamisch ändern – das Zusammensetzen durch Router wäre unpraktisch."],"answerJa":["受信者はフラグフィールドをもとにフラグメントかどうかを識別する。","すべてのフラグメントは同じ宛先アドレスを持っている。","フラグメントの再構成は、最終的な受信者のみが行う。","ルーターはフラグメントを再構成しない。","これはルーター側のメモリ使用量を抑えるためでもある。","経路は動的に変化するため、ルーターでの再構成は現実的でない。"],"explanationDe":["Im Internet werden IP-Datagramme bei Bedarf fragmentiert, um über Netzwerke mit kleineren MTUs transportiert zu werden. Am Ziel müssen diese Fragmente wieder zu einem vollständigen Paket zusammengesetzt werden.","Für diese Aufgabe ist ausschließlich der Endempfänger zuständig – das kann ein Host oder ein Server sein. Der Empfänger erkennt anhand der Fragment-Flags und der Identifikationsnummer, ob und wie Fragmente zusammengehören.","Alle Fragmente eines ursprünglichen Pakets besitzen dieselbe Zieladresse und dieselbe Identifikationsnummer. So kann der Empfänger sie korrekt gruppieren.","Router auf dem Übertragungsweg fügen Fragmente nicht zusammen, da das mit erheblichem Speicher- und Verwaltungsaufwand verbunden wäre.","Außerdem sind IP-Routen dynamisch: Ein Fragment könnte über einen anderen Pfad eintreffen als ein anderes. Eine zentrale Zusammensetzung durch einen Router wäre unzuverlässig.","Stattdessen wird jedes Fragment unabhängig transportiert, und erst beim Eintreffen aller Fragmente kann der Empfänger die vollständige Nachricht rekonstruieren.","Diese Designentscheidung macht das IP-Netzwerk effizienter und robuster gegenüber Netzwerktopologieänderungen."],"explanationJa":["インターネットでは、MTUの小さなネットワークを通過するためにIPデータグラムがフラグメント化されることがあります。これらのフラグメントは、通信の最終目的地で再構成される必要があります。","この再構成を担当するのは、最終的な受信者（ホストまたはサーバ）であり、ルーターではありません。","受信者は、フラグメントのフラグ情報（FLAGS）や識別番号（IDENTIFICATION）を参照することで、どのフラグメントがどのデータグラムに属するかを判断します。","すべてのフラグメントは同じ宛先IPアドレスを持っており、それにより受信者側でグループ化して処理することが可能です。","一方、ルーターがフラグメントの再構成を行わないのは、メモリや処理の負担が大きく、非効率的だからです。","また、インターネット上のルートは動的に変化するため、すべてのフラグメントが同じルーターを経由する保証がなく、途中の再構成は不可能に近い状況です。","そのため、フラグメントは分散的かつ独立して運ばれ、最終的に宛先ホストでまとめて再構成されるという設計になっています。"],"originalSlideText":"Zusammenfügen von Fragmenten (1)\\n❑ Empfänger erkennt an Flags, ob Datagramm Fragment ist\\n❑ Fragmente haben dieselbe Zieladresse\\n❑ IP spezifiziert, dass nur der Empfänger die  Fragmente \\nzusammenfügen soll (nicht die Router)\\n Weniger Zustandsinformationen in Router\\n Routen können sich dynamisch ändern","explanationImage":"","questionImage":""},{"id":31,"questionDe":"(s38) Was zeigt das Beispiel zur Fragmentierung und Weiterleitung in IPv4 und IPv6 und wie unterscheiden sich Host und Router dabei? (mit Abbildung)","questionJa":"図に示されているように、IPv4とIPv6でのフラグメント処理とルーターの動作はどのように異なるか？（図あり）","answerDe":["Im Beispiel sendet Host H1 ein 1500-Oktett-Datagramm an Host H2.","Router R1 fragmentiert das Datagramm und sendet zwei Fragmente an R2.","Bei IPv6 erfolgt die Fragmentierung nicht durch Router, sondern durch den Host (H1).","Router R2 setzt die Fragmente nicht zusammen."],"answerJa":["図の例では、ホストH1が1500オクテットのデータグラムをホストH2に送信している。","IPv4ではルーターR1がデータグラムを2つのフラグメントに分割し、R2に転送する。","IPv6ではルーターではなく、ホストH1があらかじめフラグメント化を行う。","ルーターR2はフラグメントを再構成せず、受信者にそのまま転送する。"],"explanationDe":["Die Abbildung illustriert den Ablauf der Fragmentierung bei IPv4 und IPv6 entlang eines einfachen Netzwerks mit zwei Hosts (H1, H2) und zwei Routern (R1, R2).","Im IPv4-Fall sendet H1 ein großes Datagramm (z. B. 1500 Bytes) an H2. Da R1 erkennt, dass das nächste Netzwerk eine kleinere MTU hat, fragmentiert er das Datagramm in zwei kleinere Teile und leitet sie weiter an R2.","R2 überprüft die Fragmente, setzt sie aber nicht zusammen, sondern reicht sie weiter an den Endhost H2 – dort erfolgt die Reassemblierung.","Im Gegensatz dazu zeigt das IPv6-Beispiel, dass die Fragmentierung bereits am Sender H1 erfolgt. Der Host kennt die Path MTU und teilt das Paket vorab in zwei Fragmente auf.","Diese Fragmente durchlaufen die Router R1 und R2 unverändert – beide Router greifen nicht in die Fragmentierung ein.","Diese Darstellung macht den fundamentalen Unterschied zwischen IPv4 (Router-fragmentierend) und IPv6 (Host-fragmentierend) deutlich.","Die Abbildung zeigt, wie die Verantwortung für Fragmentierung in IPv6 vollständig auf die Endsysteme verlagert wurde, um die Effizienz im Kernnetz zu verbessern."],"explanationJa":["この図では、ホストH1からホストH2への通信の中で、IPv4とIPv6におけるフラグメント処理の違いが示されています。ネットワークには2つのルーター（R1とR2）が存在します。","IPv4の場合、H1から送られた1500バイトのIPデータグラムは、ルーターR1によって2つのフラグメントに分割され、それがルーターR2を経由してH2に届きます。","このとき、ルーターR2はフラグメントを結合せず、フラグメントのまま転送し、最終的にH2で再構成されます。","一方、IPv6ではフラグメント処理はルーターではなくホストH1が実施します。H1は事前にPath MTUを考慮して、データグラムをフラグメントに分割します。","IPv6では、R1およびR2のルーターはフラグメントをそのまま中継するだけで、再構成や新たなフラグメント処理を行いません。","この例は、IPv4ではルーターがフラグメント処理を担うのに対し、IPv6ではホストにその責任を移すという根本的な違いを視覚的に示しています。","つまり、IPv6ではルーターの処理負荷を減らし、ネットワーク全体の効率を高めるために、フラグメント処理は完全にエンドホストに委ねられているのです。"],"originalSlideText":"Zusammenfügen von Fragmenten (2)\\n❑ Host 𝐻1 sendet IPv4 Datagramm mit 1500 Oktetts zu Host \\n𝐻2\\n❑ Router 𝑅1 zerlegt es in zwei Fragmente und sendet an 𝑅2\\n❑ Wird IPv6 verwendet, zerlegt Host 𝐻1 Datagramm\\n❑ Router 𝑅2 fügt Fragmente nicht zusammen","explanationImage":"","questionImage":""},{"id":32,"questionDe":"(s39) Wie erkennt ein Empfänger zusammengehörige Fragmente und welche Informationen werden dafür verwendet?","questionJa":"受信者はどのようにして同一のIPデータグラムに属するフラグメントを識別し、それにはどのような情報が使われるか？","answerDe":["Fragmente können verloren gehen oder in falscher Reihenfolge eintreffen.","Fragmente verschiedener Datagramme können gleichzeitig beim Empfänger ankommen.","Der Empfänger verwendet die Quelladresse und das IDENTIFICATION-Feld, um Fragmente einem Datagramm zuzuordnen.","Das FRAGMENT OFFSET gibt die Position des Fragments im ursprünglichen Datagramm an."],"answerJa":["フラグメントは途中で失われたり、順番が乱れて届いたりする可能性がある。","異なるデータグラムのフラグメントが同時に届くこともある。","受信者は送信元アドレスと識別番号（IDENTIFICATION）を使って、各フラグメントがどのデータグラムに属するかを判断する。","FRAGMENT OFFSETフィールドは、元のデータグラム内でのフラグメントの位置を示す。"],"explanationDe":["Beim Empfang von IP-Fragmenten muss der Zielhost feststellen, welche Fragmente zu welchem ursprünglichen Datagramm gehören.","Da mehrere Fragmentierungsprozesse gleichzeitig stattfinden können – etwa bei parallelen Verbindungen –, muss der Empfänger sie korrekt zuordnen.","Dazu prüft er die Kombination aus Quelladresse (Source IP) und Identifikationsnummer (IDENTIFICATION-Feld), die für jedes Datagramm eindeutig ist.","Zusätzlich hilft das FRAGMENT OFFSET-Feld dabei, die Reihenfolge der Fragmente zu rekonstruieren, da es die Position im ursprünglichen Datagramm angibt.","Fragmente können in beliebiger Reihenfolge eintreffen – der Empfänger muss sie entsprechend sortieren und dann zusammensetzen.","Auch wenn Fragmente von verschiedenen Datagrammen nahezu gleichzeitig eintreffen, verhindert die eindeutige Zuordnung über diese Felder eine Vermischung.","Diese strukturierte Identifikation ist notwendig, um bei fragmentierter Übertragung die Integrität der ursprünglichen Daten sicherzustellen."],"explanationJa":["IPフラグメントを受信する際、受信者は各フラグメントがどの元のデータグラムに属しているかを判断する必要があります。","なぜなら、複数の通信が同時に行われている場合、それぞれのフラグメントが混在して届く可能性があるからです。","この識別のために使われるのが『送信元IPアドレス』と『IDENTIFICATIONフィールド（識別番号）』です。この2つの組み合わせによって、フラグメントがどのデータグラムに属するかが特定されます。","さらに、各フラグメントには『FRAGMENT OFFSET（フラグメントオフセット）』というフィールドがあり、元のデータグラム内での位置を示しています。","フラグメントは順不同で到着することがあるため、受信者はこれらの情報を使って正しい順番に並び替える必要があります。","異なるデータグラムのフラグメントが同時に届く場合でも、アドレスと識別番号で明確に区別できるため、混同は防がれます。","このように、フラグメントの識別と順序管理は、分割されたパケットの正確な再構成に欠かせない仕組みです。"],"originalSlideText":"Sammeln der Fragmente\\n❑ Fragmente können verloren gehen oder in falscher \\nReihenfolge ankommen\\n❑ Fragmente von verschiedenen Datagrammen können bei \\nEmpfänger ankommen\\n❑ Empfänger bestimmt Datagramm eines Fragment anhand \\nAdresse des Senders und IDENTIFICATION Feld\\n❑ FRAGMENT OFFSET gibt Stelle des Fragment in \\nursprünglichen Datagramm an","explanationImage":"","questionImage":""},{"id":33,"questionDe":"(s40) Was passiert bei Verlust von Fragmenten und wie geht der Empfänger damit um?","questionJa":"フラグメントの一部が失われた場合、受信者はどのように対処するか？","answerDe":["Bei Verlust eines Fragments kann das Datagramm nicht zusammengesetzt werden.","Empfänger speichert Fragmente, da sie verspätet eintreffen können.","IP gibt eine maximale Speicherzeit vor – danach werden Fragmente verworfen.","Beim Eintreffen des ersten Fragments startet der Empfänger einen Reassembly-Timer.","Wird nicht rechtzeitig alles empfangen, werden alle Fragmente gelöscht.","Es gibt keinen Mechanismus, den Sender über fehlende Fragmente zu informieren."],"answerJa":["フラグメントの一部が失われると、元のデータグラムは再構成できない。","受信者は、フラグメントが遅れて届く可能性を考慮して一時的に保存する。","IPプロトコルでは、保存期間の上限が定められている。","最初のフラグメントが届いた時点で、受信者は再構成タイマーを開始する。","タイマーが切れるまでにすべてのフラグメントが揃わない場合、それらはすべて破棄される。","欠落したフラグメントについて送信者に通知する仕組みは存在しない。"],"explanationDe":["Fragmentierung birgt das Risiko, dass einzelne Fragmente auf dem Übertragungsweg verloren gehen. Wenn auch nur eines fehlt, kann das vollständige IP-Datagramm nicht wiederhergestellt werden.","Da Fragmente nicht immer in der richtigen Reihenfolge oder gleichzeitig ankommen, speichert der Empfänger alle eingetroffenen Fragmente temporär im Speicher.","IP legt fest, wie lange Fragmente gespeichert werden dürfen – dies verhindert, dass der Speicher durch unvollständige Datagramme überlastet wird.","Sobald das erste Fragment eintrifft, startet der Empfänger einen sogenannten Reassembly-Timer.","Wenn der Timer abläuft und nicht alle zugehörigen Fragmente eingetroffen sind, verwirft der Empfänger sämtliche gespeicherten Fragmente dieses Datagramms.","Das IP-Protokoll bietet dabei keinen Mechanismus, um dem Sender mitzuteilen, dass Fragmente fehlen – es handelt sich um ein verbindungsloses und unzuverlässiges Protokoll.","Die Verantwortung für eine eventuelle Wiederholung der Übertragung liegt bei höheren Protokollen wie TCP, die Verlust erkennen und beheben können."],"explanationJa":["IPフラグメント通信では、一部のフラグメントがネットワーク途中で失われる可能性があり、1つでも欠けてしまうと元のデータグラムは再構成できなくなります。","フラグメントは順不同で到着することもあるため、受信者はすぐに再構成せず、一定時間フラグメントを一時的に保存します。","IPプロトコルでは、この保存時間に制限があり、それを超えたフラグメントは破棄されます。これにより、未完成のデータで受信者のメモリが無駄に消費されるのを防ぎます。","最初のフラグメントが到着した時点で、受信側では『再構成タイマー（Reassembly Timer）』が開始されます。","このタイマーが切れるまでにすべてのフラグメントが到着しなければ、それまでに届いていたフラグメントも含め、すべて破棄されます。","IPはBest-Effort型のプロトコルであるため、欠落したフラグメントについて送信者に通知する仕組みがありません。","そのため、再送やエラー検出といった処理は、TCPのような上位プロトコルが担います。"],"originalSlideText":"Verlust von Fragmenten\\n❑ Bei Verlust eines Fragments kann Datagramm nicht \\nzusammengefügt werden\\n❑ Empfänger muss Fragmente speichern, da Fragment \\nverspätet ankommen kann\\n❑ IP spezifiziert maximale Zeit bis Fragmente verworfen \\nwerden → Reduziert Speicherbedarf\\n Bei Erhalt von erstem Fragment startet Empfänger Reassembly\\nTimer\\n Läuft Timer ab und nicht alle Fragmente wurden erhalten, \\nwerden alle Fragmente verworfen\\n Kein Mechanismus um Sender über fehlende Fragmente zu \\ninformieren","explanationImage":"","questionImage":""},{"id":34,"questionDe":"(s41) Können IPv4-Fragmente erneut fragmentiert werden und was bedeutet das für die Verarbeitung beim Empfänger?","questionJa":"IPv4のフラグメントはさらに分割されることがあるのか？それは受信者の処理にどのような影響を与えるか？","answerDe":["Ein Fragment kann Netzwerke mit kleinerer MTU erreichen.","Ein Fragment kann wie ein normales Datagramm weiter fragmentiert werden.","Der Empfänger muss nicht wissen, ob Fragmente erneut fragmentiert wurden.","Keine zusätzlichen Informationen im Header notwendig.","Dies spart CPU-Zeit beim Empfänger."],"answerJa":["フラグメントがより小さなMTUのネットワークに到達することがある。","フラグメントも通常のデータグラムと同様に再フラグメント化される可能性がある。","受信者はフラグメントが再度分割されたかどうかを知る必要はない。","追加のヘッダー情報は必要ない。","これにより、受信側のCPU処理が軽減される。"],"explanationDe":["Im IPv4-Protokoll ist es möglich, dass ein bereits fragmentiertes Paket auf dem weiteren Übertragungsweg nochmals fragmentiert wird.","Dies kann passieren, wenn ein Fragment ein Netzwerk erreicht, dessen MTU noch kleiner ist als das ursprüngliche Fragment.","Das neue Fragment wird dabei wie ein eigenständiges Datagramm behandelt und in kleinere Teile aufgeteilt.","Wichtig ist, dass für diese zweite Fragmentierung keine speziellen Zusatzinformationen notwendig sind – das vorhandene IP-Header-Format reicht aus.","Am Zielsystem ist es nicht erforderlich zu wissen, wie oft das ursprüngliche Paket fragmentiert wurde. Alle Fragmente tragen dieselbe Identifikationsnummer und enthalten genug Informationen zur Wiederzusammensetzung.","Diese Eigenschaft reduziert die Komplexität für den Empfänger und vermeidet zusätzlichen Verarbeitungsaufwand.","Obwohl die Möglichkeit der mehrfachen Fragmentierung die Fehlersuche erschwert, erhöht sie die Flexibilität bei der Datenübertragung über verschiedenartige Netzwerke."],"explanationJa":["IPv4では、すでにフラグメント化されたパケットが、さらに小さなMTUを持つネットワークに到達した場合、再びフラグメント化されることが可能です。","このように、1つのフラグメントが通常のデータグラムと同様に、再度小さな単位に分割されることがあります。","この再フラグメント化には特別な処理や追加のヘッダ情報は不要で、既存のIPヘッダー構造のままで十分に対応可能です。","受信者側では、パケットがどの時点で、何回フラグメントされたかを知る必要はありません。すべてのフラグメントは同じ識別番号を持ち、FRAGMENT OFFSETなどの情報から再構成できます。","この仕組みによって、受信側の処理が簡素化され、CPU負荷も抑えられます。","ただし、トラブルシューティングの難易度は若干上がりますが、異なるネットワーク環境を跨ぐ際の柔軟性は大きく向上します。","これは、インターネットのような多様な物理層構成を持つネットワークにおいて、安定した通信を実現するための設計上の利点です。"],"originalSlideText":"Fragmentierung von IPv4 Fragmenten\\n❑ Fragment kann Netzwerk mit kleinerer MTU erreichen (In \\nIPv6 durch MTU Path Discovery verhindert)\\n❑ Fragment kann wie ein normales Datagramm weiter \\nfragmentiert werden\\n❑ Empfänger muss nicht wissen, ob Fragmente weiter \\nfragmentiert wurden\\n Keine zusätzlichen Informationen in Header notwendig\\n Spart CPU Zeit","explanationImage":"","questionImage":""},{"id":35,"questionDe":"(s42) Welche zentralen Aspekte der IP-Datagrammverarbeitung fasst die Vorlesung zusammen?","questionJa":"この講義では、IPデータグラムの処理に関してどのような重要なポイントがまとめられているか？","answerDe":["Der Datagramm-Header enthält Informationen zur Zustellung an das Ziel.","Router verwenden Weiterleitungstabellen, um den nächsten Hop zu bestimmen.","Nur die Zieladresse, nicht der nächste Hop, steht im Datagramm-Header.","IP-Datagramme werden in Frames gekapselt.","Unterschiedliche MTUs in Netzwerken können Fragmentierung notwendig machen."],"answerJa":["IPデータグラムのヘッダーには、宛先への配送に必要な情報が含まれている。","ルーターはフォワーディングテーブルを使って次のホップを決定する。","データグラムヘッダーには次のホップではなく、最終的な宛先アドレスのみが記載される。","IPデータグラムはフレームにカプセル化されて送信される。","ネットワークごとにMTUが異なるため、フラグメント処理が必要になる場合がある。"],"explanationDe":["Zum Abschluss der Vorlesung werden die zentralen Konzepte im Umgang mit IP-Datagrammen zusammengefasst.","Zunächst enthält der IP-Header alle wesentlichen Steuerinformationen: Zieladresse, Quelladresse, Fragmentierungsangaben, TTL usw., die für die korrekte Zustellung benötigt werden.","Router nutzen ausschließlich die Zieladresse im Header, um über ihre Weiterleitungstabellen den besten nächsten Hop zu bestimmen – es steht kein expliziter Next-Hop im Paket selbst.","IP-Datagramme sind unabhängig von der zugrundeliegenden Hardware und werden für die Übertragung in spezifische Frames gekapselt, die je nach Netzwerk unterschiedlich ausfallen können (z. B. Ethernet, Wi-Fi).","Da jedes physische Netzwerk eine eigene maximale Übertragungseinheit (MTU) hat, kann es nötig werden, ein großes Datagramm in kleinere Fragmente zu zerlegen.","Diese Fragmentierung und spätere Wiederzusammensetzung erfolgt je nach IP-Version unterschiedlich, wird jedoch nur beim Endgerät abgeschlossen.","All diese Mechanismen bilden gemeinsam die Grundlage für eine flexible, skalierbare und interoperable Datenübertragung im Internet."],"explanationJa":["この講義の最後では、IPデータグラムの取り扱いに関する主要な概念がまとめられています。","まず、IPヘッダーには、宛先・送信元アドレス、フラグメント情報、TTLなど、パケットを目的地まで届けるための重要な制御情報がすべて含まれています。","ルーターはこの中の宛先アドレスのみを参照して、自身のフォワーディングテーブルを用いて、次にどのルーター（ホップ）へ転送すべきかを決定します。データグラム自体には次のホップの情報は含まれていません。","IPデータグラムはハードウェアに依存しない形式で構成されており、物理ネットワークで送信する際には、それぞれのネットワーク形式に合わせたフレーム（例：Ethernetフレーム、Wi-Fiフレーム）にカプセル化されます。","ネットワークごとにMTU（最大転送単位）が異なるため、1つの大きなIPデータグラムが複数のフラグメントに分割される必要があることもあります。","このフラグメントの処理と再構成は、IPのバージョン（IPv4/IPv6）によって方法が異なり、最終的には受信側で行われます。","以上のすべての仕組みにより、異種ネットワーク間での柔軟かつスケーラブルな通信がインターネット上で可能となっているのです。"],"originalSlideText":"Zusammenfassung\\n❑ Datagramm Header enthält Informationen um Datagramm zu \\nZiel zu übertragen\\n❑ IP Software in Router verwendet Weiterleitungstabelle um \\nnächsten Hop zu finden\\n❑ Nur Adresse von endgültigem Ziel und nicht nächstem Hop \\nsteht in Datagramm Header\\n❑ IP Datagramm wird in Frame gekapselt\\n❑ Unterschiedliche MTU in verschiedenen Netzen →\\nDatagramme können fragmentiert werden","explanationImage":"","questionImage":""}]');const g={class:"container py-4"},m={class:"text-center mb-5"},o={class:"display-5 fw-bold text-primary"},h={class:"fs-5 text-muted"},c={class:"text-dark"};var P={__name:"Lecture09Page",setup(e){const n=(0,s.lq)(),r=(0,a.KR)(""),P=(0,a.KR)(""),f=(0,a.KR)(""),w=(0,a.KR)([]);return(0,i.sV)(()=>{const e="lecture04",i=parseInt(n.name.split("_")[1]),t=l[e];r.value=t.title,f.value=i.toString().padStart(2,"0");const a=t.lectures.find(e=>e.number===i);P.value=a?a.title:"",w.value=u}),(e,n)=>((0,i.uX)(),(0,i.CE)("div",g,[(0,i.Lk)("div",m,[(0,i.Lk)("h1",o,(0,t.v_)(r.value),1),(0,i.Lk)("p",h,[(0,i.eW)(" Lecture "+(0,t.v_)(f.value)+": ",1),(0,i.Lk)("span",c,(0,t.v_)(P.value),1)]),n[0]||(n[0]=(0,i.Lk)("hr",{class:"w-25 mx-auto border-primary"},null,-1))]),((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(w.value,e=>((0,i.uX)(),(0,i.Wv)(d.A,{key:e.id,question:e},null,8,["question"]))),128))]))}};const f=P;var w=f}}]);
//# sourceMappingURL=8485.f47b9e37.js.map