{"version":3,"file":"js/861.69e4eb1c.js","mappings":"wRACEA,EAAAA,EAAAA,IAoFM,MApFNC,EAoFMC,EAAA,KAAAA,EAAA,K,i5FC/ER,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_30.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_30.vue?16c8"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">3(a) Dijkstra – Start und Initialisierung</h3>\r\n\r\n    <!-- 問題文（Deutsch + 日本語） -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n      <p><strong>Aufgabe:</strong><br />\r\n        Wie startet der Algorithmus und wie wird das Basiskantengewicht berechnet?<br />\r\n        (Hinweis: Der Begriff „Basiskantengewicht“ war vermutlich nicht korrekt formuliert.)\r\n      </p>\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        Dijkstraアルゴリズムはどのように開始され、初期の重み（基準エッジの重み？）はどのように決定されるか？<br />\r\n        （※「Basiskantengewicht」は誤った表現だった可能性あり）\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答：ドイツ語 & 日本語 横並び -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n        <p>\r\n          Der Dijkstra-Algorithmus startet bei einem gegebenen Startknoten (z.B. A) und setzt dessen Distanz auf 0.\r\n          Alle anderen Knoten erhalten zunächst den Wert ∞ (unendlich) als vorläufige Distanz.\r\n        </p>\r\n        <p>\r\n          Dann prüft man alle direkten Nachbarn des Startknotens. Die Kosten (Kanten­gewichte) zu diesen Nachbarn werden\r\n          als vorläufige Distanzen gesetzt. Diese stammen direkt aus der gegebenen Topologie – es ist keine spezielle Berechnung notwendig.\r\n        </p>\r\n        <p>\r\n          Danach wird iterativ der Knoten mit der kleinsten bekannten Distanz ausgewählt\r\n          und alle seine Nachbarn werden mithilfe der Formel<br />\r\n          <code>D(v) = min(D(v), D(w) + c(w,v))</code><br />\r\n          aktualisiert („Relaxierung“).\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        <p>\r\n          Dijkstra アルゴリズムは、出発ノード（例：A）から開始し、そのノードの距離を 0 に設定します。\r\n          他のすべてのノードの距離は初期状態として無限大（∞）とされます。\r\n        </p>\r\n        <p>\r\n          次に、開始ノードに直接接続された隣接ノードを確認し、そのリンクのコストを初期距離として設定します。\r\n          この時点でのコストは既知のもので、計算というよりも与えられた値の代入です。\r\n        </p>\r\n        <p>\r\n          その後、未確定ノードの中から最小距離のノードを選び、そのノードの隣接ノードに対して\r\n          <br />\r\n          <code>D(v) = min(D(v), D(w) + c(w,v))</code><br />\r\n          を用いて距離を更新します（これを「緩和処理」またはリラクゼーションと呼びます）。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 図の挿入 -->\r\n    <div class=\"text-center my-4\">\r\n      <img\r\n        src=\"@/assets/lecture/lecture03/Figure_0303.png\"\r\n        alt=\"Dijkstra Beispielgraph\"\r\n        class=\"img-fluid rounded border\"\r\n      />\r\n      <p class=\"text-muted mt-2\">図 3.3 — Dijkstraアルゴリズムの初期ステップ</p>\r\n    </div>\r\n\r\n    <!-- 解説 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Erklärung (Deutsch)</h5>\r\n        <p>\r\n          In Zeile 2–6 wird die Initialisierung vorgenommen: Nur der Startknoten ist im Set <code>N′</code>, alle anderen\r\n          bekommen initiale Distanzwerte. In der ersten Runde werden nur direkte Nachbarn betrachtet. Die sogenannten „Kantengewichte“\r\n          sind hier einfach die gegebenen Verbindungskosten.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>解説（日本語）</h5>\r\n        <p>\r\n          アルゴリズムの2〜6行目では初期化を行い、スタートノードのみが探索済み集合に追加されます。\r\n          初期コストは、直接接続されているノードとのリンクコストに基づいて設定されます。\r\n          これが「初期エッジ重み」の意味で、特に式で導くのではなく、図から与えられる値です。\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// No script needed\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_30.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_30.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_30.vue?vue&type=style&index=0&id=739387f0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-739387f0\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}