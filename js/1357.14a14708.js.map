{"version":3,"file":"js/1357.14a14708.js","mappings":"mRACEA,EAAAA,EAAAA,IAyTM,MAzTNC,EAyTMC,EAAA,KAAAA,EAAA,K,mjoBCpTR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_22_ex.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_22_ex.vue?b9a7"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">2(b) Ergänzende Themen: Switching und Netzwerkentwicklung</h3>\r\n\r\n<!-- Thema 1: Warum Repeater, Hubs und Bridges entstanden sind -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Von Repeater zu Bridge – Techniken zur Reichweiten- und Kollisionskontrolle\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    リピータからブリッジへ：距離と衝突の問題を解決するための技術の発展\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>In frühen Ethernet-Topologien war die Reichweite durch Signalverlust stark begrenzt.</li>\r\n      <li><strong>Repeater</strong> wurden eingeführt, um auf Layer 1 analoge Signale zu verstärken und die Reichweite zu vergrößern.</li>\r\n      <li>Allerdings verlängerte der Repeater nur das gemeinsame Medium – das Problem von Kollisionen blieb bestehen.</li>\r\n      <li><strong>Hubs</strong> als Mehrport-Repeater ermöglichten die Verbindung mehrerer Geräte, verschärften aber das Kollisionsrisiko, da alle Ports simultan aktiv waren.</li>\r\n      <li>Die Kollisiondomäne umfasste weiterhin das gesamte Netzsegment.</li>\r\n      <li><strong>Bridges</strong> brachten erstmals auf Layer 2 Intelligenz ins Netzwerk: Sie trennten Segmente logisch und leiteten Frames nur gezielt weiter.</li>\r\n      <li>Dank <em>MAC-Adressenlernen</em> konnten Bridges unnötigen Verkehr filtern und so die Effizienz steigern.</li>\r\n      <li>Dies war ein entscheidender Schritt zur besseren Skalierbarkeit und Stabilität in Ethernet-Architekturen.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>初期のEthernetでは、ケーブルが長くなると信号が減衰するため、通信可能な距離に限界がありました。</li>\r\n      <li><strong>リピータ</strong>は物理層（Layer 1）で信号をそのまま増幅し、通信距離を延長する装置として登場しました。</li>\r\n      <li>しかし、リピータは衝突ドメインを広げるだけで、通信の効率性や衝突の問題は改善されませんでした。</li>\r\n      <li><strong>ハブ</strong>は複数の機器を1つのネットワークにまとめる装置ですが、すべてのポートに同じ信号を送るため、同時通信時に衝突が発生しやすい構造でした。</li>\r\n      <li>その結果、全体が1つの衝突ドメインとなり、ネットワーク全体のパフォーマンスに悪影響を与えていました。</li>\r\n      <li>そこで導入されたのが<strong>ブリッジ</strong>です。ブリッジはデータリンク層（Layer 2）で動作し、MACアドレスに基づいてフレームを識別・転送します。</li>\r\n      <li>各セグメントごとに衝突ドメインを分離し、宛先が明確な通信のみを転送することで、不要なトラフィックを減らしました。</li>\r\n      <li>これにより、大規模で安定したネットワーク構築が可能になり、次世代のスイッチへの基盤となりました。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema X: Die Rolle der Bridge in der Netzwerktechnologie -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Die Funktion der Bridge – vom geteilten Medium zum segmentierten Netzwerk\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    ブリッジの役割と仕組み – 共有型ネットワークから分割型ネットワークへの進化\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>Ursprünglich nutzten Ethernet-Netze ein gemeinsames Übertragungsmedium, das alle Geräte miteinander verband – Kollisionen waren unvermeidlich.</li>\r\n      <li>Repeater und Hubs verstärkten zwar Signale, trugen aber zur Ausweitung der Kollisionsdomäne bei.</li>\r\n      <li>Die Einführung von <strong>Bridges</strong> in den 1980er Jahren brachte Intelligenz auf Layer 2 des OSI-Modells.</li>\r\n      <li>Bridges segmentieren Netzwerke: Sie trennen den Verkehr in verschiedene <strong>Kollisiondomänen</strong>.</li>\r\n      <li>Sie analysieren eingehende Frames, lernen die Quell-MAC-Adressen und führen eine Weiterleitungstabelle.</li>\r\n      <li>Wenn das Ziel bekannt ist, wird der Frame gezielt an das entsprechende Segment gesendet; sonst erfolgt ein Broadcast.</li>\r\n      <li>So wird unnötiger Verkehr reduziert, und die Netzwerkleistung steigt.</li>\r\n      <li>Bridges legten das Fundament für moderne Switches, die dieselbe Logik in leistungsstärkerer Form übernehmen.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>初期のEthernetでは、全端末が1本のケーブルを共有する「共有型メディア」が使われており、同時通信による<strong>衝突</strong>が避けられませんでした。</li>\r\n      <li><strong>リピータ</strong>や<strong>ハブ</strong>は信号を増幅・中継するだけで、衝突ドメインを分割できず、トラフィックが集中して効率が悪くなっていました。</li>\r\n      <li>1980年代に登場した<strong>ブリッジ</strong>は、OSI参照モデルのデータリンク層（Layer 2）で動作する初の「インテリジェントな中継装置」でした。</li>\r\n      <li>ブリッジはネットワークを複数のセグメントに分け、それぞれを<strong>独立した衝突ドメイン</strong>として扱います。</li>\r\n      <li>受信したフレームの<strong>送信元MACアドレス</strong>を記録し、<strong>宛先MACアドレス</strong>に基づいて必要なセグメントのみにフレームを転送します。</li>\r\n      <li>宛先が不明な場合のみ、全セグメントへの転送（フラッディング）を行います。</li>\r\n      <li>この仕組みにより、ブロードキャストの量が減り、通信の効率性と信頼性が向上しました。</li>\r\n      <li>ブリッジの仕組みは後の<strong>スイッチ</strong>に受け継がれ、より高速・高機能な形で現在のネットワークの基盤となっています。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Thema 2: Warum entstand der Switch? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Warum Switches entstanden sind – Unterschiede zu Bridges\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    なぜスイッチが必要とされたのか？ブリッジとの違いとその役割の進化\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>Bridges brachten eine gezielte Weiterleitung von Frames auf Layer 2, konnten aber nur eine Frame-Übertragung gleichzeitig behandeln.</li>\r\n      <li>Bei mehreren aktiven Hosts entstanden schnell Engpässe und Verzögerungen, da der Datenverkehr nacheinander verarbeitet werden musste.</li>\r\n      <li><strong>Switches</strong> wurden entwickelt, um diesen Flaschenhals zu beseitigen: Sie besitzen mehrere dedizierte Ports für gleichzeitige Verbindungen.</li>\r\n      <li>Dank <strong>Vollduplex</strong> kann jeder Host gleichzeitig senden und empfangen – ohne Kollisionen.</li>\r\n      <li>Switches verwenden <strong>MAC-Adress-Tabellen</strong>, um Frames effizient an das richtige Ziel weiterzuleiten.</li>\r\n      <li>Anders als Bridges basieren Switches oft auf Hardware (ASIC), was sie deutlich schneller und skalierbarer macht.</li>\r\n      <li>Sie erlauben viele parallele Übertragungen im selben Moment – ideal für moderne Netzwerke mit hohem Verkehrsaufkommen.</li>\r\n      <li>Damit wurden Switches zur Standardlösung für Ethernet-LANs und ersetzten sowohl Hubs als auch Bridges in der Praxis.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>ブリッジは、データリンク層においてフレームをMACアドレスに基づいて中継する装置として登場し、不要なブロードキャストを削減しました。</li>\r\n      <li>しかし、ブリッジは基本的に1つのフレームしか同時に処理できず、複数の通信が重なると待ち時間や遅延が発生しました。</li>\r\n      <li><strong>スイッチ</strong>は、この課題を解決するために開発され、各ポートが独立して通信できる構造を持っています。</li>\r\n      <li><strong>フルデュプレックス通信</strong>に対応しているため、送信と受信が同時に可能であり、コリジョンも発生しません。</li>\r\n      <li>さらに、MACアドレステーブルを利用して、宛先のみにフレームを転送することでネットワーク効率を大幅に向上させました。</li>\r\n      <li>スイッチは多くの場合、専用チップ（ASIC）によって高速に処理され、ブリッジよりも高性能・高スループットを実現します。</li>\r\n      <li>このため、スイッチは同時に多数の通信を処理でき、大規模ネットワークにも対応可能です。</li>\r\n      <li>今日では、スイッチはハブやブリッジを完全に置き換え、Ethernet LANの標準装置となっています。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Unterschiede und Gemeinsamkeiten von Bridge und Switch -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Bridge vs. Switch – Unterschiede und Gemeinsamkeiten im Verhalten und in der Funktion\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    ブリッジとスイッチの違いと共通点 – 学習方式・テーブル管理・通信特性の比較\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>Sowohl Bridges als auch Switches arbeiten auf Layer 2 und verwenden MAC-Adress-Tabellen zur gezielten Weiterleitung von Frames.</li>\r\n      <li>Beide lernen MAC-Adressen dynamisch, indem sie eingehende Frames analysieren – der Lernmechanismus ist grundsätzlich gleich.</li>\r\n      <li>Bridges speichern diese Informationen meist in Software, während Switches spezialisierte Hardware (ASICs) nutzen, was sie viel schneller macht.</li>\r\n      <li>Ein wesentlicher Unterschied: Bridges arbeiten in der Regel <strong>halbduplex</strong> und verarbeiten nur eine Übertragung gleichzeitig.</li>\r\n      <li>Switches unterstützen <strong>Vollduplex</strong> auf jedem Port, sodass gleichzeitiges Senden und Empfangen ohne Kollision möglich ist.</li>\r\n      <li>Switches besitzen oft mehr Ports (multiport-fähig), während Bridges typischerweise zwei oder wenige Schnittstellen haben.</li>\r\n      <li>Durch die vollduplexfähige Architektur entstehen bei Switches keine Kollisionen mehr – im Gegensatz zu manchen Bridge-Szenarien.</li>\r\n      <li>Zusammenfassend: Die Logik ist ähnlich, aber die Leistungsfähigkeit, Parallelität und Medienzugriffssteuerung sind beim Switch deutlich weiterentwickelt.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>ブリッジとスイッチはどちらもOSI参照モデルの<strong>データリンク層（Layer 2）</strong>で動作し、MACアドレスに基づいてフレームを転送します。</li>\r\n      <li>両者とも、受信したフレームの送信元MACアドレスを学習し、<strong>MACアドレステーブル</strong>を動的に構築します。学習方式そのものはほぼ共通です。</li>\r\n      <li>ただし、ブリッジはソフトウェア処理が主流であり、スイッチは専用ハードウェア（ASIC）による高速処理を行います。</li>\r\n      <li>通信モードにも差があり、ブリッジは基本的に<strong>半二重通信</strong>で動作するのに対し、スイッチは<strong>フルデュプレックス</strong>での同時送受信が可能です。</li>\r\n      <li>そのため、スイッチでは衝突（コリジョン）が原理的に発生せず、ネットワークの効率が大きく向上しています。</li>\r\n      <li>さらに、ブリッジは2〜数ポートの構成が多いのに対し、スイッチは数十ポートを持ち、大規模なネットワークを扱えるよう設計されています。</li>\r\n      <li>両者は動作原理は似ていても、<strong>性能・スケーラビリティ・衝突制御</strong>の面で大きな違いがあります。</li>\r\n      <li>結果として、スイッチはブリッジの発展形として、現代のネットワークインフラにおいて標準的な役割を担っています。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Gibt es Kollisionen bei Bridges? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Gibt es bei Bridges Kollisionen? – Funktionsweise und Einschränkungen klassischer Bridges\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    ブリッジでは衝突は起きるのか？ – クラシックなブリッジの動作と限界\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>Ja, bei klassischen Bridges können <strong>Kollisionen</strong> innerhalb eines einzelnen Segments auftreten.</li>\r\n      <li>Eine Bridge trennt zwar <strong>Kollisiondomänen</strong> – jedes Segment ist eigenständig –, doch innerhalb eines Segments teilen sich die Geräte das Medium.</li>\r\n      <li>Wenn zwei Hosts im selben Segment gleichzeitig senden, kommt es zu einer Kollision.</li>\r\n      <li>Bridges verhindern also keine Kollisionen innerhalb eines Segments, sondern nur zwischen den Segmenten.</li>\r\n      <li>Außerdem unterstützen viele klassische Bridges nur <strong>halbduplex</strong>, was die Kollisionen durch geteilte Leitung begünstigt.</li>\r\n      <li>Im Gegensatz dazu erlauben moderne Switches <strong>Vollduplex</strong> pro Port – damit sind Kollisionen vollständig ausgeschlossen.</li>\r\n      <li>Fazit: Bridges reduzieren, aber beseitigen Kollisionen nicht vollständig – Switches hingegen schon.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>はい、<strong>従来型のブリッジ</strong>では、接続された各セグメント内で<strong>衝突（コリジョン）</strong>が発生する可能性があります。</li>\r\n      <li>ブリッジは衝突ドメインを分割しますが、<strong>1つのセグメント内は依然として共有媒体</strong>であり、複数のホストが同時に送信すると衝突が起きます。</li>\r\n      <li>つまり、ブリッジは<strong>セグメント間の衝突は防げる</strong>が、<strong>セグメント内の衝突は防げない</strong>という制約があります。</li>\r\n      <li>加えて、ブリッジは多くの場合<strong>半二重通信</strong>にとどまるため、送信と受信を同時に行えず、衝突の可能性が残ります。</li>\r\n      <li>これに対し、<strong>スイッチ</strong>は各ポートが独立した通信路であり、<strong>フルデュプレックス通信</strong>に対応しているため、衝突は発生しません。</li>\r\n      <li>したがって、ブリッジはネットワーク効率を改善する装置ではありますが、<strong>完全なコリジョン排除はできない</strong>点が注意すべき特徴です。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Thema 3: Lernende Bridges und Filterung -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    MAC-Lernen und Filterung – gezielte Kommunikation statt Broadcast\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    MACアドレス学習とフィルタリング – ブロードキャストの削減と効率的な通信\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>Switches und Bridges verfügen über sogenannte Lernfunktionen, um MAC-Adressen automatisch zu erkennen.</li>\r\n      <li>Wenn ein Frame empfangen wird, merkt sich das Gerät die Quell-MAC-Adresse und den zugehörigen Port in einer Tabelle.</li>\r\n      <li>So kann es zukünftige Frames mit derselben Zieladresse gezielt an diesen Port weiterleiten.</li>\r\n      <li>Dieses Verhalten wird als <strong>Filterung</strong> bezeichnet und reduziert unnötigen Verkehr auf anderen Ports.</li>\r\n      <li>Unicast-Frames werden also nur an den gewünschten Empfänger gesendet – das spart Bandbreite und erhöht die Effizienz.</li>\r\n      <li>Nur wenn eine Zieladresse unbekannt ist, wird ein Broadcast an alle Ports gesendet (Flooding).</li>\r\n      <li>Durch kontinuierliches Lernen und Aktualisieren der MAC-Tabelle passt sich das Gerät dynamisch an Netzveränderungen an.</li>\r\n      <li>Diese Lernfähigkeit ist ein zentrales Merkmal von Layer-2-Switches und lernenden Bridges.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>スイッチやブリッジは<strong>MACアドレス学習機能</strong>を持ち、受信したフレームの送信元MACアドレスとポートを記録します。</li>\r\n      <li>これにより、次に同じ宛先へのフレームが来たときに、そのポートにのみフレームを送ることができます。</li>\r\n      <li>このような仕組みを<strong>フィルタリング</strong>と呼び、全体への無駄な転送を避けることができます。</li>\r\n      <li>ユニキャスト通信は宛先ホストにのみ届くため、ネットワークの帯域が有効活用され、通信効率が向上します。</li>\r\n      <li>一方で、宛先MACがまだ登録されていない場合は、<strong>フラッディング（全ポート送信）</strong>が行われます。</li>\r\n      <li>MACテーブルは動的に更新され、ネットワークの構成変更にも柔軟に対応可能です。</li>\r\n      <li>このMAC学習とフィルタリングの仕組みは、スイッチや学習型ブリッジの基本的な機能の一つです。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema 4: Spanning Tree -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Spanning Tree Protocol – Schleifenvermeidung in redundanten Netzen\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    スパニングツリープロトコル – 冗長構成におけるループ防止\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>In Netzen mit redundanten Verbindungen kann es zu Layer-2-Schleifen kommen, wenn mehrere Switches miteinander verbunden sind.</li>\r\n      <li>Solche Loops führen dazu, dass Broadcast-Frames unendlich im Netzwerk zirkulieren – man spricht von einem <strong>Broadcast-Sturm</strong>.</li>\r\n      <li>Da Layer 2 keine TTL (Time to Live) wie IP hat, werden die Frames niemals automatisch verworfen.</li>\r\n      <li>Das <strong>Spanning Tree Protocol (STP)</strong> analysiert die Netzstruktur und berechnet einen Schleifen-freien Baum (Spanning Tree).</li>\r\n      <li>Dazu werden bestimmte Ports als <em>Blocking</em> markiert, sodass nur ein logischer Pfad aktiv bleibt.</li>\r\n      <li>Wenn eine aktive Verbindung ausfällt, kann STP automatisch einen zuvor blockierten Pfad reaktivieren – Redundanz bleibt erhalten.</li>\r\n      <li>STP wurde standardisiert als IEEE 802.1D und ist ein wesentlicher Bestandteil für stabile Switch-Netzwerke.</li>\r\n      <li>Moderne Varianten wie RSTP (Rapid STP) bieten kürzere Umschaltzeiten für schnellere Reaktionen im Fehlerfall.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li>複数のスイッチを冗長的に接続したネットワークでは、<strong>ループ</strong>（循環経路）が生じる可能性があります。</li>\r\n      <li>ループがあると、ブロードキャストフレームがネットワーク内を無限に回り続ける<strong>ブロードキャストストーム</strong>が発生し、通信障害を引き起こします。</li>\r\n      <li>レイヤ2にはTTL（Time to Live）のような自動消滅機能がないため、フレームが永遠に循環し続けることになります。</li>\r\n      <li><strong>スパニングツリープロトコル（STP）</strong>は、ネットワーク全体を分析して、ループのない論理的なツリー構造（Spanning Tree）を作成します。</li>\r\n      <li>これにより、特定のポートを<strong>ブロッキング状態</strong>にしてループを物理的には維持しつつ、論理的には排除します。</li>\r\n      <li>もしアクティブな経路に障害が発生した場合、ブロッキングされていたポートが自動的にアクティブ化され、冗長性を維持できます。</li>\r\n      <li>STPはIEEE 802.1Dとして標準化され、安定したスイッチネットワーク構築に不可欠なプロトコルです。</li>\r\n      <li>また、<strong>RSTP（Rapid STP）</strong>のような高速版では、より迅速な切替が可能となっています。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema 5: Next-Hop Forwarding -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Next-Hop Forwarding – Optimierung der Pfadwahl in IP-Netzen\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    Next-Hop Forwarding – IPネットワークにおける経路制御\r\n  </p>\r\n</div>\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Antwort (Deutsch)</h5>\r\n    <ul>\r\n      <li>Next-Hop Forwarding ist ein zentrales Konzept der <strong>Layer-3-Routing-Logik</strong> in IP-Netzwerken.</li>\r\n      <li>Ein Router prüft die <strong>Ziel-IP-Adresse</strong> eines eingehenden Pakets und sucht in seiner Routing-Tabelle nach dem passenden Eintrag.</li>\r\n      <li>Statt den gesamten Pfad zu kennen, entscheidet der Router nur über den <strong>nächsten Sprung</strong> – also den nächsten Router auf dem Weg zum Ziel.</li>\r\n      <li>Dadurch kann das Routing dynamisch angepasst und optimiert werden, etwa bei Ausfällen oder Lastverteilung.</li>\r\n      <li>Im Gegensatz zu Switches, die MAC-Adressen auf Layer 2 verwenden, arbeitet Next-Hop Forwarding auf der Netzwerk-Schicht (Layer 3).</li>\r\n      <li>Dieses Verfahren bildet die Grundlage für das gesamte Internet-Routing über viele autonome Systeme hinweg.</li>\r\n      <li>Protokolle wie OSPF oder BGP basieren auf dieser Logik, um große Netzwerke skalierbar zu steuern.</li>\r\n      <li>Next-Hop-Informationen reduzieren zudem den Speicherbedarf, da nur der nächste Zielrouter gespeichert werden muss – nicht der gesamte Pfad.</li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h5>解答（日本語）</h5>\r\n    <ul>\r\n      <li><strong>Next-Hop Forwarding</strong>は、IPネットワークにおける<strong>ルーティング（Layer 3）</strong>の基本的な仕組みです。</li>\r\n      <li>ルーターは受信したパケットの<strong>宛先IPアドレス</strong>を参照し、自身のルーティングテーブルから最も適切な経路を選択します。</li>\r\n      <li>ここで重要なのは、パケットの「最終目的地」ではなく、<strong>次に渡すべきルーター（Next Hop）</strong>だけを決定する点です。</li>\r\n      <li>この方式により、ネットワーク全体の構成を知らなくても柔軟で効率的なルーティングが可能になります。</li>\r\n      <li>障害発生時やネットワークの負荷変動にも動的に対応でき、耐障害性が向上します。</li>\r\n      <li>スイッチがMACアドレスによってフレームを転送するのとは異なり、Next-Hop ForwardingはIPベースで制御されます。</li>\r\n      <li>この仕組みは、<strong>インターネット全体の通信</strong>の根幹を支える要素であり、OSPFやBGPといったルーティングプロトコルに応用されています。</li>\r\n      <li>Next Hopの情報だけを保持すれば良いため、ルーターのルーティングテーブルも比較的簡素に保てます。</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// No logic required\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_22_ex.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_22_ex.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_22_ex.vue?vue&type=style&index=0&id=c5c6405c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c5c6405c\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}