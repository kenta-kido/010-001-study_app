{"version":3,"file":"js/5076.ca1cf6f5.js","mappings":"+QACEA,EAAAA,EAAAA,IAoFM,MApFNC,EAoFMC,EAAA,KAAAA,EAAA,K,qxHC/ER,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture04/chapter03/chapter03_1.vue","webpack://study-site/./src/views/lecture/lecture04/chapter03/chapter03_1.vue?4e91"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">Chapter 3 - Transport Layer</h3>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          Residing between the application and network layers, the transport layer is a central \r\n          piece of the layered network architecture. It has the critical role of providing communication \r\n          services directly to the application processes running on different hosts.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          アプリケーション層とネットワーク層の間に位置するトランスポート層は、階層型ネットワークアーキテクチャの中核的な要素です。異なるホスト上で動作するアプリケーションプロセスに直接通信サービスを提供するという重要な役割を担っています。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          The pedagogic approach we take in this chapter is to alternate between discussions of \r\n          transport-layer principles and discussions of how these principles are implemented \r\n          in existing protocols; as usual, particular emphasis will be given to Internet protocols, \r\n          in particular the TCP and UDP transport-layer protocols.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          本章では、トランスポート層の原則と、それが既存のプロトコルでどのように実装されているかを交互に解説する教育的アプローチを取ります。特に、TCPとUDPといったインターネットプロトコルに重点を置きます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          We’ll begin by discussing the relationship between the transport and network layers. \r\n          This sets the stage for examining the first critical function of the transport layer—extending \r\n          the network layer’s delivery service between two end systems to a delivery service between \r\n          two application-layer processes running on the end systems. We’ll illustrate this function \r\n          in our coverage of the Internet’s connectionless transport protocol, UDP.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          最初に、トランスポート層とネットワーク層の関係について説明します。これは、ネットワーク層が提供する2つのエンドシステム間の配送サービスを、アプリケーション層の2つのプロセス間の配送サービスに拡張するという、トランスポート層の第一の重要な機能を理解するための基礎となります。この機能は、インターネットのコネクションレス型トランスポートプロトコルであるUDPを扱う際に具体的に示されます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          We’ll then return to principles and confront one of the most fundamental problems in computer \r\n          networking—how two entities can communicate reliably over a medium that may lose and \r\n          corrupt data. Through a series of increasingly complicated (and realistic!) scenarios, we’ll build \r\n          up an array of techniques that transport protocols use to solve this problem. We’ll then show \r\n          how these principles are embodied in TCP, the Internet’s connection-oriented transport protocol.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          次に、基本原理に立ち返り、コンピュータネットワークにおける最も基本的な問題の一つ、すなわち、データが失われたり破損したりする可能性のある媒体を通じて、2つのエンティティがどのように信頼性のある通信を行うかという課題に取り組みます。ますます複雑かつ現実的なシナリオを通じて、トランスポートプロトコルがこの問題を解決するために使用する技術の数々を構築します。そして、これらの原則が、インターネットのコネクション指向トランスポートプロトコルであるTCPにどのように組み込まれているかを示します。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          We’ll next move on to a second fundamentally important problem in networking—controlling \r\n          the transmission rate of transport-layer entities in order to avoid, or recover from, congestion \r\n          within the network. We’ll consider the causes and consequences of congestion, as well as \r\n          commonly used congestion-control techniques. After obtaining a solid understanding of \r\n          the issues behind congestion control, we’ll study TCP’s approach to congestion control.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          次に、ネットワーキングにおけるもう一つの根本的に重要な問題、すなわち、ネットワーク内の輻輳を回避または回復するために、トランスポート層のエンティティの送信レートを制御するという課題に取り組みます。輻輳の原因とその影響、そして一般的に使用されている輻輳制御の技術について考察します。輻輳制御の背後にある問題をしっかり理解した後に、TCPがどのように輻輳制御を行っているかを学びます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// No script logic required\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional: make the Japanese side slightly lighter */\r\n.text-muted {\r\n  color: #6c757d;\r\n}\r\n</style>\r\n","import script from \"./chapter03_1.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter03_1.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter03_1.vue?vue&type=style&index=0&id=399eef2f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-399eef2f\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}