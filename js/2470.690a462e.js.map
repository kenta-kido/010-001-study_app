{"version":3,"file":"js/2470.690a462e.js","mappings":"gRACEA,EAAAA,EAAAA,IAsDM,MAtDNC,EAsDMC,EAAA,KAAAA,EAAA,K,k7ECjDR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_94.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_94.vue?da5f"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">9(d) Wachstumsverhalten von AIMD und CUBIC</h3>\r\n\r\n    <!-- 問題文（Deutsch + 日本語） -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n      <p><strong>Aufgabe:</strong><br />\r\n        Beschreiben Sie die Wachstumsfunktionen von AIMD und CUBIC.<br />\r\n        Wie verläuft das Wachstum der Congestion Window (cwnd) in beiden Ansätzen (linear vs. kubisch)?<br />\r\n        Was bedeutet das für die Performance in Netzwerken mit hoher Bandbreite und Latenz? (4P)\r\n      </p>\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        AIMD と CUBIC の成長関数を比較せよ。<br />\r\n        各方式における輻輳ウィンドウ（cwnd）の増加はどのような形か（線形 vs. 三次関数）？<br />\r\n        それは高帯域・高遅延ネットワークにおいて性能にどのような影響を与えるか？（4点）\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答：ドイツ語 & 日本語 横並び -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n        <p><strong>AIMD:</strong></p>\r\n        <ul>\r\n          <li>cwnd wächst linear pro RTT (Additive Increase)</li>\r\n          <li>Verlust führt zu Multiplicative Decrease (z.B. Halbierung)</li>\r\n          <li>Effizient bei kleinen bis mittleren Netzen</li>\r\n        </ul>\r\n        <p><strong>CUBIC:</strong></p>\r\n        <ul>\r\n          <li>cwnd wächst gemäß kubischer Funktion: <span>W(t) = C(t−K)³ + W<sub>max</sub></span></li>\r\n          <li>Wachstum unabhängig von RTT → besser in Hochlatenznetzen</li>\r\n          <li>Schnellere Erholung und bessere Auslastung bei großer Bandbreite</li>\r\n        </ul>\r\n        <p><strong>Fazit:</strong> CUBIC skaliert besser in Hochgeschwindigkeitsnetzen mit hoher Latenz als AIMD.</p>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        <p><strong>AIMD：</strong></p>\r\n        <ul>\r\n          <li>cwnd は RTT ごとに線形に増加（加算的増加）</li>\r\n          <li>損失時に乗算的に減少（例：半分）</li>\r\n          <li>中小規模のネットワークでは適している</li>\r\n        </ul>\r\n        <p><strong>CUBIC：</strong></p>\r\n        <ul>\r\n          <li>cwnd は三次関数に基づいて増加：<span>W(t) = C(t−K)³ + W<sub>max</sub></span></li>\r\n          <li>RTT に依存せず、遅延の大きい環境でも効率よく増加</li>\r\n          <li>高帯域のネットワークでの利用率が高く、回復も早い</li>\r\n        </ul>\r\n        <p><strong>結論：</strong> CUBIC は高帯域・高遅延ネットワークにおいて AIMD よりもスケーラビリティに優れている。</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Keine Logik nötig\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_94.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_94.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_94.vue?vue&type=style&index=0&id=088f2da5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-088f2da5\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}