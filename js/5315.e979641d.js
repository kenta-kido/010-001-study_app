"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[5315],{5315:function(a,t,e){e.r(t),e.d(t,{default:function(){return v}});var d=e(6768);const n={class:"container my-4"};var i={__name:"chapter15_101",setup(a){return(a,t)=>((0,d.uX)(),(0,d.CE)("div",n,t[0]||(t[0]=[(0,d.Fv)('<h3 class="mb-4" data-v-07b9a026>10(a) TCP BBR – Motivation &amp; Unterschied zu CUBIC</h3><div class="border rounded p-3 bg-light mb-4" data-v-07b9a026><p data-v-07b9a026><strong data-v-07b9a026>Aufgabe:</strong><br data-v-07b9a026> Wofür steht <strong data-v-07b9a026>BBR</strong> und was ist der Hauptunterschied zwischen BBR und CUBIC? (4P)<br data-v-07b9a026> Erklären Sie insbesondere, was BBR anders macht als verlustbasierte Algorithmen wie CUBIC. </p><hr data-v-07b9a026><p data-v-07b9a026><strong data-v-07b9a026>問題:</strong><br data-v-07b9a026><strong data-v-07b9a026>BBR</strong> の略語の意味と、CUBIC との主な違いを説明せよ（4点）<br data-v-07b9a026> 特に、BBR が CUBIC のような「損失ベースのアルゴリズム」と異なる点を述べよ。 </p></div><div class="row" data-v-07b9a026><div class="col-md-6" data-v-07b9a026><h5 data-v-07b9a026>Antwort (Deutsch)</h5><p data-v-07b9a026><strong data-v-07b9a026>BBR</strong> steht für <em data-v-07b9a026>Bottleneck Bandwidth and Round-trip propagation time</em>. </p><p data-v-07b9a026> Im Gegensatz zu CUBIC ist BBR kein verlustbasierter Algorithmus. Es basiert nicht auf Paketverlust zur Erkennung von Überlastung. </p><p data-v-07b9a026> Stattdessen schätzt BBR kontinuierlich zwei Größen: </p><ul data-v-07b9a026><li data-v-07b9a026>die maximale verfügbare Bandbreite (Bottleneck Bandwidth)</li><li data-v-07b9a026>die minimale RTT (Round-Trip Propagation Delay)</li></ul><p data-v-07b9a026> Daraus berechnet es eine optimale Sende­rate, um die Leitungsauslastung zu maximieren und gleichzeitig Warteschlangen zu vermeiden. </p></div><div class="col-md-6" data-v-07b9a026><h5 data-v-07b9a026>解答（日本語）</h5><p data-v-07b9a026><strong data-v-07b9a026>BBR</strong> は <em data-v-07b9a026>Bottleneck Bandwidth and Round-trip propagation time</em>（ボトルネック帯域幅とRTT）を意味します。 </p><p data-v-07b9a026> CUBIC とは異なり、BBR はパケット損失を輻輳の指標としない「非損失型アルゴリズム」です。 </p><p data-v-07b9a026> BBR は次の2つを継続的に推定します： </p><ul data-v-07b9a026><li data-v-07b9a026>利用可能な最大ボトルネック帯域幅</li><li data-v-07b9a026>最小の往復遅延（RTT）</li></ul><p data-v-07b9a026> これにより、最適な送信速度を算出し、輻輳やキュー遅延を発生させることなくリンク利用率を最大化します。 </p></div></div>',3)])))}},r=e(1241);const s=(0,r.A)(i,[["__scopeId","data-v-07b9a026"]]);var v=s}}]);
//# sourceMappingURL=5315.e979641d.js.map