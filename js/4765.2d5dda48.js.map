{"version":3,"file":"js/4765.2d5dda48.js","mappings":"gRACEA,EAAAA,EAAAA,IAgDM,MAhDNC,EAgDMC,EAAA,KAAAA,EAAA,K,s8DC3CR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_34.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_34.vue?5a0d"],"sourcesContent":["v\\<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">3(d) Vergleich: Dijkstra vs. Distance-Vector</h3>\r\n\r\n    <!-- 問題文（Deutsch + 日本語） -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n      <p><strong>Aufgabe:</strong><br />\r\n        Vergleichen Sie den Dijkstra-Algorithmus mit dem Distance-Vector-Routing-Algorithmus hinsichtlich der Art der Berechnung der Distanzen.\r\n      </p>\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        Dijkstra アルゴリズムと Distance-Vector ルーティング アルゴリズムの距離計算方法の違いを比較せよ。\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答：ドイツ語 & 日本語 横並び -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n        <p><strong>Dijkstra (Link-State):</strong></p>\r\n        <ul>\r\n          <li>Jeder Router hat vollständige Informationen über die Topologie.</li>\r\n          <li>Alle Link-Kosten sind bekannt (z.B. durch OSPF gesammelt).</li>\r\n          <li>Router berechnen den kürzesten Pfad selbstständig mit globaler Sicht.</li>\r\n        </ul>\r\n        <p><strong>Distance-Vector:</strong></p>\r\n        <ul>\r\n          <li>Router kennen nur ihre direkten Nachbarn.</li>\r\n          <li>Jeder Router teilt seine Distanztabelle regelmäßig mit Nachbarn.</li>\r\n          <li>Berechnung erfolgt iterativ und verteilt (z.B. Bellman-Ford).</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        <p><strong>Dijkstra（リンク状態型）:</strong></p>\r\n        <ul>\r\n          <li>各ルーターはネットワーク全体のトポロジーを知っている。</li>\r\n          <li>すべてのリンクコストが既知（例：OSPF などで収集）。</li>\r\n          <li>各ルーターがグローバルな情報をもとに最短経路を自律的に計算する。</li>\r\n        </ul>\r\n        <p><strong>Distance Vector（距離ベクトル型）:</strong></p>\r\n        <ul>\r\n          <li>ルーターは自分の隣接ノードのみを認識している。</li>\r\n          <li>各ルーターは定期的に自分の経路表を隣接ノードに送る。</li>\r\n          <li>計算は分散的・逐次的に行われる（例：ベルマンフォード法）。</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Keine Logik erforderlich\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_34.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_34.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_34.vue?vue&type=style&index=0&id=907c6dba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-907c6dba\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}