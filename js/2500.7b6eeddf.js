"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[2500],{2500:function(e,n,t){t.r(n),t.d(n,{default:function(){return l}});var r=t(6768);const i={class:"container my-4"};function s(e,n){return(0,r.uX)(),(0,r.CE)("div",i,n[0]||(n[0]=[(0,r.Fv)('<h3 class="mb-4">3(f) Vergleich von Distance Vector und Link-State Routing</h3><div class="border rounded p-3 bg-light mb-4"><p><strong>Thema:</strong><br> Vergleich der Routing-Algorithmen: Link-State (LS) vs. Distance Vector (DV) </p><hr><p><strong>テーマ:</strong><br> ルーティングアルゴリズムの比較：Link-State（LS）とDistance Vector（DV） </p></div><div class="row mb-4"><div class="col-md-6"><h5>Erklärung (Deutsch)</h5><p> Beim <strong>Link-State-Algorithmus</strong> kennt jeder Router die gesamte Netzwerktopologie und die Kosten aller Links. Diese Informationen werden durch Flooding aller Link-State-Advertisments verteilt. Jeder Router berechnet anschließend mithilfe von Dijkstra selbständig seine optimale Routing-Tabelle. </p><p> Der <strong>Distance Vector-Algorithmus</strong> funktioniert lokal: Jeder Router kennt nur seine direkten Nachbarn und teilt ihnen regelmäßig seine aktuelle Schätzung der kürzesten Pfade mit. Diese Informationen werden schrittweise im Netzwerk weitergegeben, was zu langsamer Konvergenz führen kann. </p><p><strong>Message Complexity:</strong> LS erfordert O(N×E) Nachrichten für die globale Sicht. DV benötigt nur Nachrichten zwischen benachbarten Routern in jeder Iteration. </p><p><strong>Konvergenzgeschwindigkeit:</strong> LS konvergiert schneller und deterministisch. DV kann langsam sein, Routing-Loops verursachen und unter dem Count-to-Infinity-Problem leiden. </p><p><strong>Robustheit:</strong> LS ist robuster gegenüber fehlerhaften Routern, da die Berechnung lokal erfolgt. Im Gegensatz dazu kann ein einzelner fehlerhafter DV-Router das ganze Netz negativ beeinflussen. </p></div><div class="col-md-6"><h5>解説（日本語）</h5><p><strong>Link-State アルゴリズム</strong>では、各ルーターがネットワーク全体の構造（トポロジー）と各リンクのコストを保持します。 それぞれのルーターが Dijkstra アルゴリズムを用いて、自分で転送テーブルを計算します。 </p><p> 一方、<strong>Distance Vector アルゴリズム</strong>では、ルーターは自分の隣接ノードしか知らず、 それぞれが持っている最短距離情報を隣接ノードに順次伝播します。 そのため、情報がネットワーク全体に広がるのに時間がかかります。 </p><p><strong>メッセージ数:</strong> LS は O(N×E) の大量のメッセージが必要ですが、 DV は直接隣接ノード間でのみメッセージ交換を行います。 </p><p><strong>収束速度:</strong> LS は決定論的で比較的速く収束しますが、 DV はループやCount-to-Infinityなどの問題で遅くなる可能性があります。 </p><p><strong>堅牢性:</strong> LS ではルーターごとに独立して計算が行われるため、 誤動作するルーターの影響が局所的です。DV では1つの誤った経路情報が全体に波及する可能性があります。 </p></div></div><div class="border rounded p-3 bg-light mb-4"><p><strong>Thema:</strong><br> Unterschied in der Informationsverteilung: Globale Sicht (LS) vs. lokale Sicht (DV) </p><hr><p><strong>テーマ:</strong><br> 情報の分布構造の違い：Link-State はグローバル視点、DV はローカル視点 </p></div><div class="row mb-4"><div class="col-md-6"><h5>Erklärung (Deutsch)</h5><p> Im Link-State-Ansatz sendet jeder Router seine direkt verbundenen Linkkosten an alle anderen Knoten im Netz – meist per Flooding. Jeder Router baut sich so eine vollständige Topologie des Netzwerks auf und kann daraus den besten Pfad selbst berechnen. Beim Distance-Vector dagegen kennt jeder Router nur seine direkten Nachbarn und deren gemeldete Distanzen zu Zielen. Das globale Wissen fehlt – alle Entscheidungen basieren auf Nachbarinformationen. Dadurch ist DV einfacher zu implementieren, aber anfälliger für inkonsistente Informationen. </p></div><div class="col-md-6"><h5>解説（日本語）</h5><p> Link-State では、各ルーターが自分の隣接リンクのコストをネットワーク全体にブロードキャストします（Flooding）。 その結果、すべてのルーターがネットワーク全体の地図（トポロジー）を保持できます。 一方、Distance Vector は、自分の隣接ノードとの情報だけを交換し、他の情報は間接的に取得します。 このため、DV は実装が簡単ですが、ネットワーク全体を把握できない分、誤情報への耐性が低くなります。 </p></div></div><div class="border rounded p-3 bg-light mb-4"><p><strong>Thema:</strong><br> Geschwindigkeit der Konvergenz und Stabilität des Routings </p><hr><p><strong>テーマ:</strong><br> 収束の速さとルーティングの安定性 </p></div><div class="row mb-4"><div class="col-md-6"><h5>Erklärung (Deutsch)</h5><p> LS konvergiert schneller, da alle Router gleichzeitig über die Netzstruktur informiert werden. Die Berechnung erfolgt lokal, basierend auf vollständiger Information. DV dagegen benötigt mehrere Iterationen, um sich über alle Knoten hinweg zu stabilisieren. Dabei können Routing-Loops oder das Count-to-Infinity-Problem auftreten, was zu Verzögerungen oder inkorrekten Pfaden führt. </p></div><div class="col-md-6"><h5>解説（日本語）</h5><p> Link-State では、トポロジー情報を各ルーターが即座に受け取れるため、収束は迅速かつ確実です。 各ルーターが自身で最短経路を計算するため、ルーティングは安定しています。 一方 Distance Vector は、ルーター間で情報が徐々に広まる仕組みのため、収束に時間がかかります。 また、「Count-to-Infinity」やルーティングループといった不安定要素も発生しやすくなります。 </p></div></div><div class="border rounded p-3 bg-light mb-4"><p><strong>Thema:</strong><br> Message Complexity – Kommunikationsaufwand bei DV vs. LS </p><hr><p><strong>テーマ:</strong><br> メッセージ複雑度：DVとLSにおける通信負荷の違い </p></div><div class="row mb-4"><div class="col-md-6"><h5>Erklärung (Deutsch)</h5><p> LS benötigt O(N×E) Nachrichten: Jeder Router muss alle anderen über seine Links informieren. Das Flooding und die periodischen LSA-Updates erzeugen Netzwerkbelastung. DV hingegen tauscht nur lokale Vektoren mit direkten Nachbarn aus. Das reduziert die Anzahl der Nachrichten, ist aber im Gegenzug langsamer in der Anpassung. </p></div><div class="col-md-6"><h5>解説（日本語）</h5><p> Link-State では、各ルーターが全ノードにリンク情報を送信するため、O(N×E)のメッセージ数が必要です。 トポロジー変更のたびにブロードキャストされるため、通信コストが高くなりがちです。 一方、Distance Vector は隣接ノード間のみの通信で済むため、通信負荷は比較的小さいです。 ただし、反応速度は遅くなるため、一長一短です。 </p></div></div><div class="border rounded p-3 bg-light mb-4"><p><strong>Thema:</strong><br> Robustheit bei Fehlverhalten oder Angriffen </p><hr><p><strong>テーマ:</strong><br> 誤動作や攻撃に対する堅牢性 </p></div><div class="row mb-4"><div class="col-md-6"><h5>Erklärung (Deutsch)</h5><p> LS ist robuster gegenüber fehlerhaften Routern, da jeder Knoten nur für seine eigene Routing-Tabelle verantwortlich ist. Fehlerhafte LS-Informationen betreffen nur einen Teil des Netzes. DV ist anfälliger: Ein Router kann falsche Distanzen zu beliebigen Zielen melden. Dadurch können Loops oder großflächige Fehlleitungen entstehen – wie der ISP-Vorfall 1997 zeigte. </p></div><div class="col-md-6"><h5>解説（日本語）</h5><p> Link-State は各ルーターが独立して経路を計算するため、仮に一部のルーターが誤った情報を送っても、影響は限定的です。 誤情報が反映されるのはそのルーターに接続しているリンクのみです。 一方 Distance Vector では、1台のルーターが嘘の経路を報告すると、それがネットワーク全体に波及します。 1997年の実例では、1つの誤動作ルーターがインターネットの一部を長時間麻痺させました。 </p></div></div>',11)]))}var o=t(1241);const a={},d=(0,o.A)(a,[["render",s]]);var l=d}}]);
//# sourceMappingURL=2500.7b6eeddf.js.map