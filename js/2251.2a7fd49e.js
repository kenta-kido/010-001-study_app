"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[2251],{8868:function(a,t,e){e.r(t),e.d(t,{default:function(){return c}});var d=e(6768),r=e(144),n=e.p+"img/Figure_0604.1ef6d853.png",i=e.p+"img/Figure_0603.45015f08.png";const s={class:"container my-4"},l={class:"row mb-4"},v={class:"text-center mt-4"},g=["src"],o={class:"text-center mt-4"},u=["src"];var h={__name:"chapter15_61_ex",setup(a){return(a,t)=>((0,d.uX)(),(0,d.CE)("div",s,[t[4]||(t[4]=(0,d.Fv)('<h3 class="mb-4" data-v-1a77a4aa>UDP-Prüfsumme</h3><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Warum gilt die UDP-Prüfsumme als „naiv“ und welche Schwächen hat sie? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> UDPのチェックサムはなぜ「ナイーブ（単純）」と言われるのか？その限界とは？ </p></div><div class="row mb-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Die UDP-Prüfsumme verwendet eine einfache 1er-Komplement-Summenbildung, um Datenübertragungen auf Bitfehler zu prüfen. Doch dieses Verfahren hat <strong data-v-1a77a4aa>strukturelle Schwächen</strong>: </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>Mehrere Bitfehler können sich gegenseitig aufheben → Prüfsumme bleibt gleich</li><li data-v-1a77a4aa>Die Erkennungsrate liegt unter 100 %, insbesondere bei komplexeren Fehlern</li></ul><p data-v-1a77a4aa> Laut <strong data-v-1a77a4aa>RFC 1071</strong> erkennt die UDP/TCP-Prüfsumme alle Einzelfehler sicher, aber nur eingeschränkt Mehrbit-Fehler. Daher wird sie als <strong data-v-1a77a4aa>naiv</strong> oder minimaler Schutzmechanismus betrachtet. </p><p data-v-1a77a4aa> UDP ist ein leichtgewichtiges Protokoll – die Prüfsumme bietet nur eine „schnelle Plausibilitätsprüfung“. Für sicherheitskritische oder zuverlässige Daten wird stattdessen Folgendes verwendet: </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>TCP (mit Fehlererkennung, Reihenfolge, Wiederholung)</li><li data-v-1a77a4aa>Stärkere Prüfverfahren in der Anwendungsschicht wie CRC, SHA, MD5</li></ul><p data-v-1a77a4aa><strong data-v-1a77a4aa>Vergleich zur CRC:</strong><br data-v-1a77a4aa> Die CRC (Cyclic Redundancy Check) erkennt komplexe Bitmuster, auch Burstfehler, sehr zuverlässig. </p><table class="table table-bordered table-sm" data-v-1a77a4aa><thead data-v-1a77a4aa><tr data-v-1a77a4aa><th data-v-1a77a4aa>Verfahren</th><th data-v-1a77a4aa>Fehlerschutz</th><th data-v-1a77a4aa>Typische Anwendung</th></tr></thead><tbody data-v-1a77a4aa><tr data-v-1a77a4aa><td data-v-1a77a4aa>UDP-Prüfsumme</td><td data-v-1a77a4aa>Grundlegend (naiv)</td><td data-v-1a77a4aa>VoIP, Streaming, DNS</td></tr><tr data-v-1a77a4aa><td data-v-1a77a4aa>CRC</td><td data-v-1a77a4aa>Sehr hoch</td><td data-v-1a77a4aa>Ethernet, Speichermedien</td></tr><tr data-v-1a77a4aa><td data-v-1a77a4aa>SHA/MD5</td><td data-v-1a77a4aa>Kryptographisch sicher</td><td data-v-1a77a4aa>Signaturen, Datenintegrität</td></tr></tbody></table></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> UDPのチェックサムは「<strong data-v-1a77a4aa>1の補数加算</strong>」によってデータの整合性を検証しますが、 その手法には構造的な限界があります： </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>複数のビットが同時に反転した場合、それらが<strong data-v-1a77a4aa>相殺されてしまい</strong>チェックサムが変わらないことがある</li><li data-v-1a77a4aa>そのため、<strong data-v-1a77a4aa>すべてのエラーを検出できるわけではない</strong></li></ul><p data-v-1a77a4aa> RFC 1071 によれば、UDP/TCPのチェックサムは「単一ビットエラー」には強いが、 「複数ビットの誤り」には検出漏れの可能性があるとされています。 </p><p data-v-1a77a4aa> このような性質から、UDPのチェックサムは<strong data-v-1a77a4aa>最低限の保護手段</strong>として位置づけられ、 より高い信頼性が必要な場合は以下の手法が使われます： </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>TCP（再送・順序保証あり）</li><li data-v-1a77a4aa>アプリ層での<strong data-v-1a77a4aa>CRC</strong>や<strong data-v-1a77a4aa>ハッシュ（SHA, MD5など）</strong>による整合性検証</li></ul><p data-v-1a77a4aa><strong data-v-1a77a4aa>CRCとの比較：</strong><br data-v-1a77a4aa> CRC（巡回冗長検査）は、複雑なビットパターンやバーストエラーも検出できる高精度な手法です。 </p><table class="table table-bordered table-sm" data-v-1a77a4aa><thead data-v-1a77a4aa><tr data-v-1a77a4aa><th data-v-1a77a4aa>方式</th><th data-v-1a77a4aa>検出能力</th><th data-v-1a77a4aa>用途例</th></tr></thead><tbody data-v-1a77a4aa><tr data-v-1a77a4aa><td data-v-1a77a4aa>UDPチェックサム</td><td data-v-1a77a4aa>基本的（ナイーブ）</td><td data-v-1a77a4aa>VoIP, ストリーミング, DNS</td></tr><tr data-v-1a77a4aa><td data-v-1a77a4aa>CRC</td><td data-v-1a77a4aa>非常に高い</td><td data-v-1a77a4aa>イーサネット, ディスク</td></tr><tr data-v-1a77a4aa><td data-v-1a77a4aa>SHA/MD5</td><td data-v-1a77a4aa>暗号学的に安全</td><td data-v-1a77a4aa>署名, 改ざん検出</td></tr></tbody></table></div></div><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Wie funktioniert Padding bei UDP und welche Länge wird für die Prüfsummenberechnung verwendet? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> UDPのチェックサム計算時のパディング処理と、UDP長（Length）の扱いについて </p></div><div class="row mb-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Bei der UDP-Prüfsummenberechnung müssen die Daten in 16-Bit-Wörtern verarbeitet werden. Falls das UDP-Datenfeld (Payload) eine ungerade Länge hat, wird <strong data-v-1a77a4aa>ein Padding-Byte mit dem Wert 0x00</strong> hinzugefügt – <em data-v-1a77a4aa>nur für die Prüfsumme</em>. </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>Das Padding wird <strong data-v-1a77a4aa>nicht</strong> im Paket übertragen.</li><li data-v-1a77a4aa>Die im UDP-Header angegebene Länge bleibt <strong data-v-1a77a4aa>unverändert</strong>.</li></ul><p data-v-1a77a4aa>Beispiel:</p><ul data-v-1a77a4aa><li data-v-1a77a4aa>UDP-Header = 8 Byte</li><li data-v-1a77a4aa>Daten = 5 Byte → Prüfsumme berechnet über 8 + 5 + 1 (Padding) = 14 Byte</li><li data-v-1a77a4aa><code data-v-1a77a4aa>UDP-Length = 13</code> im Header</li></ul><p data-v-1a77a4aa> Der Empfänger rekonstruiert dieselbe Prüfsummenstruktur, ggf. ebenfalls mit Padding, und verwendet den <strong data-v-1a77a4aa>originalen UDP-Längenwert</strong> aus dem Header. </p></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> UDPのチェックサムは、2バイト（16ビット）単位で計算されます。そのため、データ部が奇数バイトの場合は、 計算のために<strong data-v-1a77a4aa>末尾に0x00の1バイトをパディング</strong>します。 </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>このパディングは<strong data-v-1a77a4aa>実際には送信されません</strong>。</li><li data-v-1a77a4aa>UDPヘッダのLengthフィールドの値は、<strong data-v-1a77a4aa>元の長さ（ヘッダ＋データ）</strong>のままです。</li></ul><p data-v-1a77a4aa>例：</p><ul data-v-1a77a4aa><li data-v-1a77a4aa>UDPヘッダ：8バイト</li><li data-v-1a77a4aa>データ：5バイト → パディング1バイト追加 → 計算上は14バイト</li><li data-v-1a77a4aa><code data-v-1a77a4aa>UDP長 = 13</code>（8 + 5）と記録</li></ul><p data-v-1a77a4aa> 受信側も同じようにLengthフィールドの値を使ってチェックサムを再計算し、必要ならパディングを追加して整合性を確認します。 </p></div></div><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Wie funktioniert Padding bei der UDP-Prüfsummenberechnung? Und was steht im UDP-Length-Feld? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> UDPチェックサム計算におけるパディングとは？UDP長フィールドには何が入るのか？ </p></div><div class="row mb-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> UDP verwendet 16-Bit-Blöcke zur Berechnung der Prüfsumme. Wenn die Nutzdaten eine ungerade Anzahl von Bytes haben, wird am Ende ein Padding-Byte mit dem Wert <code data-v-1a77a4aa>0x00</code> hinzugefügt – nur für die Berechnung. Dieses Padding wird <strong data-v-1a77a4aa>nicht gesendet</strong> und ist temporär. </p><p data-v-1a77a4aa> Im UDP-Header steht im Feld <strong data-v-1a77a4aa>Length</strong> immer die tatsächliche Länge des UDP-Segments (Header + Nutzdaten), <strong data-v-1a77a4aa>ohne Padding</strong>. </p><p data-v-1a77a4aa> Der Empfänger verwendet dasselbe Length-Feld aus dem empfangenen UDP-Header, um die Prüfsumme zu verifizieren. Auch er fügt ggf. temporär ein Padding-Byte für die Berechnung ein. </p><p data-v-1a77a4aa><strong data-v-1a77a4aa>Beispiel:</strong></p><ul data-v-1a77a4aa><li data-v-1a77a4aa>Header = 8 Byte</li><li data-v-1a77a4aa>Daten = 5 Byte</li><li data-v-1a77a4aa>UDP-Länge = 13 (im Header)</li><li data-v-1a77a4aa>Padding auf 14 Byte zur Berechnung</li></ul></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> UDPチェックサムは16ビット単位で計算されるため、データ長が奇数バイトの場合は、チェックサム計算のために <strong data-v-1a77a4aa>最後に1バイトの0（0x00）を一時的に追加（パディング）</strong>します。 このパディングは送信されず、計算時だけ使われます。 </p><p data-v-1a77a4aa> UDPヘッダー内の <strong data-v-1a77a4aa>Lengthフィールド</strong> には、 <strong data-v-1a77a4aa>本来のUDPパケットの長さ（＝ヘッダー＋データ）</strong> が記録され、パディングは含まれません。 </p><p data-v-1a77a4aa> 受信側では、送られてきたUDPヘッダーの Length を使用し、 必要に応じて同様にパディングを加えてチェックサムを再計算・検証します。 </p><p data-v-1a77a4aa><strong data-v-1a77a4aa>例：</strong></p><ul data-v-1a77a4aa><li data-v-1a77a4aa>ヘッダー：8バイト</li><li data-v-1a77a4aa>データ：5バイト（奇数）</li><li data-v-1a77a4aa>UDP長 = 13（ヘッダー＋データ）</li><li data-v-1a77a4aa>計算時のみ14バイトにパディング</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Was ist ein Pseudo-Header bei UDP und wie wird er verwendet? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> UDPにおける擬似ヘッダー（Pseudo Header）とは？どのように使われるのか？ </p></div>',8)),(0,d.Lk)("div",l,[t[2]||(t[2]=(0,d.Fv)('<div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Der sogenannte <strong data-v-1a77a4aa>Pseudo-Header</strong> wird weder übertragen noch gespeichert, sondern dient <u data-v-1a77a4aa>nur der Prüfsummenberechnung</u> auf Sender- und Empfängerseite. </p><p data-v-1a77a4aa> Er enthält Felder aus der IP-Schicht, um sicherzustellen, dass das UDP-Paket an die richtige Adresse gesendet wurde und keine Layer-3-Verwechslung auftritt. </p><p data-v-1a77a4aa>Der Pseudo-Header besteht aus:</p><ul data-v-1a77a4aa><li data-v-1a77a4aa>Source IP Address (32 Bit)</li><li data-v-1a77a4aa>Destination IP Address (32 Bit)</li><li data-v-1a77a4aa>Zero (8 Bit, immer 0)</li><li data-v-1a77a4aa>Protocol Number (8 Bit, z.B. 17 für UDP)</li><li data-v-1a77a4aa>UDP Length (16 Bit)</li></ul><p data-v-1a77a4aa> Sender und Empfänger bauen diesen Header <strong data-v-1a77a4aa>jeweils selbst</strong> aus den IP- und UDP-Feldern und führen die Prüfsummenberechnung durch. </p></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa><strong data-v-1a77a4aa>擬似ヘッダー（Pseudo Header）</strong>は、<u data-v-1a77a4aa>UDPチェックサム計算のためだけに使用される一時的な構造体</u>で、 実際にはパケットとして送信されません。 </p><p data-v-1a77a4aa> IP層の情報を含めることで、UDPレイヤのデータが正しく処理されたかを検証します。 送信側も受信側も、<strong data-v-1a77a4aa>自分自身で擬似ヘッダーを構成</strong>し、それをチェックサム計算に使います。 </p><p data-v-1a77a4aa>擬似ヘッダーの構成：</p><ul data-v-1a77a4aa><li data-v-1a77a4aa>送信元IPアドレス（32ビット）</li><li data-v-1a77a4aa>宛先IPアドレス（32ビット）</li><li data-v-1a77a4aa>ゼロ（8ビット）</li><li data-v-1a77a4aa>プロトコル番号（8ビット, UDPは17）</li><li data-v-1a77a4aa>UDP長（16ビット）</li></ul><p data-v-1a77a4aa> この構成により、UDPチェックサムは <strong data-v-1a77a4aa>IPレイヤも含めた整合性検証</strong> を実現できます。 </p></div>',2)),(0,d.Lk)("div",v,[(0,d.Lk)("img",{src:(0,r.R1)(i),alt:"UDP Checksum Calculation",class:"img-fluid",style:{"max-width":"700px"}},null,8,g),t[0]||(t[0]=(0,d.Lk)("p",{class:"text-muted mt-2"},"Abbildung: Struktur zur Prüfsummenberechnung inkl. Pseudo Header",-1))]),t[3]||(t[3]=(0,d.Lk)("div",{class:"border rounded p-3 bg-light mb-4"},[(0,d.Lk)("p",null,[(0,d.Lk)("strong",null,"Thema:"),(0,d.Lk)("br"),(0,d.eW)(" Prüfsumme über Pseudo Header und Segmentstruktur ")]),(0,d.Lk)("hr"),(0,d.Lk)("p",null,[(0,d.Lk)("strong",null,"テーマ:"),(0,d.Lk)("br"),(0,d.eW)(" UDPチェックサムの構成要素と「1の補数加算」による計算 ")])],-1)),(0,d.Lk)("div",o,[(0,d.Lk)("img",{src:(0,r.R1)(i),alt:"UDP Checksum Calculation",class:"img-fluid",style:{"max-width":"700px"}},null,8,u),t[1]||(t[1]=(0,d.Lk)("p",{class:"text-muted mt-2"},"Abbildung: Struktur zur Prüfsummenberechnung inkl. Pseudo Header",-1))])]),t[5]||(t[5]=(0,d.Fv)('<div class="row mt-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Die UDP-Prüfsumme wird über folgende Felder berechnet: </p><ul data-v-1a77a4aa><li data-v-1a77a4aa><strong data-v-1a77a4aa>Pseudo Header</strong> aus der IP-Schicht (nicht übertragen):</li><ul data-v-1a77a4aa><li data-v-1a77a4aa>Quell-IP-Adresse (2 × 16 Bit)</li><li data-v-1a77a4aa>Ziel-IP-Adresse (2 × 16 Bit)</li><li data-v-1a77a4aa>0 (8 Bit), Protokollnummer (8 Bit, UDP = 17)</li><li data-v-1a77a4aa>UDP-Gesamtlänge (Header + Daten)</li></ul><li data-v-1a77a4aa>UDP-Header (Source Port, Destination Port, Length, Checksum = 0 während der Berechnung)</li><li data-v-1a77a4aa>UDP-Daten (Payload, ggf. mit Padding auf 16 Bit)</li></ul><p data-v-1a77a4aa> Die Summe wird mit der <strong data-v-1a77a4aa>1er-Komplementaddition</strong> gebildet: Man addiert alle 16-Bit-Wörter nacheinander. Falls dabei ein Übertrag entsteht (17. Bit), wird dieser zurück auf das niederwertige Ende addiert (Wraparound). </p><p data-v-1a77a4aa> Zum Schluss wird das <strong data-v-1a77a4aa>1er-Komplement</strong> (Bitweise Invertierung) der Gesamtsumme genommen und als Checksumme im UDP-Header gespeichert. </p></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> UDPチェックサムは以下の範囲のデータを対象に計算されます： </p><ul data-v-1a77a4aa><li data-v-1a77a4aa><strong data-v-1a77a4aa>IP層の擬似ヘッダ（Pseudo Header）</strong>（送信はされない）： <ul data-v-1a77a4aa><li data-v-1a77a4aa>送信元IPアドレス（16ビット × 2）</li><li data-v-1a77a4aa>宛先IPアドレス（16ビット × 2）</li><li data-v-1a77a4aa>0（8ビット）＋ プロトコル番号（8ビット、UDP=17）</li><li data-v-1a77a4aa>UDP長（ヘッダ＋データ）</li></ul></li><li data-v-1a77a4aa>UDPヘッダ（送信元ポート、宛先ポート、長さ、チェックサム ※計算時は 0）</li><li data-v-1a77a4aa>UDPのデータ（必要に応じて奇数バイトのとき 0x00 でパディング）</li></ul><p data-v-1a77a4aa> すべてのフィールドを<strong data-v-1a77a4aa>16ビット単位で通常の加算</strong>を行い、 もし加算結果が17ビット（オーバーフロー）になった場合は、 上位の1ビットを下位に「折り返して加算」します（<strong data-v-1a77a4aa>1の補数加算</strong>）。 </p><p data-v-1a77a4aa> 最後にその合計に対して<strong data-v-1a77a4aa>ビット反転（1の補数）</strong>をとった値がチェックサムとしてUDPヘッダに記録されます。 </p></div></div><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Welche Informationen des Pseudo-Headers stammen aus dem IP-Header? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> 擬似ヘッダーの各フィールドはどこから取得されるのか？IPヘッダーとの関係は？ </p></div><div class="row mb-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Der Pseudo-Header wird ausschließlich für die UDP-Prüfsummenberechnung verwendet und ist nicht Bestandteil des übertragenen Pakets. Alle Felder des Pseudo-Headers stammen aus dem <strong data-v-1a77a4aa>IP-Header</strong>: </p><ul data-v-1a77a4aa><li data-v-1a77a4aa><strong data-v-1a77a4aa>Source IP Address:</strong> aus dem IP-Header (Quelladresse)</li><li data-v-1a77a4aa><strong data-v-1a77a4aa>Destination IP Address:</strong> aus dem IP-Header (Zieladresse)</li><li data-v-1a77a4aa><strong data-v-1a77a4aa>Protokollnummer:</strong> ebenfalls aus dem IP-Header (z. B. 17 für UDP)</li><li data-v-1a77a4aa><strong data-v-1a77a4aa>UDP Length:</strong> aus dem UDP-Header</li></ul><p data-v-1a77a4aa> Der Pseudo-Header wird vom Sender und vom Empfänger <strong data-v-1a77a4aa>lokal erzeugt</strong>, um die Prüfsumme korrekt zu berechnen bzw. zu prüfen. Dabei greifen beide auf die tatsächlichen IP-Header-Felder des Pakets zu. </p></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> 擬似ヘッダー（Pseudo Header）は、<strong data-v-1a77a4aa>UDPチェックサムの計算時のみ</strong>内部的に構成され、<strong data-v-1a77a4aa>実際のパケットには含まれません</strong>。 この擬似ヘッダーの情報はすべて、<strong data-v-1a77a4aa>IPヘッダーから取得</strong>されます。 </p><ul data-v-1a77a4aa><li data-v-1a77a4aa><strong data-v-1a77a4aa>送信元IPアドレス：</strong>IPヘッダーから</li><li data-v-1a77a4aa><strong data-v-1a77a4aa>宛先IPアドレス：</strong>IPヘッダーから</li><li data-v-1a77a4aa><strong data-v-1a77a4aa>プロトコル番号：</strong>IPヘッダーから（UDPなら17）</li><li data-v-1a77a4aa><strong data-v-1a77a4aa>UDP長（Length）：</strong>UDPヘッダーから</li></ul><p data-v-1a77a4aa> 送信側・受信側の双方が、受信したIPヘッダーやUDPヘッダーからこれらの情報を参照し、<strong data-v-1a77a4aa>自分で擬似ヘッダーを構成してチェックサム処理を行います</strong>。 </p></div></div><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Wie funktioniert die UDP-Prüfsummenberechnung im Zusammenspiel der Schichten? Welche Rolle spielt der IP-Header? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> UDPチェックサムはどこでどのように計算・検証されるのか？IPヘッダー情報はどう関わるのか？ </p></div><div class="row mb-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Obwohl die UDP-Prüfsumme ein Teil der Transportschicht (Layer 4) ist, erfordert ihre Berechnung Informationen aus dem IP-Header (Layer 3), insbesondere die Quell- und Zieladresse sowie die Protokollnummer. </p><p data-v-1a77a4aa> Die Berechnung erfolgt daher <strong data-v-1a77a4aa>nicht rein im UDP-Modul</strong>, sondern im Zusammenspiel mit der Netzwerkschicht – meist im Kernel des Betriebssystems. </p><p data-v-1a77a4aa> Beim Senden stellt der UDP-Code die Nutzdaten und Header bereit, während die Prüfsumme mit Hilfe des Pseudo-Headers und der IP-Daten ermittelt wird. </p><p data-v-1a77a4aa> Beim Empfangen prüft das System die Prüfsumme <strong data-v-1a77a4aa>noch bevor die Daten an die Anwendung weitergeleitet werden</strong>. Schlägt die Prüfung fehl, wird das Paket verworfen. </p><p data-v-1a77a4aa><strong data-v-1a77a4aa>Zusammenfassung:</strong></p><ul data-v-1a77a4aa><li data-v-1a77a4aa>UDP verwendet einen Pseudo-Header aus Layer 3 zur Prüfsumme</li><li data-v-1a77a4aa>Prüfung erfolgt auf OS-Ebene zwischen IP- und UDP-Schicht</li><li data-v-1a77a4aa>Ungültige Pakete werden nie an die Anwendung weitergegeben</li></ul></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> UDPチェックサムは第4層（トランスポート層）に属しますが、<strong data-v-1a77a4aa>計算には第3層（IP層）の情報</strong>（送信元/宛先IPアドレス、プロトコル番号など）が必要です。 </p><p data-v-1a77a4aa> そのため、UDP層だけでは完結せず、OSカーネル内でIP層の情報を参照しながらチェックサムが計算されます（＝レイヤー間の協調）。 </p><p data-v-1a77a4aa> 受信時も、パケットがUDPとして識別された後、<strong data-v-1a77a4aa>UDP層に渡される前にチェックサムが検証</strong>されます。 チェックサムが一致しなければそのセグメントは廃棄され、<strong data-v-1a77a4aa>アプリケーションには一切届きません</strong>。 </p><p data-v-1a77a4aa><strong data-v-1a77a4aa>まとめ：</strong></p><ul data-v-1a77a4aa><li data-v-1a77a4aa>UDPチェックサムには擬似ヘッダー（Pseudo Header）が必要</li><li data-v-1a77a4aa>送信時はIP情報を参照して計算</li><li data-v-1a77a4aa>受信時もIPとUDPの中間で検証</li><li data-v-1a77a4aa>不一致なら破棄 → アプリには届かない</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>Thema:</strong><br data-v-1a77a4aa> Wie funktioniert die UDP-Kapselung innerhalb des Netzwerkmodells? </p><hr data-v-1a77a4aa><p data-v-1a77a4aa><strong data-v-1a77a4aa>テーマ:</strong><br data-v-1a77a4aa> UDPのカプセル化とは？ネットワーク階層におけるデータの包み方 </p></div><div class="text-center mt-4" data-v-1a77a4aa><img src="'+n+'" class="img-fluid" alt="UDPカプセル化の構造" style="max-width:700px;" data-v-1a77a4aa><p class="text-muted mt-2" data-v-1a77a4aa>Abbildung: UDP-Kapselung durch die Schichten (Transport → Netzwerk → Data Link)</p></div><div class="row mt-4" data-v-1a77a4aa><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>Erklärung (Deutsch)</h5><p data-v-1a77a4aa> Diese Abbildung zeigt den Kapselungsprozess eines UDP-Datagramms im Rahmen des OSI-Schichtenmodells: </p><ul data-v-1a77a4aa><li data-v-1a77a4aa>Ein <strong data-v-1a77a4aa>UDP-Datagramm</strong> besteht aus UDP-Header und UDP-Nutzdaten</li><li data-v-1a77a4aa>Dieses wird in das <strong data-v-1a77a4aa>IP-Paket</strong> eingebettet – genauer: in das Payload-Feld des IP-Headers</li><li data-v-1a77a4aa>Das vollständige IP-Paket wird anschließend in einen <strong data-v-1a77a4aa>Frame</strong> (z. B. Ethernet) eingebettet</li></ul><p data-v-1a77a4aa> Die <strong data-v-1a77a4aa>Protokollnummer im IP-Header</strong> (z. B. 17 für UDP) zeigt dem Empfänger an, welches Protokoll die Nutzdaten enthält. </p><p data-v-1a77a4aa><strong data-v-1a77a4aa>Zusammenfassung:</strong></p><ul data-v-1a77a4aa><li data-v-1a77a4aa>UDP = Nutzlast der Netzwerkschicht (IP)</li><li data-v-1a77a4aa>IP = Nutzlast der Sicherungsschicht (Frame)</li><li data-v-1a77a4aa>Jede Schicht fügt ihren eigenen Header hinzu, bevor sie die Daten an die darunterliegende Schicht übergibt</li></ul></div><div class="col-md-6" data-v-1a77a4aa><h5 data-v-1a77a4aa>解説（日本語）</h5><p data-v-1a77a4aa> この図は、UDPパケットが通信の際にネットワークの各層でどのように「包まれていく」か（カプセル化）を示したものです。 </p><ul data-v-1a77a4aa><li data-v-1a77a4aa><strong data-v-1a77a4aa>UDPデータグラム</strong>（UDPヘッダ＋データ）が最初に生成されます（トランスポート層）</li><li data-v-1a77a4aa>それが <strong data-v-1a77a4aa>IPパケット</strong> に包まれます（ネットワーク層）</li><li data-v-1a77a4aa>最終的に <strong data-v-1a77a4aa>フレーム</strong>（例えばEthernet）にカプセル化されて物理的に送信されます（データリンク層）</li></ul><p data-v-1a77a4aa> IPヘッダー内の <strong data-v-1a77a4aa>プロトコル番号</strong>（UDPは17）によって、受信側は「これはUDPだ」と識別できます。 </p><p data-v-1a77a4aa><strong data-v-1a77a4aa>まとめ：</strong></p><ul data-v-1a77a4aa><li data-v-1a77a4aa>UDPはIPのペイロード</li><li data-v-1a77a4aa>IPはフレームのペイロード</li><li data-v-1a77a4aa>各層でそれぞれのヘッダーが追加され、順にカプセル化されて送信される</li></ul></div></div>',8))]))}},m=e(1241);const P=(0,m.A)(h,[["__scopeId","data-v-1a77a4aa"]]);var c=P}}]);
//# sourceMappingURL=2251.2a7fd49e.js.map