{"version":3,"file":"js/1828.c1840a5f.js","mappings":"uvOACEA,EAAAA,EAAAA,IAsJM,MAtJNC,EAsJMC,EAAA,KAAAA,EAAA,K,utMCjJR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_92.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_92.vue?87a9"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">\r\n      9(b) TCP CUBIC – Formel\r\n    </h3>\r\n\r\n    <!-- 問題文（Deutsch + 日本語） -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n    <p><strong>Aufgabe:</strong><br />\r\n      Geben Sie die Wachstumsfunktion von CUBIC an und erklären Sie die Bestandteile der folgenden Formel:\r\n    </p>\r\n\r\n    <!-- 式を大きく表示 -->\r\n    <div class=\"fs-5 my-2\">\r\n      <code>W(t) = C(t−K)³ + W<sub>max</sub></code>\r\n    </div>\r\n\r\n    <p>\r\n      Was bedeuten die Parameter C, t, K und W<sub>max</sub>?<br />\r\n      Welche Rolle spielt diese Funktion im Verhalten von CUBIC?<br />\r\n      Was passiert, wenn cwnd &lt; W<sub>max</sub>?\r\n    </p>\r\n\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        CUBIC の成長関数 <code>W(t) = C(t−K)³ + W<sub>max</sub></code> を示し、各パラメータ C, t, K, W<sub>max</sub> の意味を説明せよ。\r\n        <br />\r\n        この関数は CUBIC の挙動にどのような影響を与えるか？\r\n        <br />\r\n        また、cwnd &lt; W<sub>max</sub> のとき何が起きるか？\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答：ドイツ語 & 日本語 横並び -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n       \r\n    <!-- 式を大きく表示 -->\r\n    <div class=\"fs-5 my-2\">\r\n      <code>W(t) = C(t−K)³ + W<sub>max</sub></code>\r\n    </div>\r\n\r\n        <ul>\r\n          <li><strong>C:</strong> Skalierungsfaktor, der das Wachstum beeinflusst</li>\r\n          <li><strong>t:</strong> Zeit seit dem letzten Paketverlust</li>\r\n          <li><strong>K:</strong> Zeitpunkt, an dem das Fenster wieder W<sub>max</sub> erreicht</li>\r\n          <li><strong>W<sub>max</sub>:</strong> Maximales Fenster vor dem letzten Verlust</li>\r\n        </ul>\r\n        <div class=\"text-center mt-4\">\r\n          <img src=\"@/assets/lecture/lecture03/Figure_0902.png\" class=\"img-fluid\" alt=\"time for increase\" style=\"max-width: 400px;\" />\r\n        </div>\r\n<ul>\r\n  <li><strong>β:</strong> Multiplikativer Reduktionsfaktor (z.&nbsp;B. β = 0.2), der angibt, wie stark das Fenster bei einem Paketverlust verkleinert wird. \r\n    Er beeinflusst auch die Berechnung des Wendepunktes <code>K = &#8731;(W<sub>max</sub> · β / C)</code>.</li>\r\n</ul>\r\n        <p>\r\n          Diese Funktion beschreibt ein kubisches Wachstum des Congestion Window.\r\n          Nahe W<sub>max</sub> ist das Wachstum langsamer, weiter entfernt wird es schneller.\r\n        </p>\r\n        <p>\r\n          Wenn <strong>cwnd &lt; W<sub>max</sub></strong>, wächst das Fenster sehr schnell, um zum vorherigen Maximum zurückzukehren.\r\n          Das verbessert die Effizienz und die Erholungszeit nach Verlust.\r\n        </p>\r\n      </div>\r\n\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        \r\n    <!-- 式を大きく表示 -->\r\n    <div class=\"fs-5 my-2\">\r\n      <code>W(t) = C(t−K)³ + W<sub>max</sub></code>\r\n    </div>\r\n\r\n        <ul>\r\n          <li><strong>C：</strong> 拡大係数（成長速度の調整）</li>\r\n          <li><strong>t：</strong> 最後のパケット損失からの経過時間</li>\r\n          <li><strong>K：</strong> cwnd が W<sub>max</sub> に再到達する時間</li>\r\n          <li><strong>W<sub>max</sub>：</strong> 直前の最大輻輳ウィンドウサイズ</li>\r\n        </ul>\r\n        <div class=\"text-center mt-4\">\r\n          <img src=\"@/assets/lecture/lecture03/Figure_0902.png\" class=\"img-fluid\" alt=\"time for increase\" style=\"max-width: 400px;\" />\r\n        </div>\r\n<ul>\r\n  <li><strong>β：</strong> パケット損失時に cwnd をどの程度減少させるかを決定する**乗算減衰係数**（例：β = 0.2）であり、K の計算にも使用されます。\r\n    <code>K = &#8731;(W<sub>max</sub>・β / C)</code> の形で表されます。</li>\r\n</ul>\r\n\r\n        <p>\r\n          この関数は、輻輳ウィンドウを時間に応じて三次関数的に成長させるものであり、\r\n          W<sub>max</sub> に近づくほど成長が緩やかになり、離れると急速に拡大します。\r\n        </p>\r\n        <p>\r\n          <strong>cwnd &lt; W<sub>max</sub></strong> のときは、cwnd が急速に成長し、\r\n          以前の最大値へと早く回復するように動作します。これにより、効率よく帯域を再利用できます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 解説：Deutsch & 日本語 -->\r\n<div class=\"row mt-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Der TCP-CUBIC-Algorithmus unterscheidet drei Betriebsmodi, je nachdem, wie sich die aktuelle Fenstergröße (cwnd)\r\n      relativ zu früheren Werten verhält:\r\n    </p>\r\n    <ul>\r\n      <li><strong style=\"color: red;\">TCP-Modus:</strong>\r\n        <span style=\"color: red;\">Wenn cwnd kleiner ist als das Fenster</span>, das ein Standard-TCP (z.&nbsp;B. Reno) zum selben Zeitpunkt t erreicht hätte,\r\n        <span style=\"color: red;\">schaltet CUBIC in den TCP-Modus</span>. Dies dient der Fairness gegenüber langsamer wachsenden TCP-Verbindungen.\r\n      </li>\r\n      <li><strong>Konkaver Bereich (vor K):</strong>\r\n        Wenn cwnd kleiner ist als W<sub>max</sub>, befindet sich CUBIC im konkaven Bereich.\r\n        Das Wachstum verläuft langsamer, da die Wahrscheinlichkeit eines Paketverlusts in der Nähe von W<sub>max</sub> hoch ist.\r\n      </li>\r\n      <li><strong>Konvexer Bereich (nach K):</strong>\r\n        Wenn cwnd größer ist als W<sub>max</sub>, beschleunigt CUBIC das Wachstum wieder, um effizient nach einer neuen maximalen Bandbreite zu suchen.\r\n      </li>\r\n    </ul>\r\n    <p>\r\n      Durch diese dynamische Umschaltung zwischen drei Phasen erreicht CUBIC eine gute Balance zwischen Effizienz und Stabilität.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      CUBIC アルゴリズムには、ウィンドウサイズ（cwnd）の位置に応じて3つの動作モードがあります：\r\n    </p>\r\n    <ul>\r\n      <li><strong>TCPモード：</strong>\r\n        cwnd が同時刻における標準的な TCP（例：Reno）アルゴリズムのウィンドウサイズよりも小さい場合、CUBIC は TCP モードに切り替え、\r\n        TCP に近い線形成長を行います。これは主に低速な TCP フローとのフェアネス確保のためです。\r\n      </li>\r\n      <li><strong>凹型領域（K の前）：</strong>\r\n        cwnd が過去の最大値 W<sub>max</sub> よりも小さい場合、CUBIC は凹型領域に入り、ウィンドウの増加速度は徐々に緩やかになります。\r\n        これは W<sub>max</sub> 付近で過去に輻輳が起きたことを意識し、慎重に帯域を探る動作です。\r\n      </li>\r\n      <li><strong>凸型領域（K の後）：</strong>\r\n        cwnd が W<sub>max</sub> を超えると、CUBIC はより積極的に成長を再開します。\r\n        このときは新たな帯域の最大限界を素早く探すため、加速度的にウィンドウが拡大します。\r\n      </li>\r\n    </ul>\r\n    <p>\r\n      このように、CUBIC は過去の最大値を中心に、3つの異なる動作フェーズを使い分けることで、効率性と安定性を両立させています。\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Keine Logik nötig\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_92.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_92.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_92.vue?vue&type=style&index=0&id=4a97fc0c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a97fc0c\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}