{"version":3,"file":"js/3164.a2567534.js","mappings":"gRACEA,EAAAA,EAAAA,IAkDM,MAlDNC,EAkDMC,EAAA,KAAAA,EAAA,K,otEC7CR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_93.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_93.vue?fefd"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">9(c) CUBIC vs. AIMD – Wachstumsverhalten & Reaktion auf Überlastung</h3>\r\n\r\n    <!-- 問題文（Deutsch + 日本語） -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n      <p><strong>Aufgabe:</strong><br />\r\n        Vergleichen Sie das Wachstumsverhalten und die Reaktionsgeschwindigkeit von CUBIC mit AIMD.<br />\r\n        Wie unterscheiden sich die beiden Ansätze im Verhalten bei Netzüberlastung und in der Erholungsphase? (4P)\r\n      </p>\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        TCP CUBIC と AIMD のウィンドウサイズの増加傾向や反応速度を比較し、<br />\r\n        輻輳時の挙動および回復フェーズにおける違いを述べよ。（4点）\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答：ドイツ語 & 日本語 横並び -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n        <ul>\r\n          <li><strong>AIMD:</strong> Fenster wächst linear (langsam) und halbiert sich bei Verlust.</li>\r\n          <li>Reagiert empfindlich auf Verluste, braucht lange zur Erholung.</li>\r\n          <li>Gut für Fairness, aber ineffizient in Hochgeschwindigkeitsnetzen.</li>\r\n          <li>Erholung basiert nur auf Empfangsrate.</li>\r\n        </ul>\r\n        <ul>\r\n          <li><strong>CUBIC:</strong> Wachstum ist nicht linear, sondern kubisch (t³).</li>\r\n          <li>Nach einem Verlust wächst cwnd zunächst langsam (nahe W<sub>max</sub>), dann schnell.</li>\r\n          <li>Erholung ist schneller, da die Zeitkomponente unabhängig von RTT ist.</li>\r\n          <li>Besser für hohe Bandbreiten und lange Latenz geeignet.</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        <ul>\r\n          <li><strong>AIMD：</strong> 輻輳ウィンドウは線形（遅い）に増加し、損失時に半減する。</li>\r\n          <li>損失に敏感で、回復には時間がかかる。</li>\r\n          <li>公平性は高いが、高帯域ネットワークでは非効率。</li>\r\n          <li>回復速度はRTTに依存。</li>\r\n        </ul>\r\n        <ul>\r\n          <li><strong>CUBIC：</strong> 増加は線形ではなく三次関数的（t³）である。</li>\r\n          <li>損失直後はゆるやかに、W<sub>max</sub>から離れると急速に成長する。</li>\r\n          <li>RTT に依存せず、回復が速い。</li>\r\n          <li>高帯域・高遅延ネットワークに最適化されている。</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Kein Script nötig\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_93.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_93.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_93.vue?vue&type=style&index=0&id=214c9c20&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-214c9c20\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}