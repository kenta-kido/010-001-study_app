"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[4765],{4765:function(a,t,d){d.r(t),d.d(t,{default:function(){return l}});var e=d(6768);const i={class:"container my-4"};var c={__name:"chapter15_34",setup(a){return(a,t)=>((0,e.uX)(),(0,e.CE)("div",i,t[0]||(t[0]=[(0,e.Fv)('<h3 class="mb-4" data-v-907c6dba>3(d) Vergleich: Dijkstra vs. Distance-Vector</h3><div class="border rounded p-3 bg-light mb-4" data-v-907c6dba><p data-v-907c6dba><strong data-v-907c6dba>Aufgabe:</strong><br data-v-907c6dba> Vergleichen Sie den Dijkstra-Algorithmus mit dem Distance-Vector-Routing-Algorithmus hinsichtlich der Art der Berechnung der Distanzen. </p><hr data-v-907c6dba><p data-v-907c6dba><strong data-v-907c6dba>問題:</strong><br data-v-907c6dba> Dijkstra アルゴリズムと Distance-Vector ルーティング アルゴリズムの距離計算方法の違いを比較せよ。 </p></div><div class="row" data-v-907c6dba><div class="col-md-6" data-v-907c6dba><h5 data-v-907c6dba>Antwort (Deutsch)</h5><p data-v-907c6dba><strong data-v-907c6dba>Dijkstra (Link-State):</strong></p><ul data-v-907c6dba><li data-v-907c6dba>Jeder Router hat vollständige Informationen über die Topologie.</li><li data-v-907c6dba>Alle Link-Kosten sind bekannt (z.B. durch OSPF gesammelt).</li><li data-v-907c6dba>Router berechnen den kürzesten Pfad selbstständig mit globaler Sicht.</li></ul><p data-v-907c6dba><strong data-v-907c6dba>Distance-Vector:</strong></p><ul data-v-907c6dba><li data-v-907c6dba>Router kennen nur ihre direkten Nachbarn.</li><li data-v-907c6dba>Jeder Router teilt seine Distanztabelle regelmäßig mit Nachbarn.</li><li data-v-907c6dba>Berechnung erfolgt iterativ und verteilt (z.B. Bellman-Ford).</li></ul></div><div class="col-md-6" data-v-907c6dba><h5 data-v-907c6dba>解答（日本語）</h5><p data-v-907c6dba><strong data-v-907c6dba>Dijkstra（リンク状態型）:</strong></p><ul data-v-907c6dba><li data-v-907c6dba>各ルーターはネットワーク全体のトポロジーを知っている。</li><li data-v-907c6dba>すべてのリンクコストが既知（例：OSPF などで収集）。</li><li data-v-907c6dba>各ルーターがグローバルな情報をもとに最短経路を自律的に計算する。</li></ul><p data-v-907c6dba><strong data-v-907c6dba>Distance Vector（距離ベクトル型）:</strong></p><ul data-v-907c6dba><li data-v-907c6dba>ルーターは自分の隣接ノードのみを認識している。</li><li data-v-907c6dba>各ルーターは定期的に自分の経路表を隣接ノードに送る。</li><li data-v-907c6dba>計算は分散的・逐次的に行われる（例：ベルマンフォード法）。</li></ul></div></div>',3)])))}},r=d(1241);const n=(0,r.A)(c,[["__scopeId","data-v-907c6dba"]]);var l=n}}]);
//# sourceMappingURL=4765.2d5dda48.js.map