"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[7911],{7911:function(a,d,r){r.r(d),r.d(d,{default:function(){return p}});var t=r(6768);const c={class:"container my-4"};function e(a,d){return(0,t.uX)(),(0,t.CE)("div",c,d[0]||(d[0]=[(0,t.Fv)('<h5 class="mb-4" data-v-f71b0e2c>2-1 画面への表示</h5><div class="card mb-4 bg-primary bg-opacity-10 border-primary" data-v-f71b0e2c><div class="card-header fw-bold text-primary" data-v-f71b0e2c> ■ 基本の出力：print()で1行ずつ表示 </div><div class="card-body" data-v-f71b0e2c><pre class="code-block" data-v-f71b0e2c>print(&#39;こんにちは。&#39;)\nprint(&#39;はじめまして。&#39;)\n        </pre><p data-v-f71b0e2c><strong data-v-f71b0e2c>解説：</strong> print() は出力後に自動で改行されます。</p><div class="output-block mt-2" data-v-f71b0e2c><pre data-v-f71b0e2c>こんにちは。\nはじめまして。\n</pre></div></div></div><div class="card mb-4 bg-primary bg-opacity-10 border-primary" data-v-f71b0e2c><div class="card-header fw-bold text-primary" data-v-f71b0e2c> ■ 改行せずに続けて表示：end=&quot;&quot; の利用 </div><div class="card-body" data-v-f71b0e2c><pre class="code-block" data-v-f71b0e2c>print(&#39;こんにちは。&#39;, end=&#39;&#39;)\nprint(&#39;はじめまして。&#39;)\n        </pre><p data-v-f71b0e2c><strong data-v-f71b0e2c>解説：</strong> end=&#39;&#39; を指定すると、改行されずに表示が続きます。</p><div class="output-block mt-2" data-v-f71b0e2c><pre data-v-f71b0e2c>こんにちは。はじめまして。\n</pre></div></div></div><div class="card mb-4 bg-primary bg-opacity-10 border-primary" data-v-f71b0e2c><div class="card-header fw-bold text-primary" data-v-f71b0e2c> ■ 文字列内での改行：\\n を使う </div><div class="card-body" data-v-f71b0e2c><pre class="code-block" data-v-f71b0e2c>print(&#39;風\\n林\\n火\\n山&#39;)\n        </pre><p data-v-f71b0e2c><strong data-v-f71b0e2c>解説：</strong> \\n は文字列中での明示的な改行です。</p><div class="output-block mt-2" data-v-f71b0e2c><pre data-v-f71b0e2c>風\n林\n火\n山\n</pre></div></div></div><div class="card mb-4 bg-primary bg-opacity-10 border-primary" data-v-f71b0e2c><div class="card-header fw-bold text-primary" data-v-f71b0e2c> ■ 複数の print() を使って1行ずつ表示 </div><div class="card-body" data-v-f71b0e2c><pre class="code-block" data-v-f71b0e2c>print(&#39;風&#39;)\nprint(&#39;林&#39;)\nprint(&#39;火&#39;)\nprint(&#39;山&#39;)\n        </pre><p data-v-f71b0e2c><strong data-v-f71b0e2c>解説：</strong> 各 print() は個別に改行されて出力されます。</p><div class="output-block mt-2" data-v-f71b0e2c><pre data-v-f71b0e2c>風\n林\n火\n山\n</pre></div></div></div><div class="card mb-4 bg-primary bg-opacity-10 border-primary" data-v-f71b0e2c><div class="card-header fw-bold text-primary" data-v-f71b0e2c> ■ 改行だけを出力：空の print() </div><div class="card-body" data-v-f71b0e2c><pre class="code-block" data-v-f71b0e2c>print()\nprint(&#39;はじめまして。&#39;)\n        </pre><p data-v-f71b0e2c><strong data-v-f71b0e2c>解説：</strong> 空の print() は1行の空白行を出力します。</p><div class="output-block mt-2" data-v-f71b0e2c><pre data-v-f71b0e2c> \nはじめまして。\n</pre></div></div></div>',6)]))}var v=r(1241);const b={},i=(0,v.A)(b,[["render",e],["__scopeId","data-v-f71b0e2c"]]);var p=i}}]);
//# sourceMappingURL=7911.a5dec621.js.map