"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[2190],{2190:function(e,a,d){d.r(a),d.d(a,{default:function(){return l}});var t=d(6768);const n={class:"container my-4"};var i={__name:"chapter15_22_ex",setup(e){return(e,a)=>((0,t.uX)(),(0,t.CE)("div",n,a[0]||(a[0]=[(0,t.Fv)('<h3 class="mb-4" data-v-dce9f59a>2(b) Ergänzende Themen: Switching und Netzwerkentwicklung</h3><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> Von Repeater zu Bridge – Techniken zur Reichweiten- und Kollisionskontrolle </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> リピータからブリッジへ：距離と衝突の問題を解決するための技術の発展 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a>In frühen Ethernet-Topologien war <span style="color:red;" data-v-dce9f59a>die Reichweite durch Signalverlust</span> stark begrenzt.</li><li data-v-dce9f59a><strong data-v-dce9f59a>Repeater</strong> wurden eingeführt, um auf Layer 1 <span style="color:red;" data-v-dce9f59a>analoge Signale zu verstärken und die Reichweite zu vergrößern</span>.</li><li data-v-dce9f59a>Allerdings verlängerte der Repeater nur das gemeinsame Medium – das Problem von Kollisionen blieb bestehen.</li><li data-v-dce9f59a><strong data-v-dce9f59a>Hubs</strong> als Mehrport-Repeater ermöglichten die Verbindung mehrerer Geräte, verschärften aber das Kollisionsrisiko, da alle Ports simultan aktiv waren.</li><li data-v-dce9f59a>Die Kollisiondomäne umfasste weiterhin das gesamte Netzsegment.</li><li data-v-dce9f59a><strong data-v-dce9f59a>Bridges</strong> brachten erstmals auf Layer 2 Intelligenz ins Netzwerk: Sie trennten Segmente logisch und leiteten Frames nur gezielt weiter.</li><li data-v-dce9f59a>Dank <em data-v-dce9f59a>MAC-Adressenlernen</em> konnten Bridges unnötigen Verkehr filtern und so die Effizienz steigern.</li><li data-v-dce9f59a>Dies war ein entscheidender Schritt zur besseren Skalierbarkeit und Stabilität in Ethernet-Architekturen.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a>初期のEthernetでは、ケーブルが長くなると信号が減衰するため、通信可能な距離に限界がありました。</li><li data-v-dce9f59a><strong data-v-dce9f59a>リピータ</strong>は物理層（Layer 1）で信号をそのまま増幅し、通信距離を延長する装置として登場しました。</li><li data-v-dce9f59a>しかし、リピータは衝突ドメインを広げるだけで、通信の効率性や衝突の問題は改善されませんでした。</li><li data-v-dce9f59a><strong data-v-dce9f59a>ハブ</strong>は複数の機器を1つのネットワークにまとめる装置ですが、すべてのポートに同じ信号を送るため、同時通信時に衝突が発生しやすい構造でした。</li><li data-v-dce9f59a>その結果、全体が1つの衝突ドメインとなり、ネットワーク全体のパフォーマンスに悪影響を与えていました。</li><li data-v-dce9f59a>そこで導入されたのが<strong data-v-dce9f59a>ブリッジ</strong>です。ブリッジはデータリンク層（Layer 2）で動作し、MACアドレスに基づいてフレームを識別・転送します。</li><li data-v-dce9f59a>各セグメントごとに衝突ドメインを分離し、宛先が明確な通信のみを転送することで、不要なトラフィックを減らしました。</li><li data-v-dce9f59a>これにより、大規模で安定したネットワーク構築が可能になり、次世代のスイッチへの基盤となりました。</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> Die Funktion der Bridge – vom geteilten Medium zum segmentierten Netzwerk </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> ブリッジの役割と仕組み – 共有型ネットワークから分割型ネットワークへの進化 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a>Ursprünglich nutzten Ethernet-Netze ein gemeinsames Übertragungsmedium, das alle Geräte miteinander verband – Kollisionen waren unvermeidlich.</li><li data-v-dce9f59a>Repeater und Hubs verstärkten zwar Signale, trugen aber zur Ausweitung der Kollisionsdomäne bei.</li><li data-v-dce9f59a>Die Einführung von <strong data-v-dce9f59a>Bridges</strong> in den 1980er Jahren brachte Intelligenz auf Layer 2 des OSI-Modells.</li><li data-v-dce9f59a>Bridges segmentieren Netzwerke: Sie trennen den Verkehr in verschiedene <strong data-v-dce9f59a>Kollisiondomänen</strong>.</li><li data-v-dce9f59a>Sie analysieren eingehende Frames, lernen die Quell-MAC-Adressen und führen eine Weiterleitungstabelle.</li><li data-v-dce9f59a>Wenn das Ziel bekannt ist, wird der Frame gezielt an das entsprechende Segment gesendet; sonst erfolgt ein Broadcast.</li><li data-v-dce9f59a>So wird unnötiger Verkehr reduziert, und die Netzwerkleistung steigt.</li><li data-v-dce9f59a>Bridges legten das Fundament für moderne Switches, die dieselbe Logik in leistungsstärkerer Form übernehmen.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a>初期のEthernetでは、全端末が1本のケーブルを共有する「共有型メディア」が使われており、同時通信による<strong data-v-dce9f59a>衝突</strong>が避けられませんでした。</li><li data-v-dce9f59a><strong data-v-dce9f59a>リピータ</strong>や<strong data-v-dce9f59a>ハブ</strong>は信号を増幅・中継するだけで、衝突ドメインを分割できず、トラフィックが集中して効率が悪くなっていました。</li><li data-v-dce9f59a>1980年代に登場した<strong data-v-dce9f59a>ブリッジ</strong>は、OSI参照モデルのデータリンク層（Layer 2）で動作する初の「インテリジェントな中継装置」でした。</li><li data-v-dce9f59a>ブリッジはネットワークを複数のセグメントに分け、それぞれを<strong data-v-dce9f59a>独立した衝突ドメイン</strong>として扱います。</li><li data-v-dce9f59a>受信したフレームの<strong data-v-dce9f59a>送信元MACアドレス</strong>を記録し、<strong data-v-dce9f59a>宛先MACアドレス</strong>に基づいて必要なセグメントのみにフレームを転送します。</li><li data-v-dce9f59a>宛先が不明な場合のみ、全セグメントへの転送（フラッディング）を行います。</li><li data-v-dce9f59a>この仕組みにより、ブロードキャストの量が減り、通信の効率性と信頼性が向上しました。</li><li data-v-dce9f59a>ブリッジの仕組みは後の<strong data-v-dce9f59a>スイッチ</strong>に受け継がれ、より高速・高機能な形で現在のネットワークの基盤となっています。</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> Warum Switches entstanden sind – Unterschiede zu Bridges </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> なぜスイッチが必要とされたのか？ブリッジとの違いとその役割の進化 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a>Bridges brachten eine gezielte Weiterleitung von Frames auf Layer 2, konnten aber <span style="color:red;" data-v-dce9f59a>nur eine Frame-Übertragung gleichzeitig behandeln</span>.</li><li data-v-dce9f59a>Bei mehreren aktiven Hosts entstanden schnell Engpässe und Verzögerungen, da der Datenverkehr nacheinander verarbeitet werden musste.</li><li data-v-dce9f59a><strong data-v-dce9f59a>Switches</strong> wurden entwickelt, um diesen Flaschenhals zu beseitigen: Sie besitzen mehrere dedizierte Ports für gleichzeitige Verbindungen.</li><li data-v-dce9f59a>Dank <strong data-v-dce9f59a>Vollduplex</strong> kann jeder Host gleichzeitig senden und empfangen – ohne Kollisionen.</li><li data-v-dce9f59a>Switches verwenden <strong data-v-dce9f59a>MAC-Adress-Tabellen</strong>, um Frames effizient an das richtige Ziel weiterzuleiten.</li><li data-v-dce9f59a>Anders als Bridges basieren Switches oft auf Hardware (ASIC), was sie deutlich schneller und skalierbarer macht.</li><li data-v-dce9f59a>Sie erlauben viele parallele Übertragungen im selben Moment – ideal für moderne Netzwerke mit hohem Verkehrsaufkommen.</li><li data-v-dce9f59a>Damit wurden Switches zur Standardlösung für Ethernet-LANs und ersetzten sowohl Hubs als auch Bridges in der Praxis.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a>ブリッジは、データリンク層においてフレームをMACアドレスに基づいて中継する装置として登場し、不要なブロードキャストを削減しました。</li><li data-v-dce9f59a>しかし、ブリッジは基本的に<span style="color:red;" data-v-dce9f59a>1つのフレームしか同時に処理</span>できず、複数の通信が重なると待ち時間や遅延が発生しました。</li><li data-v-dce9f59a><strong data-v-dce9f59a>スイッチ</strong>は、この課題を解決するために開発され、各ポートが独立して通信できる構造を持っています。</li><li data-v-dce9f59a><strong data-v-dce9f59a>フルデュプレックス通信</strong>に対応しているため、送信と受信が同時に可能であり、コリジョンも発生しません。</li><li data-v-dce9f59a>さらに、MACアドレステーブルを利用して、宛先のみにフレームを転送することでネットワーク効率を大幅に向上させました。</li><li data-v-dce9f59a>スイッチは多くの場合、専用チップ（ASIC）によって高速に処理され、ブリッジよりも高性能・高スループットを実現します。</li><li data-v-dce9f59a>このため、スイッチは同時に多数の通信を処理でき、大規模ネットワークにも対応可能です。</li><li data-v-dce9f59a>今日では、スイッチはハブやブリッジを完全に置き換え、Ethernet LANの標準装置となっています。</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> Bridge vs. Switch – Unterschiede und Gemeinsamkeiten im Verhalten und in der Funktion </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> ブリッジとスイッチの違いと共通点 – 学習方式・テーブル管理・通信特性の比較 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a>Sowohl Bridges als auch Switches arbeiten auf Layer 2 und verwenden MAC-Adress-Tabellen zur gezielten Weiterleitung von Frames.</li><li data-v-dce9f59a>Beide lernen MAC-Adressen dynamisch, indem sie eingehende Frames analysieren – der Lernmechanismus ist grundsätzlich gleich.</li><li data-v-dce9f59a>Bridges speichern diese Informationen meist <span style="color:red;" data-v-dce9f59a>in Software</span>, während Switches spezialisierte <strong style="color:red;" data-v-dce9f59a>Hardware (ASICs)</strong> nutzen, was sie viel schneller macht.</li><li data-v-dce9f59a>Ein wesentlicher Unterschied: Bridges arbeiten in der Regel <strong data-v-dce9f59a>halbduplex</strong> und verarbeiten nur eine Übertragung gleichzeitig.</li><li data-v-dce9f59a>Switches unterstützen <strong data-v-dce9f59a>Vollduplex</strong> auf jedem Port, sodass gleichzeitiges Senden und Empfangen ohne Kollision möglich ist.</li><li data-v-dce9f59a>Switches besitzen oft mehr Ports (multiport-fähig), während <span style="color:red;" data-v-dce9f59a>Bridges typischerweise zwei oder wenige Schnittstellen</span> haben.</li><li data-v-dce9f59a>Durch die vollduplexfähige Architektur entstehen bei Switches keine Kollisionen mehr – im Gegensatz zu manchen Bridge-Szenarien.</li><li data-v-dce9f59a>Zusammenfassend: Die Logik ist ähnlich, aber die Leistungsfähigkeit, Parallelität und Medienzugriffssteuerung sind beim Switch deutlich weiterentwickelt.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a>ブリッジとスイッチはどちらもOSI参照モデルの<strong data-v-dce9f59a>データリンク層（Layer 2）</strong>で動作し、MACアドレスに基づいてフレームを転送します。</li><li data-v-dce9f59a>両者とも、受信したフレームの送信元MACアドレスを学習し、<strong data-v-dce9f59a>MACアドレステーブル</strong>を動的に構築します。学習方式そのものはほぼ共通です。</li><li data-v-dce9f59a>ただし、ブリッジは<span style="color:red;" data-v-dce9f59a>ソフトウェア処理が主流</span>であり、<span style="color:red;" data-v-dce9f59a>スイッチは専用ハードウェア（ASIC）</span>による高速処理を行います。</li><li data-v-dce9f59a>通信モードにも差があり、ブリッジは基本的に<strong data-v-dce9f59a>半二重通信</strong>で動作するのに対し、スイッチは<strong data-v-dce9f59a>フルデュプレックス</strong>での同時送受信が可能です。</li><li data-v-dce9f59a>そのため、スイッチでは衝突（コリジョン）が原理的に発生せず、ネットワークの効率が大きく向上しています。</li><li data-v-dce9f59a>さらに、<span style="color:red;" data-v-dce9f59a>ブリッジは2〜数ポートの構成</span>が多いのに対し、スイッチは<span style="color:red;" data-v-dce9f59a>数十ポート</span>を持ち、大規模なネットワークを扱えるよう設計されています。</li><li data-v-dce9f59a>両者は動作原理は似ていても、<strong data-v-dce9f59a>性能・スケーラビリティ・衝突制御</strong>の面で大きな違いがあります。</li><li data-v-dce9f59a>結果として、スイッチはブリッジの発展形として、現代のネットワークインフラにおいて標準的な役割を担っています。</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> Gibt es bei Bridges Kollisionen? – Funktionsweise und Einschränkungen klassischer Bridges </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> ブリッジでは衝突は起きるのか？ – クラシックなブリッジの動作と限界 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a>Ja, bei klassischen Bridges können <strong data-v-dce9f59a>Kollisionen</strong> innerhalb eines einzelnen Segments auftreten.</li><li data-v-dce9f59a>Eine Bridge trennt zwar <strong data-v-dce9f59a>Kollisiondomänen</strong> – jedes Segment ist eigenständig –, doch innerhalb eines Segments teilen sich die Geräte das Medium.</li><li data-v-dce9f59a>Wenn zwei Hosts im selben Segment gleichzeitig senden, kommt es zu einer Kollision.</li><li data-v-dce9f59a>Bridges verhindern also keine Kollisionen innerhalb eines Segments, sondern nur zwischen den Segmenten.</li><li data-v-dce9f59a>Außerdem unterstützen viele klassische Bridges nur <strong data-v-dce9f59a>halbduplex</strong>, was die Kollisionen durch geteilte Leitung begünstigt.</li><li data-v-dce9f59a>Im Gegensatz dazu erlauben moderne Switches <strong data-v-dce9f59a>Vollduplex</strong> pro Port – damit sind Kollisionen vollständig ausgeschlossen.</li><li data-v-dce9f59a>Fazit: Bridges reduzieren, aber beseitigen Kollisionen nicht vollständig – Switches hingegen schon.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a>はい、<strong data-v-dce9f59a>従来型のブリッジ</strong>では、接続された各セグメント内で<strong data-v-dce9f59a>衝突（コリジョン）</strong>が発生する可能性があります。</li><li data-v-dce9f59a>ブリッジは衝突ドメインを分割しますが、<strong data-v-dce9f59a>1つのセグメント内は依然として共有媒体</strong>であり、複数のホストが同時に送信すると衝突が起きます。</li><li data-v-dce9f59a>つまり、ブリッジは<strong data-v-dce9f59a>セグメント間の衝突は防げる</strong>が、<strong data-v-dce9f59a>セグメント内の衝突は防げない</strong>という制約があります。</li><li data-v-dce9f59a>加えて、ブリッジは多くの場合<strong data-v-dce9f59a>半二重通信</strong>にとどまるため、送信と受信を同時に行えず、衝突の可能性が残ります。</li><li data-v-dce9f59a>これに対し、<strong data-v-dce9f59a>スイッチ</strong>は各ポートが独立した通信路であり、<strong data-v-dce9f59a>フルデュプレックス通信</strong>に対応しているため、衝突は発生しません。</li><li data-v-dce9f59a>したがって、ブリッジはネットワーク効率を改善する装置ではありますが、<strong data-v-dce9f59a>完全なコリジョン排除はできない</strong>点が注意すべき特徴です。</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> MAC-Lernen und Filterung – gezielte Kommunikation statt Broadcast </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> MACアドレス学習とフィルタリング – ブロードキャストの削減と効率的な通信 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a>Switches und Bridges verfügen über sogenannte Lernfunktionen, um MAC-Adressen automatisch zu erkennen.</li><li data-v-dce9f59a>Wenn ein Frame empfangen wird, merkt sich das Gerät die Quell-MAC-Adresse und den zugehörigen Port in einer Tabelle.</li><li data-v-dce9f59a>So kann es zukünftige Frames mit derselben Zieladresse gezielt an diesen Port weiterleiten.</li><li data-v-dce9f59a>Dieses Verhalten wird als <strong data-v-dce9f59a>Filterung</strong> bezeichnet und reduziert unnötigen Verkehr auf anderen Ports.</li><li data-v-dce9f59a>Unicast-Frames werden also nur an den gewünschten Empfänger gesendet – das spart Bandbreite und erhöht die Effizienz.</li><li data-v-dce9f59a>Nur wenn eine Zieladresse unbekannt ist, wird ein Broadcast an alle Ports gesendet (Flooding).</li><li data-v-dce9f59a>Durch kontinuierliches Lernen und Aktualisieren der MAC-Tabelle passt sich das Gerät dynamisch an Netzveränderungen an.</li><li data-v-dce9f59a>Diese Lernfähigkeit ist ein zentrales Merkmal von Layer-2-Switches und lernenden Bridges.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a>スイッチやブリッジは<strong data-v-dce9f59a>MACアドレス学習機能</strong>を持ち、受信したフレームの送信元MACアドレスとポートを記録します。</li><li data-v-dce9f59a>これにより、次に同じ宛先へのフレームが来たときに、そのポートにのみフレームを送ることができます。</li><li data-v-dce9f59a>このような仕組みを<strong data-v-dce9f59a>フィルタリング</strong>と呼び、全体への無駄な転送を避けることができます。</li><li data-v-dce9f59a>ユニキャスト通信は宛先ホストにのみ届くため、ネットワークの帯域が有効活用され、通信効率が向上します。</li><li data-v-dce9f59a>一方で、宛先MACがまだ登録されていない場合は、<strong data-v-dce9f59a>フラッディング（全ポート送信）</strong>が行われます。</li><li data-v-dce9f59a>MACテーブルは動的に更新され、ネットワークの構成変更にも柔軟に対応可能です。</li><li data-v-dce9f59a>このMAC学習とフィルタリングの仕組みは、スイッチや学習型ブリッジの基本的な機能の一つです。</li></ul></div></div><div class="border rounded p-3 bg-light mb-4" data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>Thema:</strong><br data-v-dce9f59a> Spanning Tree Protocol – Schleifenvermeidung in redundanten Netzen </p><hr data-v-dce9f59a><p data-v-dce9f59a><strong data-v-dce9f59a>テーマ:</strong><br data-v-dce9f59a> スパニングツリープロトコル – 冗長構成におけるループ防止 </p></div><div class="row mb-4" data-v-dce9f59a><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>Antwort (Deutsch)</h5><ul data-v-dce9f59a><li data-v-dce9f59a><span style="color:red;" data-v-dce9f59a>In Netzen mit redundanten Verbindungen</span> kann es zu Layer-2-Schleifen kommen, wenn mehrere Switches miteinander verbunden sind.</li><li data-v-dce9f59a>Solche Loops führen dazu, dass Broadcast-Frames unendlich im Netzwerk zirkulieren – man spricht von einem <strong data-v-dce9f59a>Broadcast-Sturm</strong>.</li><li data-v-dce9f59a><span style="color:red;" data-v-dce9f59a>Da Layer 2 keine TTL (Time to Live) wie IP hat</span>, werden die Frames niemals automatisch verworfen.</li><li data-v-dce9f59a>Das <strong data-v-dce9f59a>Spanning Tree Protocol (STP)</strong> analysiert die Netzstruktur und <span style="color:red;" data-v-dce9f59a>berechnet einen Schleifen-freien Baum (Spanning Tree)</span>.</li><li data-v-dce9f59a><span style="color:red;" data-v-dce9f59a>STP deaktiviert bestimmte Ports (Blocking-Status)</span>, anstatt physikalische Verbindungen vollständig zu trennen.</li><li style="color:red;" data-v-dce9f59a>Dadurch bleiben die physischen Leitungen erhalten, aber logische Schleifen werden vermieden.</li><li style="color:red;" data-v-dce9f59a>Wenn eine aktive Verbindung ausfällt, kann STP automatisch einen zuvor blockierten Pfad reaktivieren – Redundanz bleibt erhalten.</li><li data-v-dce9f59a>STP wurde standardisiert als IEEE 802.1D und ist ein wesentlicher Bestandteil für stabile Switch-Netzwerke.</li><li data-v-dce9f59a>Moderne Varianten wie RSTP (Rapid STP) bieten kürzere Umschaltzeiten für schnellere Reaktionen im Fehlerfall.</li></ul></div><div class="col-md-6" data-v-dce9f59a><h5 data-v-dce9f59a>解答（日本語）</h5><ul data-v-dce9f59a><li data-v-dce9f59a><span style="color:red;" data-v-dce9f59a>複数のスイッチを冗長的に接続したネットワーク</span>では、<strong data-v-dce9f59a>ループ</strong>（循環経路）が生じる可能性があります。</li><li data-v-dce9f59a>ループがあると、ブロードキャストフレームがネットワーク内を無限に回り続ける<strong data-v-dce9f59a>ブロードキャストストーム</strong>が発生し、通信障害を引き起こします。</li><li data-v-dce9f59a><span style="color:red;" data-v-dce9f59a>レイヤ2にはTTL（Time to Live）のような自動消滅機能がない</span>ため、フレームが永遠に循環し続けることになります。</li><li data-v-dce9f59a><strong data-v-dce9f59a>スパニングツリープロトコル（STP）</strong>は、ネットワーク全体を分析して、<span style="color:red;" data-v-dce9f59a>ループのない論理的なツリー構造（Spanning Tree）を作成</span>します。</li><li data-v-dce9f59a>STPは、ループを完全に物理的に切断するのではなく、<span style="color:red;" data-v-dce9f59a>特定のポートを「一時的に無効（ブロッキング）」にします</span>。</li><li data-v-dce9f59a>これにより、<span style="color:red;" data-v-dce9f59a>ケーブルなどの物理的接続はそのまま残しつつ、ループのない論理構造を保つ</span>ことができます。</li><li style="color:red;" data-v-dce9f59a>もしアクティブな経路に障害が発生した場合、ブロッキングされていたポートが自動的にアクティブ化され、冗長性を維持できます。</li><li data-v-dce9f59a>STPはIEEE 802.1Dとして標準化され、安定したスイッチネットワーク構築に不可欠なプロトコルです。</li><li data-v-dce9f59a>また、<strong data-v-dce9f59a>RSTP（Rapid STP）</strong>のような高速版では、より迅速な切替が可能となっています。</li></ul></div></div>',15)])))}},r=d(1241);const s=(0,r.A)(i,[["__scopeId","data-v-dce9f59a"]]);var l=s}}]);
//# sourceMappingURL=2190.cc8e5d99.js.map