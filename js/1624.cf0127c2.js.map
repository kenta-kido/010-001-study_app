{"version":3,"file":"js/1624.cf0127c2.js","mappings":"sWACEA,EAAAA,EAAAA,IA8OM,MA9ONC,EA8OM,C,6uJA9DRC,EAAAA,EAAAA,IAYM,MAZNC,EAYM,EAXJD,EAAAA,EAAAA,IAIE,OAHCE,KAAKC,EAAAA,EAAAA,IAAAC,GACNC,IAAI,mCACJC,MAAM,4B,uBAERN,EAAAA,EAAAA,IAEI,KAFDM,MAAM,mBAAiB,EACxBN,EAAAA,EAAAA,IAA8B,cAAtB,kB,QAAsB,gH,iBAEhCA,EAAAA,EAAAA,IAEI,KAFDM,MAAM,cAAa,gDAEtB,M,kwDCzLF,MAAMC,EAAc,EAEpB,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_100.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_100.vue?cd9b"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h2 class=\"mb-4\">10 TCP BBR – Überblick und Grundlagen / TCP BBR の概要と基礎</h2>\r\n\r\n    <!-- BBR概要 -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h4>BBR – Übersicht (Deutsch)</h4>\r\n        <ul>\r\n          <li><strong>BBR</strong> steht für <em>Bottleneck Bandwidth and Round-trip propagation time</em> und ist ein moderner TCP-Staukontrollalgorithmus, entwickelt von Google.</li>\r\n          <li>Klassische Algorithmen wie TCP Reno oder CUBIC reagieren auf Paketverluste. BBR hingegen <span style=\"color: red;\">schätzt Bandbreite und Latenz, um Überlastung proaktiv zu vermeiden.</span></li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h4>BBRの概要（日本語）</h4>\r\n        <ul>\r\n          <li><strong>BBR</strong>（<span style=\"color: red;\">Bottleneck Bandwidth and Round-trip propagation time</span>）は、Google が開発したTCPの新しい輻輳制御アルゴリズムです。</li>\r\n          <li>従来のRenoやCUBICがパケット損失に基づく制御を行うのに対し、<span style=\"color: red;\">BBRは「帯域幅」と「遅延」の推定に基づき</span>、<strong style=\"color: red;\">損失の前に輻輳を回避</strong>するよう設計されています。</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 背景と問題 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>🚩 Motivation und Probleme klassischer Algorithmen</h5>\r\n        <ul>\r\n          <li>Verlustbasierte Kontrolle (z.B. CUBIC) führt oft zu <strong>Bufferbloat</strong>: volle Puffer → hohe RTT</li>\r\n          <li>BBR adressiert dies durch direkte Kontrolle der Auslastung, nicht durch Verlust</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>🚩 背景と問題点</h5>\r\n        <ul>\r\n          <li>CUBICなど損失ベースの制御では、ルータのバッファが溢れて<strong>Bufferbloat</strong>が発生し、RTTが大きくなります。</li>\r\n          <li>BBRはこの問題を、パケット損失ではなくネットワーク利用率と遅延の観測を通して解決しようとします。</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 用語 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>📌 Grundbegriffe (Folie 40)</h5>\r\n        <ul>\r\n          <li><strong>BtlBw:</strong> Bottleneck Bandwidth – maximale Rate am Engpass</li>\r\n          <li><strong>RT<sub>prop</sub>:</strong> <span style=\"color: red;\">minimale RTT (nur Übertragungszeit)</span></li>\r\n          <li><strong>BDP:</strong> = BtlBw × RT<sub>prop</sub>: <span style=\"color: red;\">Datenmenge, die sich gleichzeitig im Netzwerk befinden kann</span></li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>📌 用語（スライド40）</h5>\r\n        <ul>\r\n          <li><strong>BtlBw：</strong> ボトルネック帯域幅 – 最も細いリンクの最大送信能力</li>\r\n          <li><strong>RT<sub>prop</sub>：</strong> 伝搬遅延のみを含む最小RTT</li>\r\n          <li><strong>BDP：</strong> = BtlBw × RT<sub>prop</sub>：ネットワーク内で滞留可能なデータ量</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Kleinrock理論 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>📊 Theorie: Kleinrock (Folie 41–42)</h5>\r\n        <ul>\r\n          <li>Kleinrock zeigte: BDP ist optimal für maximalen Durchsatz bei minimaler Verzögerung</li>\r\n          <li>Jaffe: Algorithmen können diesen Punkt nicht exakt erreichen → Ursachen für hohe RTT sind uneindeutig</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>📊 Kleinrock の理論（スライド41–42）</h5>\r\n        <ul>\r\n          <li>Kleinrock によれば、BDP は「最大スループット・最小遅延」を両立する最適な動作点</li>\r\n          <li>しかし Jaffe は、RTT増加の原因が多様で曖昧なため、その点に収束するアルゴリズムは作れないと示しました</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- BBRの状態 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>⚙️ Steuerung durch Zustände (Folie 48–50)</h5>\r\n        <ul>\r\n          <li><strong>Startup:</strong> schätzt Bandbreite durch schnelles Senden</li>\r\n          <li><strong>Drain:</strong> reduziert Rate, leert Puffer</li>\r\n          <li><strong>ProbeBW:</strong> variiert Rate zur BtlBw-Schätzung</li>\r\n          <li><strong>ProbeRTT:</strong> minimales Senden zur RT<sub>prop</sub>-Aktualisierung</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>⚙️ BBRの4つの状態（スライド48–50）</h5>\r\n        <ul>\r\n          <li><strong>Startup：</strong> 急速に送信量を増やし、帯域推定</li>\r\n          <li><strong>Drain：</strong> バッファを解放</li>\r\n          <li><strong>ProbeBW：</strong> スループットを変化させてBtlBw推定</li>\r\n          <li><strong>ProbeRTT：</strong> RTT再計測のため一時的に送信を抑制</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 動的適応 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>📉 Dynamisches Verhalten (Folie 45–47)</h5>\r\n        <ul>\r\n          <li>BBR misst BtlBw und RT<sub>prop</sub> getrennt – nicht gleichzeitig</li>\r\n          <li>→ Wechselt periodisch zwischen ProbeRTT und ProbeBW</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>📉 動的挙動（スライド45–47）</h5>\r\n        <ul>\r\n          <li>BBRはRT<sub>prop</sub>とBtlBwを<strong>同時には測れない</strong></li>\r\n          <li>そのため、ProbeRTTとProbeBWのフェーズを交互に切り替えながら推定します</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 比較 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>📈 Vergleich zu CUBIC (Folie 51–52)</h5>\r\n        <ul>\r\n          <li>BBR bleibt stabil bei Paketverlust</li>\r\n          <li>Verursacht deutlich geringere RTT</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>📈 CUBICとの比較（スライド51–52）</h5>\r\n        <ul>\r\n          <li>BBRはパケット損失の影響を受けず安定</li>\r\n          <li>RTTが小さく保たれる（キュー発生を防ぐため）</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Fairnessと進化 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>⚖️ Fairness & Entwicklung (Folie 39, 53)</h5>\r\n        <ul>\r\n          <li>BBR v2: ECN-Unterstützung</li>\r\n          <li>BBR v3: nutzt maschinelles Lernen</li>\r\n          <li>Neue Flows können sich schnell fair einpendeln</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>⚖️ フェアネスと進化（スライド39, 53）</h5>\r\n        <ul>\r\n          <li>BBR v2：ECN（明示的輻輳通知）に対応</li>\r\n          <li>BBR v3：機械学習による動的適応</li>\r\n          <li>新しいフローも短時間で公平な帯域を得られる</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- まとめ -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>✅ Zusammenfassung (Folie 54)</h5>\r\n        <ul>\r\n          <li>Reagiert auf Überlast – nicht auf Verluste</li>\r\n          <li>Hoher Durchsatz und niedrige RTT</li>\r\n          <li>Vermeidet Bufferbloat</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <h5>✅ まとめ（スライド54）</h5>\r\n        <ul>\r\n          <li>損失ではなく「負荷」に基づく制御</li>\r\n          <li>高スループット・低遅延を両立</li>\r\n          <li>Bufferbloatを根本的に防止</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<div class=\"text-center my-4\">\r\n  <img\r\n    :src=\"imgUrl1005\"\r\n    alt=\"BBR reacting to changes in BtlBw\"\r\n    class=\"img-fluid rounded border\"\r\n  />\r\n  <p class=\"text-muted mt-2\">\r\n    <strong>Figure 1005 –</strong> Dynamische Anpassung von BBR bei Verdopplung (links) bzw. Halbierung (rechts) der verfügbaren Bandbreite\r\n  </p>\r\n  <p class=\"text-muted\">\r\n    図1005 – 利用可能帯域幅が倍増（左）または半減（右）したときのBBRの適応挙動\r\n  </p>\r\n</div>\r\n<div class=\"row mt-5\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Vertiefende Erklärung – BBR passt sich dynamisch an</h5>\r\n\r\n    <p>\r\n      Diese zwei Diagramme zeigen, wie <strong>BBR auf Änderungen der Bottleneck-Bandwidth (BtlBw)</strong> reagiert:\r\n    </p>\r\n\r\n    <ul>\r\n      <li>\r\n        <strong>Links:</strong> Die verfügbare BtlBw verdoppelt sich von 10 Mbps auf 20 Mbps. BBR erkennt dies innerhalb von drei ProbeBW-Zyklen und erhöht sukzessive die inflight-Menge. Die RTT bleibt zunächst stabil, bis die Puffer wieder gefüllt werden.\r\n      </li>\r\n      <li>\r\n        <strong>Rechts:</strong> Die BtlBw halbiert sich plötzlich von 20 Mbps auf 10 Mbps. BBR erkennt dies durch steigende RTT und begrenzt inflight-Daten durch Timeout. Die Sende­rate wird entsprechend reduziert, bis ein neues Gleichgewicht entsteht.\r\n      </li>\r\n    </ul>\r\n\r\n    <p>\r\n      BBR <strong>passt sich nicht sofort</strong> an, sondern beobachtet delivery rate und RTT über mehrere Zyklen, um <em>Trend statt Ausreißer</em> zu erkennen.\r\n    </p>\r\n\r\n    <p><strong>Fazit:</strong> BBR ist in der Lage, auf abrupte Veränderungen der Netzwerkbedingungen <strong>reaktiv und stabil</strong> zu reagieren, ohne auf Paketverluste zu warten.</p>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>詳細な解説 – BBRの動的適応</h5>\r\n\r\n    <p>\r\n      この2つのグラフは、<strong>BBRがボトルネック帯域幅（BtlBw）の変化にどのように適応するか</strong>を示しています：\r\n    </p>\r\n\r\n    <ul>\r\n      <li>\r\n        <strong>左図：</strong> BtlBw が10 Mbpsから20 Mbpsに<strong>倍増</strong>した例。BBRはこれを約3サイクルのProbeBWを通じて徐々に検出し、送信中のデータ量（inflight）を増加させていきます。RTTは初期には安定していますが、バッファが再度埋まると少しずつ上昇します。\r\n      </li>\r\n      <li>\r\n        <strong>右図：</strong> BtlBw が20 Mbpsから10 Mbpsに<strong>半減</strong>した例。BBRはRTTの急上昇やtimeoutを通じて過去の推定値が過大であったことに気づき、送信レートを低下させて適正なinflight量に収束させていきます。\r\n      </li>\r\n    </ul>\r\n\r\n    <p>\r\n      BBR はこうした変化に<strong>即座には反応せず</strong>、複数回の観測を通じて変化が一時的なものか恒常的なものかを見極めます。\r\n    </p>\r\n\r\n    <p><strong>結論：</strong> BBRは、ネットワーク状況の変動に対して、パケット損失を待たずに<strong>安定かつ柔軟に適応</strong>できる設計になっています。</p>\r\n  </div>\r\n</div>\r\n\r\n\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport imgUrl1005 from '@/assets/lecture/lecture03/Figure_1005.png';\r\n</script>\r\n\r\n","import script from \"./chapter15_100.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_100.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","_unref","imgUrl1005","alt","class","__exports__"],"sourceRoot":""}