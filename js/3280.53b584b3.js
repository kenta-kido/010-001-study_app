"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[3280],{2473:function(e,n,r){r.r(n),r.d(n,{default:function(){return b}});var t=r(6768),l=r(144),i=r.p+"img/Figure_0301.fed6b97e.png",s=r.p+"img/Figure_0302.425efd86.png";const u={class:"container my-4"},a={class:"text-center mb-4"},d=["src"],k={class:"text-center mb-4"},c=["src"];var g={__name:"chapter15_32",setup(e){return(e,n)=>((0,t.uX)(),(0,t.CE)("div",u,[n[2]||(n[2]=(0,t.Lk)("h3",{class:"mb-4"},"3(b) Dijkstra – Vollständige Berechnung",-1)),n[3]||(n[3]=(0,t.Lk)("div",{class:"border rounded p-3 bg-light mb-4"},[(0,t.Lk)("p",null,[(0,t.Lk)("strong",null,"Aufgabe:"),(0,t.Lk)("br"),(0,t.eW)(" Berechnen Sie den vollständigen Dijkstra-Algorithmus basierend auf dem gegebenen Netzwerkgraphen (Abbildung 5.3). ")]),(0,t.Lk)("hr"),(0,t.Lk)("p",null,[(0,t.Lk)("strong",null,"問題:"),(0,t.Lk)("br"),(0,t.eW)(" 与えられたネットワークグラフ（図 5.3）に基づいて、Dijkstra アルゴリズムの完全な計算を行いなさい。 ")])],-1)),(0,t.Lk)("div",a,[(0,t.Lk)("img",{src:(0,l.R1)(i),alt:"Abbildung 5.3 – Netzwerkgraph",class:"img-fluid rounded border"},null,8,d),n[0]||(n[0]=(0,t.Lk)("p",{class:"text-muted mt-2"},"図 5.3 – コンピュータネットワークの抽象グラフ",-1))]),(0,t.Lk)("div",k,[(0,t.Lk)("img",{src:(0,l.R1)(s),alt:"Tabelle 5.1 – Dijkstra-Berechnung",class:"img-fluid rounded border"},null,8,c),n[1]||(n[1]=(0,t.Lk)("p",{class:"text-muted mt-2"},"表 5.1 – Dijkstra アルゴリズムの実行過程",-1))]),n[4]||(n[4]=(0,t.Lk)("div",{class:"row"},[(0,t.Lk)("div",{class:"col-md-6"},[(0,t.Lk)("h5",null,"Erklärung (Deutsch)"),(0,t.Lk)("p",null," Die Tabelle zeigt, wie der Algorithmus Schritt für Schritt die kürzesten Pfade von Knoten u zu allen anderen Knoten bestimmt. In jedem Schritt wird der Knoten mit der kleinsten bekannten Distanz zu u in die Menge N′ aufgenommen. "),(0,t.Lk)("p",null," Anschließend werden die Distanzen aller benachbarten Knoten aktualisiert, sofern ein kürzerer Pfad über den neuen Knoten gefunden wurde. Die Spalten zeigen die aktuellen minimalen Distanzen D und die zugehörigen Vorgänger p. ")]),(0,t.Lk)("div",{class:"col-md-6"},[(0,t.Lk)("h5",null,"解説（日本語）"),(0,t.Lk)("p",null," この表は、ノード u を出発点としたときの他のすべてのノードへの最短パスを求める Dijkstra アルゴリズムの手順を示しています。 各ステップでは、現時点で最小距離が確定しているノードを N′ に追加します。 "),(0,t.Lk)("p",null," その後、新たに追加されたノードの隣接ノードに対し、「現在の距離」と「経由時の距離」を比較し、必要に応じて更新します。 表の各列には、目的ノードまでの最短距離 D と、そのノードに至るための前のノード p が表示されています。 ")])],-1))]))}},o=r(1241);const m=(0,o.A)(g,[["__scopeId","data-v-e69ee2fa"]]);var b=m}}]);
//# sourceMappingURL=3280.53b584b3.js.map