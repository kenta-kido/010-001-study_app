"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[7378],{7378:function(e,a,t){t.r(a),t.d(a,{default:function(){return v}});var n=t(6768);const d={class:"container my-4"};var r={__name:"chapter15_91",setup(e){return(e,a)=>((0,n.uX)(),(0,n.CE)("div",d,a[0]||(a[0]=[(0,n.Fv)('<h3 class="mb-4" data-v-111e67f9>9(a) TCP CUBIC – Name, Motivation &amp; AIMD-Vergleich</h3><div class="border rounded p-3 bg-light mb-4" data-v-111e67f9><p data-v-111e67f9><strong data-v-111e67f9>Aufgabe (1):</strong><br data-v-111e67f9> Wofür steht der Name <strong data-v-111e67f9>CUBIC</strong> und was war die Motivation zur Entwicklung dieses Algorithmus, insbesondere im Vergleich zu TCP BIC? (1P) </p><hr data-v-111e67f9><p data-v-111e67f9><strong data-v-111e67f9>問題 (1):</strong><br data-v-111e67f9><strong data-v-111e67f9>CUBIC</strong> という名前の意味と、そのアルゴリズムの開発背景（目的）を説明せよ。 </p></div><div class="row" data-v-111e67f9><div class="col-md-6" data-v-111e67f9><h5 data-v-111e67f9>Antwort (Deutsch)</h5><p data-v-111e67f9> Der Name <strong data-v-111e67f9>CUBIC</strong> leitet sich <span style="color:red;" data-v-111e67f9>von der kubischen (t³-)Wachstumsfunktion</span> ab, die zur Steuerung der Congestion Window (cwnd) verwendet wird. </p><p data-v-111e67f9> Der Algorithmus wurde als Nachfolger von <strong data-v-111e67f9>TCP BIC</strong> (Binary Increase Congestion Control) entwickelt. BIC war zwar stabil in Netzwerken mit hoher Bandbreite und Latenz (LFNs), jedoch schwierig zu implementieren und bei geringer Bandbreite oder niedriger RTT zu aggressiv. </p><p data-v-111e67f9> CUBIC vereinfachte das Wachstumsverhalten durch eine kubische Zeitfunktion, was eine bessere Fairness und Stabilität bei gleichzeitig hoher Effizienz ermöglichte. Es wurde deshalb zum Standard in Linux, Windows und macOS. </p></div><div class="col-md-6" data-v-111e67f9><h5 data-v-111e67f9>解答（日本語）</h5><p data-v-111e67f9><strong data-v-111e67f9>CUBIC</strong> は、輻輳ウィンドウ（cwnd）の制御に t³ に基づく三次関数的な成長関数を用いることから名付けられました。 </p><p data-v-111e67f9> 本アルゴリズムは <strong data-v-111e67f9>TCP BIC</strong>（Binary Increase Congestion Control）の後継として開発されました。 BIC は高帯域・高遅延ネットワーク（Long Fat Networks）で高い安定性を示した一方、状態遷移が複雑で実装が難しく、 さらに低RTTや低帯域ではウィンドウ成長が過剰に攻撃的になるという課題がありました。 </p><p data-v-111e67f9> CUBIC はこれを改善し、時間に基づいたシンプルな三次成長関数で効率的かつ安定したウィンドウ制御を実現しました。 その結果、Linux、Windows、macOS の TCP 標準として広く採用されています。 </p></div></div><div class="border rounded p-3 bg-light mb-4" data-v-111e67f9><p data-v-111e67f9><strong data-v-111e67f9>Aufgabe (2):</strong><br data-v-111e67f9> Was verbessert CUBIC im Vergleich zum klassischen AIMD-Verfahren? (1P) </p><hr data-v-111e67f9><p data-v-111e67f9><strong data-v-111e67f9>問題 (2):</strong><br data-v-111e67f9> CUBIC が従来の AIMD 方式と比較してどのような改善をもたらすかを述べよ。（1点） </p></div><div class="row" data-v-111e67f9><div class="col-md-6" data-v-111e67f9><h5 data-v-111e67f9>Antwort (Deutsch)</h5><p data-v-111e67f9> Im Vergleich zum klassischen AIMD-Algorithmus, der eine lineare Erhöhung des cwnd verwendet, bietet CUBIC eine kubische Wachstumsfunktion, die eine schnellere Bandbreitenausnutzung erlaubt – besonders in Netzwerken mit hoher Latenz. </p><p data-v-111e67f9> Gleichzeitig verlangsamt sich das Wachstum in der Nähe des vorherigen Maximums (W<sub data-v-111e67f9>max</sub>), um Stabilität zu gewährleisten und abrupte Schwankungen zu vermeiden. </p></div><div class="col-md-6" data-v-111e67f9><h5 data-v-111e67f9>解答（日本語）</h5><p data-v-111e67f9> 従来の AIMD アルゴリズムは、ウィンドウサイズを線形に増加させる方式であるのに対し、 CUBIC は三次関数に基づいた成長モデルを用いることで、特に高遅延ネットワークにおいて より迅速に帯域を活用することが可能です。 </p><p data-v-111e67f9> また、過去の最大ウィンドウサイズ付近では成長を緩やかにし、安定性を保つ設計となっています。 </p></div></div>',5)])))}},s=t(1241);const i=(0,s.A)(r,[["__scopeId","data-v-111e67f9"]]);var v=i}}]);
//# sourceMappingURL=7378.8c84adff.js.map