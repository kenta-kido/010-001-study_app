"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[4381],{495:function(e,n,i){i.d(n,{A:function(){return N}});var t=i(6768),r=i(4232),a=i(144);const s={class:"card mb-4 shadow-sm"},d={class:"card-body"},l={class:"card-title"},o={class:"text-muted fst-italic"},u={key:0},g=["src"],h={key:1,class:"mt-3"},m={class:"alert alert-success"},c={key:0},k={key:1},w={class:"alert alert-info mt-2"},b={key:0},f={key:1},z={class:"mt-3"},P={key:0},p={key:1},S={key:2},v={key:3},I={key:4},D=["src"],T={class:"mt-4"},A={class:"border rounded p-3 bg-white text-secondary",style:{"white-space":"pre-wrap","font-family":"inherit"}};var C={__name:"QuestionItem",props:{question:Object},setup(e){const n=(0,a.KR)(!1);return(i,a)=>((0,t.uX)(),(0,t.CE)("div",s,[(0,t.Lk)("div",d,[(0,t.Lk)("h5",l,"Q"+(0,r.v_)(e.question.id)+": "+(0,r.v_)(e.question.questionJa),1),(0,t.Lk)("p",o,"("+(0,r.v_)(e.question.questionDe)+")",1),e.question.questionImage?((0,t.uX)(),(0,t.CE)("div",u,[(0,t.Lk)("img",{src:`./images/${e.question.questionImage}`,class:"img-fluid rounded my-2 border",alt:"question image"},null,8,g)])):(0,t.Q3)("",!0),(0,t.Lk)("button",{class:"btn btn-outline-primary mt-2",onClick:a[0]||(a[0]=e=>n.value=!n.value)},(0,r.v_)(n.value?"Hide Answer":"Check Answer"),1),n.value?((0,t.uX)(),(0,t.CE)("div",h,[(0,t.Lk)("div",m,[a[1]||(a[1]=(0,t.Lk)("strong",null,"Antwort (De):",-1)),a[2]||(a[2]=(0,t.Lk)("br",null,null,-1)),Array.isArray(e.question.answerDe)?((0,t.uX)(),(0,t.CE)("ul",c,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(e.question.answerDe,(e,n)=>((0,t.uX)(),(0,t.CE)("li",{key:n},(0,r.v_)(e),1))),128))])):((0,t.uX)(),(0,t.CE)("p",k,(0,r.v_)(e.question.answerDe),1))]),(0,t.Lk)("div",w,[a[3]||(a[3]=(0,t.Lk)("strong",null,"Übersetzung (Ja):",-1)),a[4]||(a[4]=(0,t.Lk)("br",null,null,-1)),Array.isArray(e.question.answerJa)?((0,t.uX)(),(0,t.CE)("ul",b,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(e.question.answerJa,(e,n)=>((0,t.uX)(),(0,t.CE)("li",{key:n},(0,r.v_)(e),1))),128))])):((0,t.uX)(),(0,t.CE)("p",f,(0,r.v_)(e.question.answerJa),1))]),(0,t.Lk)("div",z,[a[6]||(a[6]=(0,t.Lk)("p",{class:"fw-bold mb-1"},"Erklärung (De):",-1)),Array.isArray(e.question.explanationDe)?((0,t.uX)(),(0,t.CE)("div",P,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(e.question.explanationDe,(e,n)=>((0,t.uX)(),(0,t.CE)("p",{key:n},(0,r.v_)(e),1))),128))])):((0,t.uX)(),(0,t.CE)("p",p,(0,r.v_)(e.question.explanationDe),1)),a[7]||(a[7]=(0,t.Lk)("p",{class:"fw-bold mb-1"},"解説 (Ja):",-1)),Array.isArray(e.question.explanationJa)?((0,t.uX)(),(0,t.CE)("div",S,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(e.question.explanationJa,(e,n)=>((0,t.uX)(),(0,t.CE)("p",{key:n},(0,r.v_)(e),1))),128))])):((0,t.uX)(),(0,t.CE)("p",v,(0,r.v_)(e.question.explanationJa),1)),e.question.explanationImage?((0,t.uX)(),(0,t.CE)("div",I,[(0,t.Lk)("img",{src:`./images/${e.question.explanationImage}`,class:"img-fluid rounded my-2 border",alt:"explanation image"},null,8,D)])):(0,t.Q3)("",!0),(0,t.Lk)("div",T,[a[5]||(a[5]=(0,t.Lk)("p",{class:"fw-bold mb-1"},"原文（スライド抜粋）:",-1)),(0,t.Lk)("div",A,(0,r.v_)(e.question.originalSlideText),1)])])])):(0,t.Q3)("",!0)])]))}};const E=C;var N=E},4381:function(e,n,i){i.r(n),i.d(n,{default:function(){return b}});i(8111),i(116);var t=i(6768),r=i(4232),a=i(144),s=i(1387),d=i(495),l=i(3529),o=JSON.parse('[{"id":1,"questionDe":"(s5) Was ist ein Netzwerk und wozu dient es?","questionJa":"ネットワークとは何で、何のために使われるか？","answerDe":["Ein Netzwerk verbindet Computer verschiedener Hersteller und Architekturen.","Es kann sowohl lokale als auch entfernte Geräte verbinden.","Die Verbindung erfolgt durch Netzwerkequipment und -protokolle verschiedener Hersteller.","Ein Netzwerk ermöglicht beliebige Anwendungen zwischen den verbundenen Geräten."],"answerJa":["ネットワークは異なるメーカーやアーキテクチャのコンピュータを接続する。","近距離だけでなく遠隔地のコンピュータ同士も接続できる。","異なるメーカーのネットワーク機器やプロトコルを用いて接続される。","ネットワークにより、接続されたコンピュータ間であらゆるアプリケーションを利用できるようになる。"],"explanationDe":["Ein Netzwerk ist eine technische Infrastruktur, die es ermöglicht, mehrere Computer oder Geräte miteinander zu verbinden. Dabei spielt es keine Rolle, ob diese Geräte vom selben Hersteller stammen oder sich sogar in unterschiedlichen Ländern befinden.","Ein grundlegender Zweck eines Netzwerks ist es, Ressourcen wie Daten, Anwendungen oder Geräte gemeinsam zu nutzen. Beispielsweise kann ein Drucker über ein Heimnetzwerk von mehreren Computern verwendet werden.","Ein Netzwerk kann klein sein, wie ein Heimnetz mit einem Router und wenigen Geräten, oder riesig wie das globale Internet mit Millionen von Knoten.","Die Verbindung innerhalb eines Netzwerks wird durch spezielle Hardware (Router, Switches, Kabel) und Netzwerkprotokolle (wie TCP/IP) realisiert.","Netzwerke ermöglichen viele moderne Anwendungen wie E-Mail, Streaming, Cloud-Dienste oder Online-Spiele.","Ein wichtiges Merkmal ist die Interoperabilität: verschiedene Systeme und Softwarekomponenten können durch gemeinsame Standards miteinander kommunizieren.","Im Vergleich zu Einzelrechnern bieten Netzwerke höhere Effizienz, bessere Skalierbarkeit und ermöglichen neue Formen der Zusammenarbeit, etwa über Videokonferenzen oder geteilte Dokumente."],"explanationJa":["ネットワークとは、複数のコンピュータや機器を相互に接続し、情報やリソースを共有できるようにする技術的な仕組みです。接続される機器は、メーカーやシステムが異なっていても構いません。","ネットワークの基本的な目的は、データ、アプリケーション、周辺機器（例：プリンター）などのリソースを複数のユーザーやコンピュータ間で共有することです。","ネットワークには小規模な家庭内ネットワークから、世界中のコンピュータをつなぐインターネットのような大規模ネットワークまで様々な種類があります。","ネットワーク内の接続は、ルーター、スイッチ、LANケーブルなどのハードウェアと、TCP/IPなどのプロトコルによって実現されます。","ネットワークがあることで、Eメール、動画配信、クラウドストレージ、オンラインゲームなど、私たちが日常的に使うさまざまなサービスが可能になります。","また、異なるメーカーの機器や異なるソフトウェア間でも、共通のプロトコルがあれば通信可能であり、これを「相互運用性（インターオペラビリティ）」と言います。","単体のコンピュータでは実現できない効率的な作業や、リモート会議、共同編集など、ネットワークは現代の社会活動やビジネスに欠かせない基盤技術となっています。"],"originalSlideText":"Definition\\n❑ Netze verbinden\\n Computer verschiedenster Hersteller und Architekturen\\n❑ sowohl\\n in der Nähe als auch über große Distanzen\\n❑ mittels\\n Netzequipment und Netzwerkprotokollen unterschiedlicher Hersteller\\n❑ und ermöglichen beliebige Anwendungen","explanationImage":"","questionImage":""},{"id":2,"questionDe":"(s6) Welche Probleme traten in den 1970er Jahren bei Netzwerken auf?","questionJa":"1970年代におけるネットワークの課題は？","answerDe":["Viele Netze waren inkompatibel zueinander.","Netze waren oft abgeschlossen – sowohl in Hard- als auch Software.","Netze wurden getrennt von Telekommunikationsfirmen, Computerherstellern und Netzausrüstern betrieben.","Es bestand keinerlei Interoperabilität zwischen den Netzen."],"answerJa":["多くのネットワークは互換性がなかった。","ハードウェア・ソフトウェアの両面で閉じたネットワークが多かった。","ネットワークは通信会社、コンピュータメーカー、ネット機器メーカーがそれぞれ独自に運用していた。","ネットワーク同士の相互運用性（インターオペラビリティ）が全くなかった。"],"explanationDe":["In den 1970er Jahren entstanden viele Netzwerke unabhängig voneinander. Firmen wie IBM oder AT&T entwickelten jeweils eigene Technologien mit eigenen Protokollen, die nicht miteinander kompatibel waren.","Ein typisches Beispiel sind proprietäre Netzwerke: Diese funktionierten nur mit spezieller Hardware und Software eines Herstellers. Nutzer waren damit vollständig auf einen Anbieter angewiesen.","Es gab keine standardisierten Protokolle, wodurch der Austausch von Daten zwischen verschiedenen Netzwerken praktisch unmöglich war.","Diese sogenannten abgeschotteten Netze verhinderten jegliche Zusammenarbeit und behinderten den Fortschritt der Netzwerktechnologie.","Da jedes Unternehmen seine eigene Lösung propagierte, bestand keine Motivation zur Vereinheitlichung oder Öffnung der Systeme.","Im Gegensatz dazu stehen offene Netzwerke, bei denen unterschiedliche Systeme dank gemeinsamer Standards miteinander kommunizieren können.","Die fehlende Interoperabilität war daher eines der größten Hindernisse für die weltweite Vernetzung, wie sie später durch das Internet realisiert wurde."],"explanationJa":["1970年代には、各社が独自のネットワークを開発していたため、多くのネットワークが互いに接続できない「非互換」状態にありました。","例えば、IBMやAT&Tなどの企業は、それぞれ独自のハードウェアやソフトウェアに基づいた専用ネットワーク（プロプライエタリネットワーク）を構築していました。","その結果、あるネットワークで使えるソフトや機器が他のネットワークでは使えず、ユーザーは特定ベンダーにロックインされる状況が生まれていました。","こうした閉じたネットワーク同士ではデータのやり取りができず、相互運用性（インターオペラビリティ）が存在しませんでした。","これは新しいアプリケーションやサービスの登場を阻み、技術革新のスピードを遅らせる大きな障壁となっていました。","このような背景から、異なるシステム同士が共通の規格で通信できる「オープンネットワーク」への移行が求められるようになりました。","つまり、1970年代のネットワークは「つながらないこと」が最大の問題であり、それを解決するのが後のインターネット技術の大きな役割でした。"],"originalSlideText":"Aufbruchsstimmung\\n❑ Seit den 1970ern entwickelten sich viele Netze zunächst inkompatibel zueinander und entsprachen nicht dem gerade genannten Ideal\\n❑ Abgeschottete Netze (sowohl Hardware als Software) von\\n Telekommunikationsunternehmen\\n Computerherstellern\\n Netzwerkausrüstern\\n❑ Keinerlei Interoperabilität","explanationImage":"","questionImage":""},{"id":3,"questionDe":"(s7) Welche wichtigen Forschungsprojekte trugen zur Entwicklung offener Netzwerke bei?","questionJa":"オープンネットワークの発展に貢献した主な研究プロジェクトは？","answerDe":["Ethernet am Xerox Palo Alto Research Center","Token passing ring networks am MIT","ARPANET am Department of Defense"],"answerJa":["Xerox Palo Alto Research Center における Ethernet の開発","MIT におけるトークンパッシングリングネットワークの研究","米国国防総省（DoD）による ARPANET の構築"],"explanationDe":["In den 1980er Jahren entstanden mehrere Forschungsprojekte, die die Basis für moderne, offene Netzwerktechnologien bildeten.","Ein bekanntes Projekt war Ethernet, das im Xerox Palo Alto Research Center entwickelt wurde. Es handelte sich dabei um eine einfache, aber effektive Methode zur Datenübertragung in lokalen Netzwerken (LANs), die heute noch weit verbreitet ist.","Am Massachusetts Institute of Technology (MIT) wurde das Konzept der Token-Passing-Ringnetzwerke erforscht. Hierbei zirkulierte ein digitales \'Token\', das die Datenübertragung steuerte. Nur der Teilnehmer mit dem Token durfte senden – eine Methode zur Kollisionsvermeidung.","Das vielleicht bedeutendste Projekt war ARPANET, das vom US-Verteidigungsministerium (Department of Defense) initiiert wurde. Es war das erste funktionsfähige Paketvermittlungsnetz und ein direkter Vorläufer des Internets.","Im Gegensatz zu kommerziellen, proprietären Systemen wurden die Ergebnisse dieser Forschungsprojekte häufig veröffentlicht und als offene Standards weiterentwickelt.","Diese Offenheit förderte die Interoperabilität und den technologischen Austausch zwischen verschiedenen Institutionen.","Daher kann man sagen, dass diese Projekte den Weg zu heutigen globalen Netzwerken wie dem Internet entscheidend mitgestaltet haben."],"explanationJa":["1980年代には、現代のオープンネットワークの基盤を築いた複数の研究プロジェクトが立ち上がりました。","その一つが、Xerox Palo Alto Research Center（PARC）で開発された「Ethernet」です。これは、ローカルエリアネットワーク（LAN）内でのデータ通信に使われる技術で、現在でも最も広く使用されています。","また、マサチューセッツ工科大学（MIT）では「トークンパッシングリング」ネットワークの研究が進められました。これはネットワーク上でトークンと呼ばれるデータを順番に回し、持っているノードだけが送信できる仕組みで、通信の衝突（コリジョン）を防ぐ方式です。","さらに、米国国防総省（DoD）が主導した「ARPANET」は、初のパケット交換ネットワークであり、現在のインターネットの直接的な前身として知られています。","これらのプロジェクトは、商用ベンダーによる閉鎖的なシステムとは異なり、研究成果が公開され、オープンスタンダードとして発展しました。","このようなオープンな姿勢が、異なる組織間の相互接続や技術革新を促進しました。","したがって、これらの研究プロジェクトは、今日のグローバルなネットワーク、特にインターネットの礎を築いたといえます。"],"originalSlideText":"Forschungsprojekte\\n❑ Innerhalb der Forschungscommunity wurden diese abgeschotteten Netze abgelehnt\\n❑ Forschungsprojekte entstanden in den 1980ern :\\n Ethernet  am Xerox Palo Alto Research Center\\n Token passing ring networks am MIT \\n ARPANET am Department of Defense","explanationImage":"","questionImage":""},{"id":4,"questionDe":"(s8) Was sind offene Netzwerke und warum sind sie wichtig?","questionJa":"オープンネットワークとは何で、それがなぜ重要か？","answerDe":["Offene Netzwerke ermöglichen die Zusammenarbeit mehrerer Gruppen an einer Technologie.","Eine öffentlich zugängliche Spezifikation wird erstellt.","Produkte orientieren sich an dieser Spezifikation.","Offene Netzwerke sind notwendig für das globale Wachstum von Netzwerken.","Im Gegensatz dazu entwickelt bei geschlossenen Netzwerken jeder Hersteller eigene Technologien."],"answerJa":["オープンネットワークでは、複数のグループが協力して技術を開発する。","仕様書は誰でも自由にアクセスできるように公開される。","製品はその共通仕様に基づいて開発される。","ネットワークを世界規模に拡大するためにはオープンネットワークが不可欠である。","対照的に、クローズドネットワークでは各メーカーが独自技術を開発する。"],"explanationDe":["Offene Netzwerke sind Netzwerke, deren technische Spezifikationen öffentlich zugänglich und standardisiert sind. Jeder, unabhängig von Organisation oder Herkunft, kann diese Standards nutzen, um kompatible Produkte zu entwickeln.","Ein zentrales Merkmal offener Netzwerke ist die Zusammenarbeit: Verschiedene Organisationen und Firmen arbeiten gemeinsam an der Entwicklung von Technologien, anstatt abgeschottet eigene Systeme zu schaffen.","Dies führt zu sogenannten offenen Standards, wie zum Beispiel dem TCP/IP-Protokoll, das frei verfügbar ist und von jedem verwendet werden kann.","Dank dieser Offenheit wird Interoperabilität erreicht – Geräte unterschiedlicher Hersteller können miteinander kommunizieren, was die Nutzbarkeit erhöht und die Kosten senkt.","Ein gutes Beispiel ist das Internet: Es konnte sich nur global ausbreiten, weil alle Beteiligten sich an die gleichen Protokolle wie IP und TCP gehalten haben.","Im Gegensatz dazu verhindern geschlossene Netzwerke die Zusammenarbeit: Proprietäre Technologien sind oft inkompatibel mit anderen Systemen und machen Benutzer abhängig vom Hersteller.","Daher sind offene Netzwerke essenziell für technologische Weiterentwicklung, Innovationsfreiheit und den weltweiten Ausbau digitaler Infrastruktur."],"explanationJa":["オープンネットワークとは、技術仕様が公開されており、誰でもアクセス・使用・実装できるようになっているネットワークのことです。企業や研究機関に限らず、個人でもその仕様に基づいた製品開発が可能です。","このようなネットワークでは、多くの異なる組織が共同で技術の標準化や開発に関与し、独自路線ではなく共通の基盤を目指します。","その結果として、TCP/IPのような「オープンスタンダード（公開規格）」が誕生し、あらゆるメーカーがその仕様に従って互換性のある製品を作ることができます。","これにより異なる企業の機器同士でも通信が可能となり、ユーザーは特定ベンダーに縛られずに機器を選ぶ自由が得られます。","インターネットが世界中に広がった背景には、このようなオープンネットワークの存在が大きく関わっています。","一方で、クローズドネットワーク（閉鎖型ネットワーク）では、仕様が非公開で、他社製品との連携ができず、ユーザーが特定企業に依存しがちになります。","このように、オープンネットワークは技術革新を促進し、コスト削減と柔軟性向上を実現するための重要な基盤となっています。"],"originalSlideText":"Grundlagen des Wachstums\\n❑ Offene Netze sind für ein Wachstum eines Netzes auf Welt-umspannende Größe notwendig\\n❑ Offene Netze:\\n Mehrere Gruppen arbeiten zusammen an einer neuen Technologie\\n Es wird eine Spezifikation geschaffen; diese ist für jeden frei zugänglich\\n Produkte orientieren sich an dieser Spezifikation\\n❑ Im Gegensatz zu geschlossenen Netzen:\\n Jeder Hersteller entwickelt seine private Technologie","explanationImage":"","questionImage":""},{"id":5,"questionDe":"(s9) Welche Gremien spielen eine Rolle bei der Standardisierung von Netzwerken?","questionJa":"ネットワーク標準化に関わる主要な団体は？","answerDe":["IEEE (Institute of Electrical and Electronics Engineers)","IETF (Internet Engineering Task Force)","ITU (International Telecommunications Union)","ISO (International Organization for Standardization)","W3C (World Wide Web Consortium)"],"answerJa":["IEEE（米国電気電子技術者協会）","IETF（インターネット技術特別調査委員会）","ITU（国際電気通信連合）","ISO（国際標準化機構）","W3C（ワールド・ワイド・ウェブ・コンソーシアム）"],"explanationDe":["Die Standardisierung von Netzwerktechnologien erfolgt durch verschiedene internationale Organisationen, die jeweils unterschiedliche Aufgabenbereiche haben.","Das IEEE (Institute of Electrical and Electronics Engineers) ist verantwortlich für viele physikalische und datenvermittelnde Standards wie Ethernet (IEEE 802.3) und WLAN (IEEE 802.11).","Die IETF (Internet Engineering Task Force) entwickelt und dokumentiert Internetprotokolle wie TCP, IP und HTTP. Ihre Arbeitsweise ist offen und basiert auf Konsens.","Die ITU (International Telecommunication Union) ist eine UN-Organisation, die globale Standards für Telekommunikationsdienste und -infrastrukturen bereitstellt, darunter Mobilfunk und Satellitenkommunikation.","Die ISO (International Organization for Standardization) ist eine unabhängige, nichtstaatliche Organisation, die internationale Normen in vielen Bereichen veröffentlicht – auch in der Informationstechnologie, z. B. das OSI-Modell.","Das W3C (World Wide Web Consortium) koordiniert die Weiterentwicklung von Web-Technologien wie HTML, CSS und XML – also alles, was für das World Wide Web benötigt wird.","Diese Gremien arbeiten teilweise zusammen und stellen sicher, dass technische Komponenten weltweit miteinander funktionieren – ein Grundpfeiler für das globale Internet."],"explanationJa":["ネットワーク技術の標準化は、複数の国際的な機関によって行われており、それぞれ異なる領域を担当しています。","IEEE（米国電気電子技術者協会）は、物理層やデータリンク層の技術標準を策定する組織で、Ethernet（IEEE 802.3）や無線LAN（IEEE 802.11）などが代表例です。","IETF（インターネット技術特別調査委員会）は、TCP、IP、HTTPといったインターネットの中核をなすプロトコルの設計と文書化を行っており、誰でも参加可能なオープンな運営スタイルが特徴です。","ITU（国際電気通信連合）は国連傘下の機関で、電話、携帯、衛星通信などの国際的な通信規格を策定しています。","ISO（国際標準化機構）は、ITに限らずあらゆる分野の国際規格を策定する非政府組織で、OSI参照モデル（ネットワーク階層構造の7層モデル）などもここで策定されました。","W3C（ワールド・ワイド・ウェブ・コンソーシアム）は、HTMLやCSSなど、Webのための標準技術を定める団体で、WebブラウザやWebアプリ開発に不可欠な規格を管理しています。","これらの標準化団体が連携し、異なる企業や国の製品やサービスが相互に動作するための基盤を提供しているため、私たちは世界中で安定したインターネット環境を享受できているのです。"],"originalSlideText":"Wichtige Gremien\\n❑ IEEE (Institute of Electrical and Electronics Engineers)\\n❑ IETF (Internet Engineering Task Force)\\n❑ ITU (International Telecommunications Union)\\n❑ ISO (International Organization for Standardization)\\n❑ W3C (World Wide Web Consortium)\\n❑ …","explanationImage":"","questionImage":""},{"id":6,"questionDe":"(s10) Warum gelten Rechnernetze als komplex für Einsteiger?","questionJa":"なぜ初心者にとってネットワークは複雑に感じられるのか？","answerDe":["Rechnernetze wirken anfangs einschüchternd und komplex.","Es existieren viele Spezifikationen, Standards und Technologien.","Technologien entwickeln sich ständig weiter.","Viele Technologien lassen sich miteinander kombinieren und nutzen.","Es gibt keine allumfassende Theorie zum Bau und Betrieb von Netzwerken."],"answerJa":["ネットワークは初学者にとって威圧的で複雑に見える。","多数の仕様、標準、技術が存在している。","技術が常に進化し続けている。","多くの技術が相互に組み合わせて使えるようになっている。","ネットワークの構築と運用に関する包括的な理論が存在しない。"],"explanationDe":["Einsteiger empfinden Rechnernetze oft als komplex, weil sie mit einer Vielzahl an neuen Begriffen, Technologien und Abkürzungen konfrontiert werden.","Es gibt unzählige Protokolle wie TCP, IP, HTTP oder DNS, die alle unterschiedliche Aufgaben erfüllen und miteinander zusammenspielen müssen.","Hinzu kommt, dass Netzwerktechnologien nicht statisch sind – sie verändern sich laufend, etwa durch neue WLAN-Standards (z. B. Wi-Fi 6), Sicherheitsprotokolle oder Virtualisierungstechniken.","Ein weiteres Problem ist die hohe Anzahl an Spezifikationen, die sich häufig überschneiden oder konkurrieren – etwa verschiedene Routingprotokolle (OSPF, BGP, RIP) für unterschiedliche Einsatzgebiete.","Die Vielfalt der Technologien führt dazu, dass es viele mögliche Kombinationen und Architekturen gibt, deren Komplexität schwer zu durchschauen ist.","Zudem existiert keine einheitliche, universelle Theorie, die alle Aspekte des Netzwerks vollständig erklärt – stattdessen sind Kenntnisse aus Elektrotechnik, Informatik, Mathematik und Kommunikation notwendig.","Im Vergleich zu anderen Bereichen der Informatik wie Softwareentwicklung oder Datenbanken ist das Wissen über Netzwerke oft breiter gefächert und stärker verteilt – das kann den Einstieg erschweren, aber auch sehr spannend machen."],"explanationJa":["ネットワークは、初めて学ぶ人にとって非常に複雑に感じられる分野です。その理由の一つは、登場する技術用語やプロトコル、略語などが非常に多く、最初は圧倒されることです。","例えばTCP、IP、DNS、HTTPなど、多数の異なるプロトコルがそれぞれ異なる役割を持ち、互いに連携しながら動作します。","さらに、ネットワーク技術は日々進化しており、たとえばWi-Fi 6やVPN、クラウドネットワーク、ゼロトラストなど新たな概念や仕様が次々と登場しています。","技術が増えることで選択肢が多くなり、同じ目的を達成するにも複数の方法が存在するため、全体像を理解しにくくなります。","また、ネットワークに関する理論は一つにまとまっているわけではなく、電気・電子工学、情報科学、通信理論など様々な分野の知識が要求されます。","このように、多様で進化の速い領域であることが、初心者にとっての大きな壁となっています。","一方で、ネットワークは現代のインフラの要であり、これを学ぶことでインターネットの仕組みやセキュリティの基本も理解できるようになります。"],"originalSlideText":"Problem: Komplexität (1)\\n❑ Als Einsteiger wirken Rechnernetze zunächst einschüchternd und komplex\\n❑ Es existieren viele Spezifikationen / Standards / Technologien\\n❑ Die Technologien entwickeln sich laufend weiter\\n❑ Viele Technologien können miteinander verbunden und genutzt werden\\n❑ Keine alles umfassenden Theorien / Konzepte, die erklären wie Netze gebaut und verwaltet werden sollen","explanationImage":"","questionImage":""},{"id":7,"questionDe":"(s11–s13) In welchen fünf Wissensgebieten muss man sich auskennen, um Netzwerke vollständig zu verstehen?","questionJa":"ネットワークを理解するために必要な5つの知識分野は何か？","answerDe":["Netzwerkanwendungen und -programmierung:","– Entwicklung von robusten, fehlerfreien und korrekten Netzwerkanwendungen","Signalverarbeitung und Kommunikation:","– Verständnis des physikalischen Mediums, seiner Eigenschaften und Übertragungsverfahren","Packet Switching und Netztechnologien:","– Ersetzung fester Leitungen (wie im Telefonnetz) durch Paketvermittlung","– Nutzung eines geteilten Netzes","TCP/IP:","– Keine One-Fits-All Packet Switching Technologie","– TCP/IP als Konzept für das globale Internet","– Übergabe physikalischer Transportaufgaben an andere Protokolle (z.B. Ethernet)","– Übergabe von Routing an Protokolle wie OSPF, RIP, BGP","Allgemeine Netzwerkkonzepte und -technologien:","– Streaming von Sprache und Bild","– Netzwerk-Monitoring","– Software Defined Networking","– Weitere Technologien"],"answerJa":["ネットワークアプリケーションとそのプログラミング：","– 頑健でエラーのない正しいネットワークアプリケーションの開発","信号処理と通信：","– 物理媒体、その特性、およびデータ伝送方式の理解","パケット交換とネットワーク技術：","– 電話網のような専用線を、パケット交換で置き換える","– リソースを共有するネットワークの利用","TCP/IP：","– 汎用的なパケット交換技術は存在しない","– TCP/IPはグローバルなインターネットの概念を提供する","– 物理的な転送は他のプロトコル（例：Ethernet）に任せる","– ルーティングは他のプロトコル（例：OSPF、RIP、BGP）に任せる","一般的なネットワーク概念と技術：","– 音声や映像のストリーミング","– ネットワークモニタリング","– ソフトウェア定義ネットワーキング（SDN）","– その他の技術"],"explanationDe":["Für ein umfassendes Verständnis von Netzwerken reicht es nicht aus, nur ein einzelnes Fachgebiet zu kennen. Vielmehr muss man sich in fünf zentralen Bereichen auskennen, die im Zusammenspiel die gesamte Netzwerktechnik abdecken.","Der erste Bereich ist die Programmierung und Entwicklung von Netzwerkanwendungen. Anwendungen wie Webbrowser, Streamingdienste oder E-Mail-Clients müssen zuverlässig und korrekt über Netzwerke kommunizieren können.","Der zweite Bereich ist die Signalverarbeitung. Datenübertragung erfolgt über physikalische Medien wie Kupferleitungen, Glasfaser oder Funk – jedes Medium hat andere physikalische Eigenschaften und erfordert unterschiedliche Übertragungsverfahren.","Drittens muss man die Konzepte der Paketvermittlung (Packet Switching) verstehen. Im Gegensatz zu leitungsvermittelten Netzen wie dem klassischen Telefonnetz teilen sich viele Teilnehmer ein Netzwerk, indem Daten in kleine Pakete aufgeteilt und individuell weitergeleitet werden.","Der vierte Bereich ist TCP/IP – das Rückgrat des heutigen Internets. Es ersetzt nicht alle Aufgaben der Netzwerkkommunikation, sondern überlässt den physikalischen Transport anderen Protokollen (wie Ethernet) und das Routing spezialisierten Protokollen wie OSPF, RIP oder BGP.","Fünftens sind allgemeine Netzwerkkonzepte wichtig. Dazu gehören moderne Anwendungen wie Video-Streaming, das Überwachen und Analysieren von Netzwerken (Monitoring), sowie zukunftsweisende Technologien wie Software Defined Networking (SDN).","Diese fünf Bereiche bilden ein komplexes Geflecht an Wissen, das sowohl praktische Fertigkeiten als auch theoretische Grundlagen erfordert – eine Herausforderung, aber auch eine spannende Lernreise für jeden, der Netzwerke verstehen will."],"explanationJa":["ネットワークを深く理解するには、単一の分野だけでは不十分で、少なくとも5つの異なる知識領域にまたがって学ぶ必要があります。","第一は「ネットワークアプリケーションとそのプログラミング」であり、エラーのない正しいアプリケーションを開発する能力が求められます。例えば、メールソフトやWebアプリなどは、ネットワーク越しに安定して動作する必要があります。","第二は「信号処理と通信」で、データがLANケーブルや無線、光ファイバーなどを通してどのように送信されるのか、その物理的・技術的仕組みを理解する必要があります。","第三は「パケット交換とネット技術」です。電話のように回線を占有するのではなく、データをパケットに分割し、共有ネットワーク上で効率的に伝送する技術です。","第四は「TCP/IPの理解」で、TCP/IPはインターネットの中心的役割を果たしますが、すべてを担うわけではなく、物理的な転送はEthernetなどに、ルーティングはOSPF、RIP、BGPなど他のプロトコルに任されています。","第五は「一般的なネットワーク概念と技術」で、音声・映像のストリーミング、ネットワーク監視（モニタリング）、SDN（ソフトウェア定義ネットワーク）など、現在の高度なネットワーク運用に必要なスキルが含まれます。","これらの領域は相互に関係しており、全体像を把握するにはそれぞれを横断的に理解する力が求められます。ネットワークの専門家を目指すには避けて通れない知識群です。"],"originalSlideText":"Problem: Komplexität (2)\\n❑ Zum vollständigen Verständnis muss ein umfangreiches Wissen auf mindestens fünf Gebieten gesammelt werden\\n Netzwerkanwendungen und –programmierung\\n• Entwicklung von robusten, fehlerfreien und korrekten Netzwerkanwendugen\\n Signalverarbeitung und Kommunikation\\n• Das physikalische Medium, dessen Eigenschaften und Übertragungsverfahren\\n\\nProblem: Komplexität (3)\\n Packet Switching und Netztechnologien\\n• Feste Leitung wie im Telefonnetz werden durch Paketvermittlung ersetzt → geteiltes Netz\\n TCP/IP\\n• Es gibt keine One-Fits-All Packet Switching Technologie\\n• TCP/IP bietet das Konzept des globalen Internets und überlässt anderen Protokollen (z.B. Ethernet) den physikalischen Transport oder auch das Routing (z.B. OSPF, RIP, BGP)\\n\\nProblem: Komplexität (4)\\n Allgemeine Netzwerkkonzepte und -technologien\\n• Streaming von Sprache und Bild\\n• Netzwerk-Monitoring\\n• Software Defined Networking\\n• …","explanationImage":"","questionImage":""},{"id":8,"questionDe":"(s14) Was ist der Unterschied zwischen öffentlichen und privaten Netzen?","questionJa":"公共ネットワークとプライベートネットワークの違いは？","answerDe":["Das Internet ist ein öffentliches Netz auf Basis von TCP/IP.","Zugang zu öffentlichen Netzen wird von Internet Service Providern (ISP) verkauft.","Ein Netz oder Netzzugang ist ein käuflicher Dienst.","Private Netze werden nur von einer einzigen Gruppe genutzt.","Private Netze können auch gemietete Teile öffentlicher Netze sein."],"answerJa":["インターネットはTCP/IPに基づく公共ネットワークである。","公共ネットワークへの接続は、ISP（インターネットサービスプロバイダ）から提供される。","ネットワークやその接続はサービスとして提供・購入される。","プライベートネットワークは単一の組織またはグループによって利用される。","プライベートネットワークは公共ネットワークの一部を借りて構築されることもある。"],"explanationDe":["Der zentrale Unterschied zwischen öffentlichen und privaten Netzen liegt in der Zugänglichkeit und Kontrolle.","Öffentliche Netze, wie das Internet, stehen grundsätzlich jedem offen. Sie basieren auf offenen Standards wie TCP/IP und werden durch Internetdienstanbieter (ISPs) betrieben, die den Zugang gegen Bezahlung bereitstellen.","In diesem Modell ist der Netzzugang ein Dienst, ähnlich wie Strom oder Wasser – man zahlt für die Nutzung, ohne selbst das Netz zu besitzen.","Private Netze hingegen werden von einer einzigen Organisation betrieben und exklusiv genutzt. Sie sind in der Regel nicht öffentlich zugänglich.","Ein klassisches Beispiel ist ein Firmenintranet, das nur für Mitarbeiter erreichbar ist. Auch Heimnetzwerke mit einem WLAN-Router sind private Netze.","Interessanterweise können private Netze auf gemieteten Komponenten öffentlicher Netze basieren – z. B. ein Unternehmen, das VPN-Verbindungen über das öffentliche Internet betreibt.","Der Vorteil privater Netze liegt in der besseren Kontrolle, Sicherheit und Anpassung an spezifische Bedürfnisse – während öffentliche Netze hohe Verfügbarkeit und globale Reichweite bieten."],"explanationJa":["公共ネットワークとプライベートネットワークの違いは、アクセスの自由度と管理権限にあります。","公共ネットワークの代表例がインターネットで、TCP/IPというオープンな標準に基づいて構築されており、誰でもプロバイダ（ISP）を通じてアクセス可能です。","このようなネットワークは、ユーザーにサービスとして提供されており、水道や電気と同じように利用料を支払って使用します。","一方でプライベートネットワークは、特定の組織や個人のみが利用するもので、例えば企業の社内ネットワーク（イントラネット）や自宅のWi-Fiネットワークなどがあります。","こうしたネットワークは、外部からのアクセスを制限し、セキュリティや構成の自由度を高めることができます。","興味深いのは、プライベートネットワークが必ずしも独立したインフラを持つ必要はなく、公共ネットワークの一部（たとえばインターネット）を借りてVPN接続などを構築することも可能である点です。","つまり、公共ネットワークは誰もが使える大規模インフラであり、プライベートネットワークはその上に構築される“専用空間”としての役割を果たします。"],"originalSlideText":"Private Netze (1)\\n❑ Das Internet ist ein öffentliches Netz auf Basis von TCP/IP\\n❑ Zugang zu öffentlichen Netzen wird von Internet Service Providern (ISP) gekauft\\n❑ Netz bzw. Netzzugang ist ein Service\\n❑ Private Netze werden von einer einzige Gruppe genutzt\\n Können auch Netze sein, die von ISPs gemietet wurden","explanationImage":"","questionImage":""},{"id":9,"questionDe":"(s15) Welche Typen von privaten Netzen gibt es?","questionJa":"プライベートネットワークにはどのような種類があるか？","answerDe":["Privatkunden: Heimnetz mit wenigen Computern","Small Office / Home Office (SOHO): Firmennetz mit Computern, Druckern, Bezahlterminals etc.","Small-to-Medium Business (SMB): SOHO plus zweiter Standort oder Produktionsstätte","Large Enterprise: Mehrere Standorte, viele Router"],"answerJa":["個人利用（Privatkunden）：少数のコンピュータで構成された家庭用ネットワーク","小規模オフィス／在宅オフィス（SOHO）：コンピュータ、プリンタ、決済端末などを備えた小規模企業向けネットワーク","中小企業（SMB）：SOHOに加えて第二拠点や生産拠点を持つネットワーク","大企業（Large Enterprise）：複数の拠点と多数のルーターを持つ大規模ネットワーク"],"explanationDe":["Private Netze lassen sich nach ihrer Größe und dem Einsatzzweck in verschiedene Klassen einteilen.","Die einfachste Form ist das Heimnetz (Privatkunden), bestehend aus einem Router und wenigen Geräten wie Laptops, Tablets oder Smart-TVs. Typisch ist hier WLAN und ein einzelner Internetzugang.","SOHO-Netzwerke (Small Office / Home Office) richten sich an Selbstständige oder kleine Firmen. Neben Computern gehören oft auch Drucker, Netzwerk-Speicher oder Bezahlterminals dazu.","Ein SMB-Netz (Small-to-Medium Business) ist größer und komplexer. Es verbindet meist mehrere Standorte oder Produktionsstätten. Dabei sind auch Virtual Private Networks (VPN) oder Standortvernetzungen notwendig.","Großunternehmen (Large Enterprise) betreiben sehr komplexe Netzwerke mit mehreren physischen Standorten weltweit. Sie benötigen viele Router, redundante Verbindungen und umfassende Sicherheitskonzepte.","Jede dieser Netzwerkkategorien stellt unterschiedliche Anforderungen an Skalierbarkeit, Sicherheit und Verwaltung.","Mit wachsender Unternehmensgröße steigt nicht nur die technische Komplexität, sondern auch der organisatorische Aufwand, z. B. für Zugriffskontrolle, Monitoring und Wartung."],"explanationJa":["プライベートネットワークは、その規模や利用目的によっていくつかの種類に分類されます。","最も基本的なのが「家庭用ネットワーク（Privatkunden）」で、ルーターと数台のPCやスマートテレビ、スマホなどで構成される小規模なネットワークです。","「SOHO（Small Office / Home Office）」は個人事業主や小規模な会社向けの構成で、パソコン、プリンター、NAS、決済端末などが接続されていることが一般的です。","「SMB（Small-to-Medium Business）」では、複数拠点や製造施設がネットワークで結ばれ、VPNや拠点間接続が導入されることもあります。","「大企業（Large Enterprise）」になると、世界中の拠点を結ぶ大規模なネットワークが必要となり、ルーターの数も多く、冗長性（バックアップ回線）や高いセキュリティ、アクセス制御などが求められます。","このように、ネットワークの種類が異なれば、必要な技術や管理体制も大きく異なります。","企業規模が大きくなるにつれて、ネットワークの設計・運用における複雑さも比例して増大します。"],"originalSlideText":"Private Netze (2)\\n❑ Klassen von privaten Netzen\\n Privatkunden: Heimnetz mit wenigen Computern\\n Small Office / Home Office (SOHO): Firmennetz mit Computern, Druckern, Bezahlterminals, …\\n Small-to-Medium Business (SMB): SOHO + zweiten Standort oder Produktionsstätte\\n Large Enterprise: Mehrere Standorte, viele Router","explanationImage":"","questionImage":""},{"id":10,"questionDe":"(s16) Warum ist ein Netzwerkprotokoll notwendig?","questionJa":"なぜネットワークにはプロトコルが必要なのか？","answerDe":["Ein Netzwerkprotokoll legt Regeln für alle Aspekte der Kommunikation fest.","Es definiert zum Beispiel elektrische Spannungen und die Bedeutung von Zeichenfolgen.","Ein funktionierendes Netzwerk nutzt viele Protokolle gleichzeitig.","Jedes Protokoll regelt unterschiedliche Aspekte der Kommunikation.","Beispiel: Physikalische Übertragung vs. Transportprotokoll (z. B. TCP)"],"answerJa":["ネットワークプロトコルは通信のあらゆる側面を規定するルールである。","例えば、電圧の値や文字列の意味づけなどが定義されている。","実際のネットワークでは複数のプロトコルが同時に使われる。","各プロトコルは通信の異なる側面を担当している。","例：物理層の伝送と、TCPなどのトランスポートプロトコルの違い"],"explanationDe":["Ein Netzwerkprotokoll ist eine Sammlung von Regeln, die sicherstellen, dass zwei oder mehr Geräte korrekt miteinander kommunizieren können.","Diese Regeln betreffen sowohl technische als auch logische Aspekte der Kommunikation. Sie legen fest, wie Signale auf dem Kabel aussehen (z. B. Spannungspegel), wie Datenpakete aufgebaut sind und was passiert, wenn ein Fehler auftritt.","Ohne ein Protokoll wüssten Sender und Empfänger nicht, wie sie Informationen austauschen sollen – das würde zu Datenverlust oder Fehlinterpretation führen.","In einem funktionierenden Netzwerk wirken mehrere Protokolle zusammen, wobei jedes eine spezifische Aufgabe erfüllt: Ein Protokoll kümmert sich z. B. um den physischen Zugang zum Medium, ein anderes um das Routing, und ein weiteres um die Fehlerkorrektur.","Ein Beispiel: Bei einer Dateiübertragung über das Internet ist TCP für die zuverlässige Übertragung zuständig, während IP die Adressierung übernimmt und Ethernet die physikalische Verbindung aufbaut.","Diese Protokolle arbeiten in sogenannten Schichten (Layer), sodass jede Schicht auf die Dienste der darunterliegenden Schicht aufbauen kann.","Durch diese modulare Aufteilung wird die Kommunikation standardisiert, nachvollziehbar und interoperabel – auch zwischen Geräten verschiedener Hersteller."],"explanationJa":["ネットワークプロトコルとは、複数のコンピュータや機器が正しく通信するために必要なルールの集合です。","このルールには、技術的な側面（例：電圧、信号の長さ）から、論理的な手続き（例：データの区切り方、エラーが起きたときの処理方法）までが含まれます。","もしプロトコルが存在しなければ、送信側と受信側が同じ方式でデータを解釈できず、通信が成り立ちません。結果として、データの欠落や誤解釈が起こります。","実際のネットワークでは、複数のプロトコルが役割を分担しながら協調動作します。例えば、物理層では信号の送受信、ネットワーク層ではルーティング、トランスポート層ではデータの信頼性確保を担当します。","具体例として、インターネットでファイルを送るときには、TCPがエラーなく正しく届ける責任を持ち、IPがアドレス管理をし、Ethernetが物理的なデータ転送を行います。","これらのプロトコルは階層的に構成されており、それぞれの層が下位層の機能を前提として動作します（レイヤーモデル）。","こうした構造によって、異なるメーカーの機器同士でも、標準化された方法で相互に通信することが可能となります。"],"originalSlideText":"Interoperabilität (1)\\n❑ Basis der Kommunikation innerhalb eines Netzes ist das Netzwerk-Protokoll\\n Enthält Regeln, die alle Aspekte der Kommunikation festlegen\\n• Z.B. elektrische Spannung, Bedeutung von Zeichenfolgen\\n❑ Ein funktionierendes Netzwerk greift auf viele Protokolle zurück, die unterschiedliche Aspekte der Kommunikation regeln\\n Z.B. physikalische Übertragung vs. Transportprotokoll (TCP)","explanationImage":"","questionImage":""},{"id":11,"questionDe":"(s17) Welche Aspekte beschreibt ein Protokoll?","questionJa":"プロトコルが規定する主な要素は？","answerDe":["Syntax:","– Format und Darstellung von Nachrichten","– Kodierung","Semantik:","– Bedeutung von Nachrichten","– Verfahren zum Austausch von Nachrichten","– Fehlerbehandlung"],"answerJa":["構文（Syntax）：","– メッセージの形式と表示方法","– エンコーディング（符号化）","意味論（Semantik）：","– メッセージの意味づけ","– メッセージ交換の手続きや方法","– エラー処理の方法"],"explanationDe":["Ein Protokoll beschreibt nicht nur, dass Kommunikation stattfindet, sondern auch *wie* sie ablaufen muss – das umfasst sowohl technische als auch semantische Regeln.","Unter \'Syntax\' versteht man die äußere Struktur von Nachrichten: wie sie formatiert sind, in welchem Datenformat sie übertragen werden (z. B. Binär- oder Textformat) und wie sie codiert sind (z. B. UTF-8, ASCII).","Wenn zwei Systeme eine andere Codierung verwenden, können selbst korrekte Daten falsch interpretiert werden – deshalb ist die genaue Festlegung essenziell.","Die \'Semantik\' eines Protokolls bezieht sich auf die Bedeutung der übertragenen Daten. Sie legt fest, welche Reaktion eine Nachricht beim Empfänger auslösen soll.","Zum Beispiel muss ein \'Login-Request\' eindeutig als solcher erkennbar sein und entsprechende Reaktionen wie eine Authentifizierung hervorrufen.","Darüber hinaus beschreibt die Semantik auch den Ablauf: wann wer sendet, was auf einen Fehler zu tun ist und wie auf Duplikate oder verlorene Pakete reagiert werden soll.","Ohne diese genaue Definition könnten Kommunikationsteilnehmer nicht sicherstellen, dass ihre Absichten korrekt verstanden und verarbeitet werden."],"explanationJa":["プロトコルとは、単に通信の可否を決めるだけでなく、“どのように”通信すべきかを詳細に定めたルールです。それには構文（Syntax）と意味論（Semantik）の2つの側面があります。","構文とは、メッセージの見た目やデータの並び方、使用するエンコーディング方式（例：UTF-8やASCII）など、データの構造や形式に関する決まりです。","例えば、エンコード方式が一致していないと、同じデータでも誤って解釈される恐れがあります。構文の統一は相互理解の基盤です。","一方、意味論では「そのデータが何を意味するか」「どのような手続きが行われるか」など、通信内容の意味や操作の流れを定義します。","たとえば、あるメッセージがログイン要求であることを明確に示し、それに対する認証処理が行われるといった流れです。","さらに、意味論にはエラーが発生した際の対処法（再送信、破棄など）や、重複・順序ずれなどの状況への対応方法も含まれます。","このように、プロトコルは通信の“文法”と“意味”の両方を正確に規定することで、異なるシステム間でも一貫した処理が可能になります。"],"originalSlideText":"Interoperabilität (2)\\n❑ Protokolle beschreiben\\n Syntax\\n• Format und Darstellung von Nachrichten\\n• Kodierung\\n Semantik\\n• Bedeutung von Nachrichten\\n• Verfahren um Nachrichten auszutauschen\\n• Fehlerbehandlung","explanationImage":"","questionImage":""},{"id":12,"questionDe":"(s18) Welche Ziele verfolgt das Protokolldesign?","questionJa":"プロトコル設計の目的は何か？","answerDe":["Effizienz","Vollständigkeit – alle Szenarien sollen abgedeckt sein","Vermeidung von Redundanz – jedes Protokoll löst ein anderes Problem","Interoperabilität – Schnittstellen zwischen den Protokollen müssen passen","Lösung: Protokolle werden als Familie gemeinsam entworfen (z. B. TCP/IP-Protokollstack)"],"answerJa":["効率性の確保","網羅性 – あらゆる通信シナリオをカバーすること","冗長性の排除 – 各プロトコルが異なる問題を担当","相互運用性 – プロトコル同士のインターフェース整合性の確保","解決策：プロトコルはファミリー（例：TCP/IP）として一体設計される"],"explanationDe":["Das Design eines Protokolls verfolgt das Ziel, zuverlässige, effiziente und flexible Kommunikation zu ermöglichen.","Ein Hauptziel ist **Effizienz**: Ein Protokoll sollte Ressourcen wie Bandbreite und Rechenleistung möglichst sparsam nutzen.","Zweitens ist **Vollständigkeit** entscheidend – das Protokoll muss alle erdenklichen Anwendungsfälle abdecken, etwa Verbindungsaufbau, Datenübertragung, Fehlerbehandlung, Verbindungsabbau usw.","Drittens ist die **Vermeidung von Redundanz** wichtig. Wenn mehrere Protokolle die gleichen Aufgaben erledigen, entstehen Inkonsistenzen. Deshalb soll jedes Protokoll genau eine klar abgegrenzte Aufgabe erfüllen.","Ein weiteres Ziel ist **Interoperabilität**: Protokolle müssen so gestaltet sein, dass sie sauber miteinander zusammenspielen – etwa ein Transportprotokoll (z. B. TCP) mit einem Internetprotokoll (z. B. IP).","Um diese Ziele zu erreichen, werden Protokolle nicht isoliert entwickelt, sondern als sogenannte **Protokollfamilien** – Sammlungen aufeinander abgestimmter Protokolle, wie etwa der TCP/IP-Stack.","Ein gut designtes Protokollsystem erlaubt es, Komponenten zu ersetzen oder zu erweitern, ohne das ganze System zu gefährden – dies ist die Grundlage für die Evolution moderner Netzwerke."],"explanationJa":["プロトコルの設計には、通信を確実・効率的・柔軟に行うための複数の目的があります。","第一に「効率性」です。プロトコルは、帯域幅や計算資源といったリソースを無駄なく使えるように設計されるべきです。","第二に「網羅性（完全性）」です。通信のすべてのシナリオ（接続の確立、データの送受信、切断、エラー処理など）に対応できることが求められます。","第三に「冗長性の回避」です。複数のプロトコルが同じ役割を果たしてしまうと、整合性が取れなくなります。そのため、各プロトコルには明確な役割分担が与えられるべきです。","さらに「相互運用性」も重要です。異なるプロトコル同士が正しく連携できるように、インターフェース（接続点）がしっかり定義されている必要があります。","これらの目的を満たすため、プロトコルは単独で設計されるのではなく、「プロトコルファミリー」として一体的に設計されます。代表例がTCP/IPスタックです。","このような設計によって、各層のプロトコルは独立しつつも連携でき、将来的な拡張や交換にも柔軟に対応できる構造が実現されています。"],"originalSlideText":"Protokolldesign (1)\\n❑ Ziele des Protokolldesigns:\\n Effizienz\\n Vollständigkeit (alle Szenarien abgedeckt)\\n Vermeidung von Redundanz → Jedes Protokoll löst ein anderes Problem der Netzwerkkommunikation\\n Interoperabilität → Schnittstellen zwischen den Protokollen\\n❑ Lösung: Protokolle werden zusammen als Protokoll-Familie entworfen (z.B. TCP/IP Protokollstack)","explanationImage":"","questionImage":""},{"id":13,"questionDe":"(s19) Wie funktioniert das Schichtenmodell beim Protokolldesign?","questionJa":"プロトコルの階層構造（レイヤーモデル）はどのように機能するか？","answerDe":["Die Protokoll-Familie teilt Kommunikationsprobleme in Schichten auf – das sogenannte Schichtmodell (Layer).","Für jede Schicht existieren mehrere mögliche Protokolle.","In der Praxis durchlaufen die Daten beim Senden jede Schicht linear.","In jeder Schicht wird die Nachricht von genau einem Protokoll verarbeitet.","Der Output einer höheren Schicht dient beim Senden als Input der darunter liegenden Schicht.","Beim Empfangen ist dieser Ablauf umgekehrt."],"answerJa":["プロトコルファミリーは通信の問題を階層（レイヤー）に分割する。これがレイヤーモデルである。","各レイヤーには複数のプロトコルが存在しうる。","送信時には、データは各レイヤーを順番に通過して処理される。","各レイヤーでは、1つのプロトコルがその層の処理を担当する。","上位レイヤーの出力は、下位レイヤーの入力として扱われる（送信時）。","受信時にはこの順序が逆になる。"],"explanationDe":["Das Schichtenmodell (Layer-Modell) ist ein zentrales Konzept im Protokolldesign. Es teilt die Kommunikation in klar definierte Ebenen auf, wobei jede Ebene eine bestimmte Funktion erfüllt.","Jede Schicht ist dafür verantwortlich, eine bestimmte Aufgabe innerhalb der Kommunikation zu übernehmen – z. B. physikalische Übertragung, Adressierung, Transport oder Anwendung.","Ein großer Vorteil ist die Trennung der Verantwortlichkeiten: Wenn sich die Anforderungen an eine Schicht ändern (z. B. neue Netzwerktechnologie), müssen nicht alle anderen Protokolle angepasst werden.","Beim Senden durchläuft die zu übertragende Nachricht alle Schichten von oben nach unten: die Anwendungsschicht produziert die Daten, die dann von jeder weiteren Schicht erweitert und verpackt werden.","In jeder Schicht wird die Nachricht von genau einem Protokoll verarbeitet, das der Aufgabe dieser Schicht entspricht (z. B. IP in der Internetschicht).","Beim Empfangen wird dieser Prozess rückgängig gemacht: die Nachricht durchläuft die Schichten von unten nach oben, wobei jede Schicht ihren eigenen Header entfernt und die Nutzdaten an die nächsthöhere Schicht weitergibt.","Dieses Modell erlaubt es, Protokolle flexibel zu kombinieren und vereinfacht sowohl Implementierung als auch Fehlersuche."],"explanationJa":["レイヤーモデル（階層モデル）は、プロトコル設計における基本的な考え方で、通信の処理を複数の階層に分け、それぞれに特定の役割を持たせる構造です。","各レイヤーは独立した役割（物理的な信号伝送、アドレス指定、データ転送、アプリケーション処理など）を担っており、分担することで管理しやすくなります。","この構造の利点は、各層の独立性が高いため、一部の層に変更があっても他の層に影響を与えにくい点です（例：ネットワーク技術が変わってもアプリ層のソフトを修正しなくてよい）。","送信時には、最上位のアプリケーション層で作成されたデータが、順に下位層のプロトコルによって処理され、ヘッダーなどが付加されていきます。","各層では、対応するプロトコル（例：インターネット層ではIP）が1つだけデータを処理し、自分の層に応じた情報を付け加えます。","受信時にはこのプロセスが逆に進み、各層で自分の担当部分（ヘッダー）を剥がし、上位層へデータを引き渡します。","この構造により、異なるプロトコルの柔軟な組み合わせが可能となり、開発やトラブルシューティングも容易になります。"],"originalSlideText":"Protokolldesign (2)\\n❑ Die Protokoll-Familie teilt das Problem der Kommunikation in Schichten auf → Schichtmodell (Layer)\\n❑ Für jede Schicht kann es mehrere Protokolle geben\\n❑ Für die praktische Netzwerkkommunikation durchlaufen zu transportierende Daten linear jede Schicht und werden dort von genau einem Protokoll verarbeitet\\n❑ Der Output einer höheren Schicht dient als Input der darunter liegenden (beim Senden; beim Empfang umgekehrt)","explanationImage":"lecture03/lecture03_ex01.png","questionImage":""},{"id":14,"questionDe":"(s20) Wie kommunizieren gleiche Schichten auf Sender- und Empfängerseite miteinander?","questionJa":"送信側と受信側で同じレイヤーはどのように対応して通信しているか？","answerDe":["Pakete, die beim Sender von Schicht A erzeugt werden, werden beim Empfänger ebenfalls von Schicht A gelesen."],"answerJa":["送信側のレイヤーAで生成されたパケットは、受信側の同じレイヤーAによって読み取られる。"],"explanationDe":["In einem Schichtenmodell kommunizieren jeweils gleichnamige Schichten auf Sender- und Empfängerseite logisch miteinander – dies nennt man Peer-to-Peer-Kommunikation.","Dabei stellt jede Schicht auf der Sendeseite ihre Informationen so zusammen, dass die entsprechende Schicht auf der Empfängerseite diese korrekt interpretieren kann.","Zum Beispiel: Die Transportschicht des Senders (z. B. TCP) erstellt ein Datenpaket mit spezifischen TCP-Headern. Dieses Paket wird über die darunterliegenden Schichten transportiert, aber am Ziel extrahiert die Transportschicht des Empfängers genau diese TCP-Daten.","Obwohl in der Realität die Kommunikation physikalisch nur von oben nach unten auf der Senderseite und von unten nach oben auf der Empfängerseite geschieht, entsteht durch das Design die Illusion direkter Kommunikation zwischen gleichen Schichten.","Diese logische Verbindung sorgt für eine saubere Trennung der Aufgaben und ermöglicht modulare Kommunikation zwischen Systemkomponenten.","Dadurch kann z. B. ein TCP-Modul unabhängig vom darunterliegenden Netzwerkprotokoll korrekt arbeiten, solange das Format eingehalten wird.","Das Prinzip stellt sicher, dass Erweiterungen oder Änderungen in einer Schicht nicht zwangsläufig Auswirkungen auf andere Schichten haben."],"explanationJa":["レイヤーモデルでは、送信側と受信側の“同じレイヤー同士”が論理的に通信しているとみなされます。この仕組みを「ピア・トゥ・ピア通信（Peer-to-Peer）」と呼びます。","具体的には、送信側のある層（例：トランスポート層）が作成したパケットは、そのまま下位層を通って物理的に送られ、受信側で同じ層（トランスポート層）によって処理されます。","例えばTCPのデータは、送信側でTCPヘッダーが付加された後、IPやイーサネットなど下位層を通過して相手に届き、受信側のTCPがそのデータを解析します。","実際には、データは上下方向（レイヤー間）にしか流れませんが、あたかも同じ層同士が直接やり取りしているような設計となっています。","この設計により、各層は独立して動作でき、モジュールとして扱えるため、ネットワークシステムの保守性や柔軟性が高まります。","つまり、トランスポート層の設計変更は、下層のプロトコルに影響を与えずに済む場合が多くなります。","このレイヤー同士の論理的な対応関係は、プロトコル設計における整合性や再利用性を支える重要な原則です。"],"originalSlideText":"Protokolldesign (3)\\n❑ Pakete die beim Sender von Schicht A erzeugt werden, werden beim Empfänger von der gleichen Schicht A gelesen","explanationImage":"lecture03/lecture03_ex02.png","questionImage":""},{"id":15,"questionDe":"(s21) Was ist ein Protokoll-Header und welche Informationen enthält er?","questionJa":"プロトコルヘッダーとは何で、どのような情報が含まれるか？","answerDe":["Beim Senden ergänzt jedes Protokoll in jeder Schicht Metadaten (Header) zu den zu transportierenden Daten.","Der Header enthält z. B.:","– Prüfsummen","– Adressen (Ports, IP-Adressen, MAC-Adressen)","– Kontrollinformationen (Paketnummern, Segmentierung)","Beim Empfang wird in jeder Schicht der Header entfernt und ausgewertet."],"answerJa":["送信時、各レイヤーのプロトコルは転送対象のデータにメタ情報（ヘッダー）を付加する。","ヘッダーには以下の情報が含まれる：","– チェックサム（エラー検出）","– アドレス（ポート番号、IPアドレス、MACアドレス）","– 制御情報（パケット番号、セグメント情報など）","受信時には各レイヤーでそのヘッダーを取り出して解析する。"],"explanationDe":["Ein Protokoll-Header ist ein Datenblock, der beim Senden an den Anfang eines Datenpakets angehängt wird. Er enthält Metadaten, die für die Verarbeitung, Weiterleitung und Sicherheit der Nachricht notwendig sind.","Jede Schicht fügt beim Senden ihren eigenen Header hinzu. Die Header werden in einer Art \'Zwiebelschale\' um die Nutzdaten gelegt – je tiefer die Schicht, desto tiefer liegt der Header.","Beispiel: Ein TCP-Header enthält Sequenznummern zur richtigen Reihenfolge von Paketen, ein IP-Header die Absender- und Ziel-IP-Adresse und ein Ethernet-Header die MAC-Adressen für die physikalische Zustellung.","Die Prüfsumme dient zur Fehlererkennung – der Empfänger kann prüfen, ob Daten unterwegs verändert wurden.","Segmentierungsinformationen sind nötig, wenn große Datenmengen in kleinere Pakete aufgeteilt werden müssen.","Beim Empfang entfernt jede Schicht ihren eigenen Header, interpretiert die enthaltenen Informationen und leitet die Nutzdaten an die nächsthöhere Schicht weiter.","Dieses Prinzip macht es möglich, Daten über komplexe Netzwerke sicher, korrekt und nachvollziehbar zu transportieren."],"explanationJa":["プロトコルヘッダーとは、データを送信する際にその前に付加される“メタ情報のかたまり”です。各レイヤーで独自のヘッダーが付加され、通信の管理に用いられます。","送信時、アプリケーション層で生成されたデータは下位層に渡され、各層ごとにヘッダーが順に付加されていきます。これにより、最終的なパケットは“玉ねぎの皮”のように多層構造になります。","たとえば、TCP層ではパケットの順序管理のためのシーケンス番号、IP層では送信元と宛先のIPアドレス、イーサネット層ではMACアドレスがそれぞれヘッダーに含まれます。","チェックサムは、データが転送中に破損していないかを確認するための情報で、誤り検出に用いられます。","また、データが大きすぎる場合は、ヘッダーにセグメント情報（どの順番の何番目かなど）を含めて分割・再構成を可能にします。","受信側では、各レイヤーが自分の担当するヘッダーを順に取り外し、その情報を使って通信を制御しながら、上位レイヤーにデータを渡します。","この仕組みによって、大量のデバイスと異なるネットワークをまたいでも、安定かつ正確な通信が可能になります。"],"originalSlideText":"Protokoll Header\\n❑ Jedes Protokoll jeder Schicht ergänzt beim Senden Metadaten zu den zu transportierenden Daten\\n Prüfsummen\\n Adressen (Ports, IP-Adressen, MAC-Adressen)\\n Kontrollinformationen (Paketnummern, Segmentierung)\\n❑ Header mit diesen Daten wird in jeder Schicht den Daten voran gestellt\\n❑ Beim Empfänger extrahiert jedes Protokoll seinen entsprechenden Header und wertet Daten aus","explanationImage":"lecture03/lecture03_ex03.png","questionImage":""},{"id":16,"questionDe":"(s22–s24) Welche Schichten gibt es im TCP/IP-Stack und was sind ihre Aufgaben?","questionJa":"TCP/IPスタックの各層とその役割は？","answerDe":["Physical Layer:","– Übertragung der Daten als Signal auf dem physikalischen Medium","Network Layer (Medium Access Control, MAC):","– Kommunikation zwischen physikalisch verbundenen Geräten","– Hardwareadressierung, Paketgrößen, Medienzugriff","– Beispiel: Ethernet","Internet Layer:","– Kommunikation zwischen beliebigen Geräten im Netz","– Adressierung, Paketstruktur, Segmentierung","– Beispiel: IP","Transport Layer:","– Kommunikation zwischen Anwendungen auf beliebigen Geräten","– Überlastkontrolle, Flusskontrolle, Fehlerkorrektur","Application Layer:","– Anwendungsprotokolle, Struktur der zu übertragenden Daten","– Jedes Programm implementiert ein eigenes Protokoll","– Beispiele: FTP, Bittorrent, IMAP"],"answerJa":["物理層（Physical Layer）：","– データを物理媒体上で信号として送信する","ネットワーク層（Network Layer / MAC層）：","– 物理的に接続されたデバイス間で通信を行う","– ハードウェアアドレス指定、パケットサイズの管理、メディアアクセス制御","– 例：Ethernet","インターネット層（Internet Layer）：","– 任意の2つのデバイス間で通信を行う","– アドレス指定、パケット構造、セグメント化","– 例：IP","トランスポート層（Transport Layer）：","– デバイス上のアプリケーション間で通信を行う","– 輻輳制御、フロー制御、エラー修正","アプリケーション層（Application Layer）：","– アプリケーションレベルのプロトコルを定義","– 送信データの構造を規定","– 各アプリケーションが独自のプロトコルを実装する","– 例：FTP、Bittorrent、IMAP"],"explanationDe":["Der TCP/IP-Stack besteht aus mehreren Schichten, die jeweils eine bestimmte Funktion in der Netzwerkkommunikation erfüllen. Jede Schicht verarbeitet Daten auf eine bestimmte Art und leitet sie an die nächste Schicht weiter.","Die unterste Schicht, der Physical Layer, kümmert sich um die Übertragung von Daten als elektrische oder optische Signale über Kabel oder Funkverbindungen.","Darüber liegt der Network Layer – auch als MAC-Schicht bekannt. Sie steuert die Kommunikation zwischen direkt verbundenen Geräten. Hier werden Hardwareadressen (z. B. MAC-Adressen), Paketgrößen und der Zugriff auf das Übertragungsmedium geregelt. Ethernet ist ein typisches Protokoll dieser Schicht.","Die Internet-Schicht ist für die Adressierung und Weiterleitung von Paketen über mehrere Netzwerke hinweg zuständig. Protokolle wie IP (Internet Protocol) ermöglichen es, dass Daten an jedes beliebige Gerät im Netz gesendet werden können.","In der Transport-Schicht werden die Pakete zwischen den Anwendungen auf verschiedenen Geräten ausgetauscht. Hierbei kommen wichtige Funktionen wie Fehlerkorrektur, Flusskontrolle und Überlastvermeidung zum Einsatz – typischerweise durch TCP oder UDP.","Die oberste Schicht ist die Application Layer, in der konkrete Dienste wie E-Mail, Dateiübertragung oder Streaming angesiedelt sind. Jedes dieser Programme nutzt ein eigenes, darauf zugeschnittenes Protokoll – z. B. FTP für Dateitransfer oder IMAP für E-Mail.","Das Modell ist modular aufgebaut, sodass jede Schicht unabhängig funktionieren und bei Bedarf ausgetauscht werden kann – dies ist ein wesentlicher Vorteil des TCP/IP-Konzepts."],"explanationJa":["TCP/IPスタックは複数の層（レイヤー）で構成されており、それぞれの層が特定の役割を担っています。データは下から上へ、または上から下へと各層を通って処理されます。","最下層の「物理層」は、電気信号や光信号としてデータをケーブルや無線を通じて物理的に送信する層です。","次の「ネットワーク層（MAC層）」は、物理的に接続されたデバイス間の通信を制御し、MACアドレスによるハードウェアレベルの識別、パケットサイズの調整、メディアアクセス制御などを行います。代表的なプロトコルはEthernetです。","その上にある「インターネット層」は、ネットワークをまたいだデバイス間の通信を可能にし、IPアドレスによる宛先指定、パケットの構造化や分割（セグメント化）などを行います。ここではIPプロトコルが使われます。","「トランスポート層」は、アプリケーション間でのデータの送受信を担当し、エラー訂正、フロー制御、輻輳（ふくそう）制御などを行います。TCPやUDPがこの層の代表的なプロトコルです。","最上位の「アプリケーション層」では、具体的なアプリケーションが使うプロトコルが実装されます。FTP（ファイル転送）やIMAP（メール受信）、Bittorrent（P2P通信）など、各種サービスに特化したプロトコルがここで動作します。","このように各層は独立して設計されており、変更や拡張がしやすいというのがTCP/IPスタックの大きな特徴です。"],"originalSlideText":"TCP/IP Stack (1)\\n❑ Physical Layer\\n Übertragung der Daten als Signal auf dem physikalischen Medium\\n❑ Network Layer (Medium Access Control, MAC)\\n Steuert die Kommunikation auf dem Medium zwischen zwei physikalisch verbundenen Geräten\\n Hardwareadressierung, Paketgrößen, Medienzugriff\\n Z.B. Ethernet\\n\\nTCP/IP Stack (2)\\n❑ Internet Layer:\\n Kommunikation zwischen zwei beliebigen Geräten irgendwo im Netz (nicht zwangsweise physikalisch verbunden)\\n Adressierung, Paket-Struktur, Segmentierung, …\\n Z.B. IP\\n❑ Transport Layer:\\n Kommunikation zwischen Anwendungen auf beliebigen Geräten\\n Überlastkontrolle, Flusskontrolle, Fehlerkorrektur, …\\n\\nTCP/IP Stack (3)\\n❑ Application Layer:\\n Protokolle auf Anwendungsschicht\\n Struktur der zu übertragenden Daten\\n Jedes Programm das Daten übertragen möchte implementiert zwangsweise ein eigenes Protokoll\\n Z.B. FTP, Bittorrent, IMAP, …","explanationImage":"lecture03/lecture03_ex04.png","questionImage":""},{"id":17,"questionDe":"(s25) Warum konnte sich das OSI-Modell nicht durchsetzen?","questionJa":"OSIモデルはなぜ普及しなかったのか？","answerDe":["Das OSI-Modell wurde von der ISO und der ITU gemeinsam entworfen.","Es konnte sich jedoch nicht gegen das TCP/IP-Modell durchsetzen.","Heute hat es keine praktische Relevanz mehr."],"answerJa":["OSIモデルはISOとITUによって共同で設計された。","しかし、TCP/IPモデルには普及の面で敗れた。","現在では実用上の重要性はほとんどない。"],"explanationDe":["Das OSI-Modell (Open Systems Interconnection) wurde ursprünglich von der ISO und der ITU entwickelt, um eine weltweit einheitliche Referenzarchitektur für Netzwerkkommunikation zu schaffen.","Es besteht aus sieben klar definierten Schichten, die von der physikalischen Datenübertragung bis hin zur Anwendung reichen – und sollte theoretisch als Grundlage für alle Netzwerksysteme dienen.","Trotz seines eleganten und didaktisch nützlichen Aufbaus konnte sich das OSI-Modell in der Praxis nicht etablieren.","Das lag vor allem daran, dass es zu spät kam: Während OSI noch standardisiert wurde, hatte sich TCP/IP – das in den USA vor allem durch ARPANET bereits breit eingesetzt wurde – längst in der Praxis bewährt.","TCP/IP war einfacher, flexibler und vor allem offen verfügbar – das machte es für Entwickler und Anbieter attraktiver.","Zudem war die Implementierung von OSI kompliziert und schwergewichtig, was in der dynamischen Internetentwicklung hinderlich war.","Heute wird das OSI-Modell zwar oft noch in der Lehre verwendet, hat aber in der realen Netzwerktechnik kaum noch Relevanz – dort dominiert TCP/IP."],"explanationJa":["OSIモデル（Open Systems Interconnectionモデル）は、ISOとITUが共同で設計した、ネットワーク通信の標準的な参照アーキテクチャです。","全7層に分かれており、物理的な信号のやりとりからアプリケーションレベルの通信までを論理的に整理した理想的な構造を持っています。","しかし、現実のネットワーク分野では普及しませんでした。","その最大の理由は、登場が遅すぎたことです。OSIが標準化されている間に、アメリカ発のTCP/IPがARPANETなどで実用化され、既に広く使われていました。","TCP/IPはOSIよりも実装が簡単で柔軟性が高く、誰でも自由に利用できるオープン仕様だったため、企業や開発者にとって採用しやすいものでした。","一方、OSIは複雑で重たい設計だったため、急速に進化するインターネットの世界では足かせになりました。","現在ではOSIモデルは教育用の理論モデルとして利用されることはあっても、実際のネットワーク設計ではTCP/IPが主流です。"],"originalSlideText":"OSI Schichtenmodell\\n❑ Von der ISO und der ITU gemeinsam entworfen\\n❑ Konnte sich nicht gegen TCP/IP durchsetzen\\n❑ Heute keine Relevanz","explanationImage":"lecture03/lecture03_ex05.png","questionImage":""},{"id":18,"questionDe":"(s27) Warum ist das Internet nicht gleichzusetzen mit dem WWW?","questionJa":"なぜインターネットとWWW（ワールドワイドウェブ）は同じではないのか？","answerDe":["Das Internet und das WWW sind nicht identisch.","WWW ist nur eine Anwendung, die über das Internet läuft.","WWW wird durch eigene Protokolle und Standards umgesetzt (z. B. HTTP, HTML).","Das Internet stellt einen generischen Kommunikationsservice bereit.","Bekannte Anwendungen wie WWW oder E-Mail sind keine Bestandteile des Internets selbst."],"answerJa":["インターネットとWWWは同じものではない。","WWWはインターネット上で動作するアプリケーションの一つにすぎない。","WWWは独自のプロトコルや標準（例：HTTP、HTML）によって構成されている。","インターネットは汎用的な通信サービスを提供する基盤である。","WWWやEメールなどの有名なアプリケーションは、インターネットそのものではない。"],"explanationDe":["Ein häufiges Missverständnis besteht darin, das Internet mit dem World Wide Web (WWW) gleichzusetzen – tatsächlich sind es zwei unterschiedliche Dinge.","Das Internet ist die technische Infrastruktur, die den Austausch von Daten zwischen Computern weltweit ermöglicht. Es basiert auf Protokollen wie IP, TCP und UDP und stellt grundlegende Kommunikationsdienste bereit.","Das WWW hingegen ist eine Anwendung, die über das Internet läuft. Es nutzt spezifische Protokolle wie HTTP und Datenformate wie HTML zur Darstellung von Webseiten.","Man kann sich das Internet wie das Straßennetz vorstellen und das WWW wie Autos, die darauf fahren – es ist nur eine von vielen möglichen Nutzungen.","Weitere Anwendungen, die über das Internet laufen, sind z. B. E-Mail (mit SMTP, IMAP), Videostreaming oder Messaging-Dienste – diese sind alle ebenfalls keine Bestandteile des Internets selbst.","Das Internet ermöglicht lediglich, dass diese Anwendungen Daten austauschen können, stellt aber keine Inhalte oder Dienste selbst bereit.","Deshalb ist es wichtig, die Infrastruktur (Internet) von den darauf aufbauenden Diensten (z. B. WWW) klar zu unterscheiden."],"explanationJa":["インターネットとWWW（ワールドワイドウェブ）を同じものだと考えるのはよくある誤解ですが、実際には全く異なる概念です。","インターネットとは、世界中のコンピュータが相互にデータをやり取りできるようにするための技術的な基盤です。IP、TCP、UDPなどのプロトコルによって成り立っています。","一方、WWWはそのインフラの上で動作する“アプリケーション”の一つです。具体的には、HTTPやHTMLなどを用いてWebページをやり取り・表示する仕組みを指します。","例えるなら、インターネットが道路網だとすれば、WWWはその上を走る一台の車にすぎません。他にもEメールや動画配信、チャットなども同じ道路（＝インターネット）を使って動いています。","つまり、インターネットはアプリケーションの土台となる通信基盤であり、そこに乗っているサービスは別物なのです。","WWWは確かに最も身近なサービスですが、それはインターネットの一部ではなく“インターネットを利用するサービス”の一つにすぎません。","したがって、両者を明確に区別して理解することが重要です。"],"originalSlideText":"„Das Internet“ (1)\\n❑ Häufiges Missverständnis: Internet == WWW\\n Völlig Falsch → WWW wird durch Web-Server und Web-Browser implementiert\\n Eigene Protokolle und Standards (z.B. HTTP, HTML)\\n Kommuniziert wird über „das Internet“\\n❑ „Das Internet“ ist ein generischer Kommunikations-Service\\n❑ Keines der bekannten Anwendungen (z.B. WWW, E-Mail) ist Teil des Internets → Reine Applikationen, die den Service „Internet“ nutzen","explanationImage":"","questionImage":""},{"id":19,"questionDe":"(s28) Was versteht man technisch unter „dem Internet“?","questionJa":"技術的に「インターネット」とは何か？","answerDe":["„Das Internet“ bezeichnet die Protokolle TCP, IP und UDP – bekannt als TCP/IP-Protokoll-Stack.","Die Implementierungen befinden sich im Internet- und Transport-Layer des 5-Schichten-Modells.","Anwendungen können diese Dienste über APIs direkt nutzen.","Viele technische Aspekte wie Fehlerkorrektur, Flusskontrolle und Reihenfolge bleiben vor der Anwendung verborgen.","Die wichtigste API für den Zugriff ist: Sockets."],"answerJa":["技術的に「インターネット」とは、TCP、IP、UDPというプロトコルを指し、これらをまとめてTCP/IPスタックと呼ぶ。","これらは5層モデルのうち、インターネット層とトランスポート層に実装されている。","アプリケーションはAPIを介してこれらのサービスに直接アクセスできる。","エラー訂正、フロー制御、データの順序制御などの技術的な処理は、アプリケーションからは隠蔽されている。","最も代表的なAPIは「ソケット（Sockets）」である。"],"explanationDe":["Technisch gesehen bezeichnet „das Internet“ nicht die Anwendungen wie Web oder E-Mail, sondern die darunterliegenden Netzwerkprotokolle – insbesondere TCP (Transmission Control Protocol), IP (Internet Protocol) und UDP (User Datagram Protocol).","Diese Protokolle bilden zusammen den sogenannten TCP/IP-Protokollstack, der das Fundament des heutigen Internets darstellt.","Im 5-Schichten-Modell befinden sich diese Protokolle im Internet-Layer (IP) und Transport-Layer (TCP, UDP). Sie sorgen dafür, dass Daten zuverlässig zwischen Geräten über das Netzwerk übertragen werden können.","Anwendungen wie Browser oder Mailclients greifen nicht direkt auf die Netzwerktechnologie zu, sondern nutzen APIs – also Programmierschnittstellen – um die Dienste dieser Protokolle zu verwenden.","Ein großer Vorteil dieses Modells ist, dass viele komplexe technische Details – wie Fehlerkorrektur, Flusskontrolle oder das Einhalten der richtigen Reihenfolge der Daten – automatisch im Hintergrund ablaufen.","Die wichtigste Schnittstelle, über die Anwendungen auf das Netzwerk zugreifen, ist die Socket-API. Sie erlaubt es Programmen, Verbindungen aufzubauen, Daten zu senden und zu empfangen.","Kurz gesagt: Das „Internet“ ist technisch gesehen kein einzelner Dienst, sondern ein System aus standardisierten Protokollen, das eine robuste, flexible und globale Kommunikation ermöglicht."],"explanationJa":["技術的に「インターネット」とは、私たちが日常的に使うアプリ（ブラウザやメールなど）ではなく、それらを支える基盤となるプロトコルの集合体を指します。","特に重要なのは、TCP（Transmission Control Protocol）、IP（Internet Protocol）、UDP（User Datagram Protocol）であり、これらはまとめてTCP/IPプロトコルスタックと呼ばれます。","TCP/IPスタックは、5層モデルのうちインターネット層（IP）とトランスポート層（TCP/UDP）に位置し、ネットワーク上の通信を成立させる役割を担っています。","実際のアプリケーションはこれらのプロトコルに直接触れることはなく、API（アプリケーション・プログラミング・インターフェース）を介してその機能を利用します。","この構造により、パケットの順番の維持、エラー訂正、フロー制御などの複雑な処理はすべてアプリケーションからは隠蔽され、開発者は通信の本質部分だけに集中できます。","APIの中でも最も一般的で重要なのが「ソケットAPI」で、アプリケーションが通信を開始・終了し、データを送受信するためのインターフェースです。","つまり、“インターネット”とは単一のサービスではなく、標準化されたプロトコル群によって構成される、グローバルなデータ通信の仕組みなのです。"],"originalSlideText":"„Das Internet“ (2)\\n❑ „Das Internet“ bezeichnet im Allgemeinen die Protokolle TCP, IP und UDP → gemeinsam als TCP/IP Protokoll-Stack bekannt\\n Implementierungen des Internet und Transport Layers im 5 Schichten Modell\\n❑ Es existieren APIs mit denen Anwendungen direkt die Dienste des TCP/IP Stack nutzen können  → Viele Aspekte der Fehlerkorrektur, Flusskontrolle, Reihenfolge der Daten, … sind vor der Anwendungen vorborgen\\n Bedeutendste API: Sockets","explanationImage":"","questionImage":""},{"id":20,"questionDe":"(s29) Welche zwei Kommunikationsklassen unterstützt TCP/IP?","questionJa":"TCP/IPはどの2つの通信クラスをサポートしているか？","answerDe":["Stream Transport:","– Implementiert durch TCP","– Verbindungsorientierte Übertragung von Byte-Strömen","Message Transport:","– Implementiert durch UDP","– Verbindungsloser Austausch von Nachrichten"],"answerJa":["ストリーム型通信（Stream Transport）：","– TCPによって実装されている","– バイトストリームを用いた接続型の通信","メッセージ型通信（Message Transport）：","– UDPによって実装されている","– 接続なしでメッセージをやり取りする通信方式"],"explanationDe":["Das TCP/IP-Modell unterstützt zwei grundlegende Arten der Datenübertragung – Stream Transport und Message Transport.","Beim Stream Transport handelt es sich um eine verbindungsorientierte Kommunikation, bei der Daten in Form eines kontinuierlichen Stroms von Bytes übertragen werden. Diese Form wird durch das Protokoll TCP realisiert.","TCP stellt sicher, dass die Daten korrekt, vollständig und in der richtigen Reihenfolge beim Empfänger ankommen – es baut dafür eine logische Verbindung zwischen Sender und Empfänger auf.","Typische Anwendungen sind Dateiübertragungen, Webzugriffe oder Videostreams – überall dort, wo zuverlässige Datenübertragung wichtig ist.","Im Gegensatz dazu steht der Message Transport, der über UDP abgewickelt wird. Hier werden Daten in diskrete, voneinander getrennte Nachrichten (Datagramme) aufgeteilt und ohne vorherige Verbindung gesendet.","UDP ist schneller, aber unzuverlässiger: Nachrichten können verloren gehen, in falscher Reihenfolge ankommen oder mehrfach übertragen werden.","Diese Form eignet sich z. B. für Echtzeitanwendungen wie VoIP oder Online-Gaming, wo Geschwindigkeit wichtiger ist als absolute Zuverlässigkeit."],"explanationJa":["TCP/IPは2種類の基本的な通信方式をサポートしています。それが「ストリーム型通信」と「メッセージ型通信」です。","ストリーム型通信はTCPによって実装されており、接続を確立したうえで、バイト列として連続的にデータを送信します。","TCPは通信の信頼性を重視しており、パケットが正しい順番で届き、欠損や重複がないよう保証します。ファイル転送やウェブアクセス、動画配信などに適しています。","一方、メッセージ型通信はUDPによって実装されており、事前の接続確立なしに個別のメッセージ（パケット）を送る方式です。","UDPでは、メッセージの順序保証や再送制御が行われないため、高速ではあるが信頼性は低くなります。","その分、リアルタイム性が求められる用途、たとえばVoIP（音声通話）やオンラインゲームなどには適しています。","この2つの通信クラスは、用途や要求される品質に応じて使い分けられます。"],"originalSlideText":"Kommunikationsklassen\\n❑ TCP/IP unterstützt zwei Arten der Kommunikation:\\n Stream Transport\\n• Implementiert von TCP\\n• Verbindungsorientierte Übertragung von Byte-Strömen\\n Message Transport\\n• Implementiert von UDP\\n• Verbindungsloser Austausch von Nachrichten","explanationImage":"","questionImage":""},{"id":21,"questionDe":"(s30–s32) Wie funktioniert der Stream Transport mit TCP?","questionJa":"TCPによるストリーム通信はどのように機能するか？","answerDe":["Daten einer Anwendung auf Host A werden als Byte-Stream zu einer Anwendung auf Host B übertragen.","TCP verarbeitet nur einfache Byte-Streams – Interpretation erfolgt in der Anwendungsschicht.","Der Stream wird in Pakete zerlegt – abhängig von Netz, Auslastung und Verarbeitungsgeschwindigkeit.","Am Ziel werden die Pakete korrekt zusammengesetzt, um den ursprünglichen Stream zu liefern.","TCP ist verbindungsorientiert – es wird vor der Übertragung eine Verbindung aufgebaut.","Die Verbindung ist bidirektional – es fließen zwei Streams gleichzeitig.","Nach Abschluss wird die Verbindung wieder abgebaut.","TCP bietet: verbindungsorientierte, 1-zu-1 Kommunikation, auf Byte-Streams basierend, beliebige Länge, häufigste Methode im Internet."],"answerJa":["アプリケーションAのデータは、バイトストリームとしてアプリケーションBへ転送される。","TCPはバイトストリームのみを処理し、データの意味解釈はアプリケーション層で行われる。","ストリームはネットワーク状況や処理速度に応じてパケットに分割される。","宛先ではパケットを正しく再構成し、元のストリームとしてアプリケーションに渡す。","TCPは接続型であり、通信前に接続を確立する。","接続は双方向で、2つのストリームが同時に流れる。","通信が完了すると、接続は解放される。","TCPは：接続型、1対1通信、バイトストリーム、任意の長さ、最も一般的な通信方式。"],"explanationDe":["Der Stream Transport mit TCP ist eine verbindungsorientierte Kommunikation, bei der zwei Anwendungen Daten als fortlaufenden Strom von Bytes austauschen.","Bevor die Übertragung beginnen kann, muss TCP eine Verbindung zwischen dem sendenden und empfangenden Host aufbauen – ähnlich wie ein Telefongespräch, das erst beginnt, wenn beide Seiten verbunden sind.","TCP sorgt für eine zuverlässige Kommunikation: Datenpakete werden in der richtigen Reihenfolge geliefert, doppelte Pakete werden erkannt und ignoriert, und verlorene Pakete werden erneut angefordert.","Da das Internet ein paketvermitteltes Netz ist, wird der Byte-Stream auf dem Weg zum Ziel in einzelne Pakete zerlegt. Die Größe dieser Pakete kann sich je nach Netzwerklast und Empfängerleistung ändern.","Am Empfänger setzt TCP diese Pakete wieder in der richtigen Reihenfolge zusammen, sodass die Anwendungsschicht den ursprünglichen Datenstrom erhält.","TCP-Verbindungen sind bidirektional: es gibt zwei parallele Datenströme – einer vom Sender zum Empfänger, einer zurück.","Diese Form der Übertragung eignet sich besonders für Anwendungen, die eine zuverlässige und geordnete Datenübertragung benötigen, wie z. B. Datei-Downloads, Webseiten, oder Streaming-Dienste mit Pufferung."],"explanationJa":["TCPによるストリーム通信は、2つのアプリケーション間でデータをバイトの連続としてやり取りする“接続型”の通信方式です。","通信開始前に接続が確立される必要があり、これは電話の通話を始めるようなものです。接続が確立された後に、データが一方向または双方向に流れ始めます。","TCPでは、送信されるデータを順序通りに正確に届けることが保証されています。パケットが欠損した場合は再送され、重複があれば無視され、すべてのパケットが正しく届くように制御されます。","インターネットはパケット交換方式であるため、バイトストリームは途中で複数のパケットに分割され、ネットワークの混雑度や相手の処理能力に応じて動的に調整されます。","受信側ではTCPが受け取ったパケットを正しい順番で再構成し、アプリケーションに元通りのストリームを提供します。","TCPの接続は双方向であるため、同時に2つのストリーム（送信側→受信側、受信側→送信側）が存在します。","TCPはファイルダウンロード、ウェブアクセス、ビデオストリーミング（バッファリングあり）など、信頼性と順序保証が必要な通信に最適な方式です。"],"originalSlideText":"Stream Transport (1)\\n❑ „Streaming“ von Daten einer Anwendung auf Host A zu einer anderen Anwendung auf Host B\\n TCP versteht nur einfache Byte Streams → Interpretation der Daten nur auf Anwendungsschicht\\n IP bildet ein Packet Switched Network → Auch der TCP Stream wird in einzelne Pakete zerlegt\\n• Größe der Pakete abhängig vom Netz, Netzauslastung und Verarbeitungsgeschwindigkeit der Kommunikationspartner\\n• Am Ziel so wieder zusammengestellt, dass der Ziel-Anwendung der ursprüngliche Stream geliefert werden kann\\n❑ Beispiele: Netflix-Stream, Datei-Download\\n\\nStream Transport (2)\\n❑ Verbindungsorientiert\\n Bevor zwei Anwendungen miteinander kommunizieren können müssen sie eine Verbindung aufbauen\\n• Vergleichbar mit einem Anruf über das Festnetz\\n Verbindung ist bi-direktional → Daten können in beide Richtung fließen → zwei Streams\\n Nachdem alle Daten ausgetauscht wurden wird die Verbindung wieder abgebaut\\n\\nStream Transport (3)\\n❑ Zusammenfassung:\\n Verbindungsorientiert\\n 1-zu-1 Kommunikation\\n Byte-Stream basiert\\n Jede Verbindung erzeugt zwei Streams → Sender zu Empfänger und Empfänger zu Sender\\n Byte Streams können eine beliebige Länge besitzen\\n❑ Das am häufigsten verwendete Verfahren","explanationImage":"","questionImage":""},{"id":22,"questionDe":"(s33–s34) Was sind Merkmale des Message Transports mit UDP?","questionJa":"UDPによるメッセージ通信の特徴は何か？","answerDe":["UDP bietet Anwendungen den Dienst zur Übertragung von Nachrichten.","Nachrichten werden so zugestellt, wie sie abgeschickt wurden – ohne Aggregation oder Aufteilung.","Es gibt keine Garantie für:","– Zustellung","– Reihenfolge","– Einmaligkeit (Mehrfachzustellung möglich)","Broadcast und Multicast sind möglich (1:N, M:N Kommunikation).","UDP ist verbindungslos.","Maximale Nachrichtengröße: 64 KB.","UDP wird hauptsächlich für Multimedia verwendet (z. B. VoIP).","Weniger als 5 % des gesamten Internet-Traffics basiert auf UDP."],"answerJa":["UDPはアプリケーションに対して、メッセージ単位の通信サービスを提供する。","メッセージは送信されたとおりに届けられ、まとめたり分割されたりしない。","以下の保証は存在しない：","– 配達保証","– 順序保証","– 一意性保証（重複して届く可能性あり）","ブロードキャストやマルチキャスト通信（1対多、多対多）が可能。","UDPは接続不要（コネクションレス）な通信方式である。","メッセージの最大サイズは64 KB。","UDPは主にマルチメディア用途（例：VoIP）で使われる。","インターネット全体のトラフィックのうちUDPは5%未満。"],"explanationDe":["UDP (User Datagram Protocol) ist ein einfaches, verbindungsloses Transportprotokoll, das für Anwendungen konzipiert ist, die geringe Latenz bevorzugen und auf Zuverlässigkeit verzichten können.","Beim Message Transport mit UDP wird jede Nachricht als eigenständiges Paket versendet, ohne dass vorher eine Verbindung aufgebaut werden muss.","Die Nachrichten werden exakt so übermittelt, wie sie abgeschickt wurden – es gibt keine Zusammenfassung mehrerer Nachrichten oder deren Aufspaltung in kleinere Teile.","UDP garantiert nicht, dass Nachrichten überhaupt ankommen, in der richtigen Reihenfolge eintreffen oder nur einmal zugestellt werden. Der Sender bekommt auch keine Rückmeldung über die erfolgreiche Zustellung.","Dafür bietet UDP extrem geringe Latenzzeiten und eignet sich hervorragend für Echtzeitanwendungen wie Internettelefonie (VoIP), Online-Gaming oder Live-Streaming.","Ein weiterer Vorteil von UDP ist die Möglichkeit zu Broadcast- und Multicast-Kommunikation, bei der ein Sender mehrere Empfänger gleichzeitig adressieren kann.","Die maximale Nachrichtengröße liegt bei 64 KB – das reicht für viele kleine, schnelle Transaktionen aus.","Trotz seiner Vorteile wird UDP relativ selten verwendet: weniger als 5 % des heutigen Internetverkehrs basiert auf UDP – im Gegensatz zu TCP mit etwa 95 %."],"explanationJa":["UDP（ユーザーデータグラムプロトコル）は、簡潔で軽量な接続不要型（コネクションレス）のトランスポートプロトコルです。","UDPによるメッセージ通信では、各メッセージが独立したパケットとして送信され、通信開始前の接続手続きは不要です。","送信されたメッセージはそのままの形でネットワークに送られ、複数のメッセージをまとめたり、1つのメッセージを分割したりすることはありません。","ただし、UDPには配達保証、順序保証、一意性保証（重複の防止）といった信頼性の機能は存在せず、送信者に成功通知が届くこともありません。","その分、通信遅延が極めて小さいため、リアルタイム性が重視される用途（例：IP電話、オンラインゲーム、ライブ配信など）に非常に適しています。","また、UDPは1対多（ブロードキャスト）や多対多（マルチキャスト）通信にも対応しており、複数の相手に同時にデータを送信することが可能です。","メッセージの最大サイズは64KBで、短い情報を高速にやり取りする用途には十分です。","しかし、TCPと比べると使用される頻度は低く、インターネット全体のトラフィックのうちUDPが占める割合は5%未満にとどまっています。"],"originalSlideText":"Message Transport (1)\\n❑ Bietet Anwendungen einen Dienst zur Übertragung von Nachrichten\\n❑ Nachrichten werden stets so zugestellt, wie sie abgeschickt wurden\\n Mehrere Nachrichten werden nicht aus Effizienzgründen zusammen aggregiert\\n Nachrichten werden nicht aufgeteilt\\n❑ Keine Garantien zur Zustellung der Daten → Out-of-Order Zustellung, Verlust und Mehrfachzustellung möglich\\n❑ Ermöglicht Broadcast und Multicast → 1:N sowie M:N Kommunikation\\n\\nMessage Transport (2)\\n❑ UDP\\n❑ Verbindungslos\\n❑ Max. 64 KB Nachrichten\\n❑ Hauptsächlich für Multimedia eingesetzt → geringe Latenz bei VoIP\\n❑ Weniger als 5% des gesamten Internet-Traffic","explanationImage":"","questionImage":""},{"id":23,"questionDe":"(s35–s36) Welche Rollen haben Client und Server in einer Netzwerkkommunikation?","questionJa":"ネットワーク通信におけるクライアントとサーバの役割は？","answerDe":["TCP ist verbindungsorientiert – eine Verbindung muss aufgebaut werden.","Server-Anwendung bietet einen Dienst an und wartet auf Verbindungen.","Client-Anwendung greift auf entfernte Dienste zu und initiiert die Verbindung.","Server startet zuerst und kennt die Clients nicht.","Client kennt den Server und baut aktiv die Verbindung auf.","Server empfängt Daten vom und sendet Daten zum Client.","Client sendet Daten zum und empfängt Daten vom Server.","Server bearbeitet viele Clients nacheinander oder parallel.","Client kann sich nach der Kommunikation beenden."],"answerJa":["TCPは接続型通信であるため、通信を開始するには接続の確立が必要。","サーバアプリケーションはサービスを提供し、接続要求を待機する。","クライアントアプリケーションはリモートのサービスにアクセスし、接続を開始する。","サーバは先に起動し、クライアントの存在を事前には知らない。","クライアントは接続先のサーバを知っており、自ら接続を確立する。","サーバはクライアントからデータを受信し、またデータを送信する。","クライアントはサーバにデータを送信し、またデータを受信する。","サーバは多数のクライアントに対して順次または並列に応答する。","クライアントは通信終了後に自動で終了することがある。"],"explanationDe":["In einer typischen Client-Server-Kommunikation übernimmt jede Seite eine feste Rolle, damit eine strukturierte Verbindung möglich ist.","TCP als zugrunde liegendes Protokoll ist verbindungsorientiert – das bedeutet, dass zunächst eine Verbindung aufgebaut werden muss, bevor Daten übertragen werden können.","Die Server-Anwendung ist passiv: Sie wartet auf eingehende Verbindungen von Clients. Sie kennt die Clients im Voraus nicht und startet zuerst.","Die Client-Anwendung hingegen ist aktiv: Sie kennt die Adresse des Servers und initiiert die Verbindung zu einem bestimmten Dienst.","Sobald die Verbindung aufgebaut ist, können beide Seiten Daten senden und empfangen – typischerweise startet der Client mit einer Anfrage (Request), worauf der Server antwortet (Response).","Server sind oft so konzipiert, dass sie viele Clients gleichzeitig bedienen können, sei es nacheinander oder durch parallele Prozesse oder Threads.","Ein Client dagegen ist oft für eine bestimmte Aufgabe zuständig, z. B. das Abrufen einer Webseite – und beendet sich nach erfolgreicher Kommunikation automatisch.","Diese feste Rollenverteilung vereinfacht das Design von Netzwerkprotokollen und ist Grundlage für viele Internetanwendungen, z. B. Web, Mail oder Datenbanken."],"explanationJa":["ネットワーク通信では、クライアントとサーバがそれぞれ明確な役割を担うことで、効率的で秩序ある通信が可能になります。","TCPは接続型プロトコルであり、通信を始めるには最初に接続を確立する必要があります。これを行うのはクライアントの役割です。","サーバアプリケーションは先に起動し、外部からの接続要求を待機します。どのクライアントが接続してくるかは事前には分かりません。","一方でクライアントは、接続したいサーバのアドレス（IPなど）を知っており、自ら接続を開始します。","接続後は、クライアントがリクエストを送信し、サーバがそれに対するレスポンスを返すという形で、双方向のデータ通信が行われます。","サーバは複数のクライアントを同時または順番に処理できるよう設計されており、並列処理の仕組み（スレッドなど）を使うこともあります。","クライアントは通常、特定の処理（例：Webページの取得）が完了すると、接続を切ってアプリケーションも終了することがあります。","このような役割の分担は、プロトコルの設計やネットワーク全体の構成を分かりやすくし、Webやメールなど多くのインターネットアプリケーションの基本構造になっています。"],"originalSlideText":"Rollen im Internet (1)\\n❑ Bisher gelernt: TCP ist verbindungsorientiert → Probleme\\n Welcher der beiden Kommunikationspartner baut die Verbindung auf?\\n Woher kennen sich die beiden Kommunikationspartner überhaupt?\\n❑ Lösung: Feste Rollenaufteilung zwischen Server und Client\\n Server-Anwendung: bietet einen Dienst an und wartet auf Verbindungen\\n Client-Anwendung: greift auf entfernte Dienste zu und baut die Verbindung auf\\n\\nRollen im Internet (2)\\nServer Anwendung\\tClient Anwendung\\nStartet zuerst\\t\\tStart als zweites\\nKennt die potentiellen Clients nicht\\t\\tMuss den Server kennen\\nWartet passiv auf Verbindungen von Clients\\tBaut aktiv die Verbindung zum Server auf\\nEmpfängt Daten vom und sendet Daten zum Client\\tSendet Daten zum und empfängt Daten vom Server\\nBearbeitet beliebig viele Clients nacheinander und teils parallel\\tBeendet sich möglicherweise nach erfolgreicher Kommunikation","explanationImage":"lecture03/lecture03_ex06.png","questionImage":""},{"id":24,"questionDe":"(s37) Was bezeichnet man mit dem Begriff „Server“ in der IT?","questionJa":"ITにおいて「サーバ」とは何を指すのか？","answerDe":["Der Begriff „Server“ bezeichnet häufig nicht nur die Anwendung, sondern auch die zugrunde liegende Hardware.","Server sind Computer mit leistungsfähiger Hardware:","– schnelle CPUs","– viele Kerne","– großer Arbeitsspeicher","– schnelle Netzanbindung","Auf ihnen laufen Server-Anwendungen."],"answerJa":["「サーバ」という言葉は、アプリケーションだけでなく、それを動かすハードウェア自体も意味することが多い。","サーバは高性能なハードウェアを備えたコンピュータである：","– 高速なCPU","– 多数のコア","– 大容量メモリ","– 高速ネットワーク接続","こうしたハードウェア上でサーバアプリケーションが動作する。"],"explanationDe":["In der IT wird der Begriff „Server“ oft doppeldeutig verwendet. Einerseits bezeichnet er eine Software – also ein Programm, das einen Dienst bereitstellt (z. B. ein Webserver).","Andererseits meint man mit „Server“ häufig auch die physische Maschine, auf der diese Software läuft.","Solche Server-Hardware unterscheidet sich deutlich von typischen Desktop-Rechnern: Sie sind für Dauerbetrieb ausgelegt und verfügen über leistungsfähige Komponenten.","Dazu gehören schnelle Mehrkernprozessoren, großer RAM, redundante Netzteile, RAID-Festplatten für Datensicherheit und vor allem eine stabile und schnelle Netzwerkanbindung.","Ein Server kann dabei mehrere Dienste gleichzeitig bereitstellen (z. B. Web, Datenbank, E-Mail) und viele Benutzer parallel bedienen.","In Rechenzentren stehen oft viele solcher Server, die gemeinsam eine skalierbare und hochverfügbare Infrastruktur bilden.","Zusammengefasst: Ein Server ist sowohl ein Dienstleister im Netzwerk als auch die spezialisierte Hardware, auf der dieser Dienst läuft."],"explanationJa":["ITの世界では「サーバ」という言葉は2つの意味で使われます。一つはサービスを提供するアプリケーション（例：Webサーバ）としての意味、もう一つはそれを実行する物理的なコンピュータ（ハードウェア）としての意味です。","後者としてのサーバは、通常の家庭用PCとは異なり、高性能で耐久性のある構成になっています。","たとえば、高速なマルチコアCPU、大容量のRAM、冗長電源、RAID構成のストレージ、高速かつ安定したネットワーク接続などを備えています。","このようなサーバは、複数のサービス（Web、データベース、メールなど）を同時に提供でき、多くのユーザーからのリクエストにも並列に対応できます。","大規模なデータセンターには、こうしたサーバが多数設置されており、クラウドやインターネットの基盤を形成しています。","つまり、「サーバ」とは、ネットワーク上でサービスを提供する“役割”を果たすソフトウェアであり、それを支える“専用のハードウェア”も意味するのです。"],"originalSlideText":"Rollen im Internet (3)\\n❑ Begriff „Server“ wird häufig auch für Hardware verwendet\\n Server sind Computer, die sich mit ihrer starken Hardware (schnelle CPUs, viele Kerne, großer Arbeitsspeicher, schnelle Netzanbindung, …) von Desktop-Rechnern abheben und auf denen Server-Anwendungen laufen","explanationImage":"lecture03/lecture03_ex07.png","questionImage":""},{"id":25,"questionDe":"(s38) Welche Arten von Nachrichten gibt es in Client/Server-Systemen?","questionJa":"クライアント／サーバ型システムにおけるメッセージの種類は？","answerDe":["Requests:","– Vom Client an den Server geschickt, um einen Dienst anzufordern.","Responses:","– Vom Server als Antwort auf den Request an den Client geschickt.","Pipelined Requests und Responses sind möglich.","Beispiel: WWW – Browser sendet HTTP-Request, Server antwortet mit HTML-Seite."],"answerJa":["リクエスト（Request）：","– クライアントからサーバにサービス要求として送られる。","レスポンス（Response）：","– サーバがリクエストに対してクライアントに返す応答。","複数のリクエストとレスポンスを連続して処理（パイプライン処理）することも可能。","例：WWW – ブラウザがHTTPリクエストを送信し、サーバがHTMLページで応答する。"],"explanationDe":["In Client/Server-Systemen findet die Kommunikation über strukturierte Nachrichten statt, die typischerweise in zwei Kategorien unterteilt werden: Requests und Responses.","Ein **Request** ist eine Nachricht, die vom Client zum Server gesendet wird, um eine bestimmte Dienstleistung anzufordern – z. B. das Laden einer Webseite, das Abrufen von E-Mails oder das Anfordern einer Datei.","Der **Response** ist die Antwort des Servers auf diesen Request. Er enthält die angeforderten Daten oder eine Statusmeldung, etwa ob die Anfrage erfolgreich war oder ein Fehler aufgetreten ist.","Diese Kommunikation kann sequentiell erfolgen (Anfrage → Antwort), oder über sogenannte **pipelined Requests**, bei denen mehrere Anfragen ohne Wartezeit hintereinander abgeschickt werden können – besonders bei Protokollen wie HTTP/1.1.","Ein anschauliches Beispiel ist der Zugriff auf eine Website: Der Webbrowser (Client) sendet einen HTTP-Request an den Server, der daraufhin mit einer HTML-Datei antwortet.","Diese klare Trennung von Anfrage und Antwort ist ein zentrales Prinzip der Client/Server-Architektur und ermöglicht einfache, nachvollziehbare Kommunikationsabläufe.","Auch moderne APIs (z. B. REST) basieren auf genau diesem Muster und nutzen HTTP als Transportprotokoll."],"explanationJa":["クライアント／サーバ型のシステムでは、通信は「リクエスト（要求）」と「レスポンス（応答）」という2つの種類のメッセージで行われます。","リクエストはクライアントがサーバに対して送信するメッセージで、ある特定のサービスや情報を要求するものです。例えば、Webページの取得、メールの読み出し、ファイルの要求などです。","レスポンスは、サーバがそのリクエストに応じて返す応答で、要求されたデータや処理結果、エラー情報などが含まれます。","これらは通常、1つのリクエストに対して1つのレスポンスという形で処理されますが、HTTP/1.1などでは「パイプライン処理」が可能で、複数のリクエストを連続して送信し、それぞれに対応したレスポンスを順次受け取ることもできます。","例としてWWWを挙げると、ブラウザ（クライアント）はHTTPリクエストをWebサーバに送信し、サーバはHTMLドキュメントを含むレスポンスで応答します。","このように、リクエストとレスポンスのペアによって成り立つ通信は、クライアント／サーバモデルの基本構造です。","現代の多くのWeb API（例：RESTful API）でもこの構造が使われており、標準化された通信方式の土台となっています。"],"originalSlideText":"Rollen im Internet (4)\\n❑ Client/Server Anwendungen sehen häufig zwei Arten von Nachrichten vor\\n Requests\\n• Vom Client zum Server geschickt um einen bestimmten Dienst anzufordern\\n Responses\\n• Vom Server zum Client als Antwort auf den Request\\n❑ Pipelined Requests und Responses sind möglich\\n❑ Beispiel WWW:\\n Browser verbindet sich zum HTTP-Server und fragt eine HTML-Seite an → Web-Server antwortet","explanationImage":"","questionImage":""},{"id":26,"questionDe":"(s39) Warum können Computer gleichzeitig mehrere Client- und Server-Anwendungen ausführen?","questionJa":"なぜ1台のコンピュータで複数のクライアント・サーバアプリケーションを同時に実行できるのか？","answerDe":["Computer können gleichzeitig mehrere Anwendungen ausführen – sowohl Client als auch Server.","Beispiele: E-Mail, Chat, Videostreaming.","Jede Anwendung kann mit einem anderen Server kommunizieren.","Clients können mehrfach geöffnet sein (z. B. mehrere Browserfenster).","Mehrere Server-Anwendungen auf derselben Hardware verbessern Auslastung und senken Kosten."],"answerJa":["コンピュータは複数のアプリケーションを同時に実行でき、クライアントもサーバも可能。","例：Eメール、チャット、ビデオストリーミング。","各アプリケーションは異なるサーバと通信できる。","クライアントアプリケーションは複数同時に開くことができる（例：複数のブラウザウィンドウ）。","1台のハードウェア上に複数のサーバアプリを動かすことで、リソースの有効活用とコスト削減が可能。"],"explanationDe":["Moderne Computer sind in der Lage, mehrere Prozesse gleichzeitig auszuführen – auch bekannt als Multitasking. Dadurch können auf einem einzigen Gerät sowohl Client- als auch Server-Anwendungen parallel betrieben werden.","Beispielsweise kann ein Benutzer gleichzeitig einen E-Mail-Client, ein Chat-Programm und einen Videostream-Dienst nutzen – jede Anwendung stellt eigene Netzwerkverbindungen her.","Zudem ist es möglich, mehrere Instanzen einer Client-Anwendung zu starten, etwa mehrere Browserfenster mit verschiedenen Webseiten.","Auch Server-Anwendungen können parallel laufen – z. B. ein Webserver und ein Datenbankserver auf derselben Maschine. Dies ist insbesondere in virtualisierten oder containerisierten Umgebungen gängig.","Technisch wird dies durch Betriebssysteme unterstützt, die jedem Prozess eigene Ressourcen (Ports, Speicher, CPU-Zeit) zuweisen.","Durch diese parallele Nutzung können Systeme effizienter arbeiten, die vorhandene Hardware besser auslasten und Kosten reduzieren – z. B. durch die gemeinsame Nutzung eines Servers für mehrere Dienste.","Dieses Prinzip ist Grundlage für moderne Hosting-Dienste, bei denen viele virtuelle Server auf einer physischen Maschine betrieben werden."],"explanationJa":["現代のコンピュータはマルチタスクに対応しており、1台のマシンで複数のプロセス（アプリケーション）を同時に実行できます。","そのため、クライアントアプリ（例：Eメールソフト、チャットアプリ、動画配信アプリ）とサーバアプリ（例：Webサーバ、データベースサーバ）を同時に稼働させることが可能です。","たとえば、1つのコンピュータでWebページを複数のブラウザウィンドウで表示しながら、同時にメールを送受信し、さらにサーバとして外部からの接続を受け付けることもできます。","また、1台のハードウェアで複数のサーバアプリケーションを実行することで、ハードウェアリソース（CPU、メモリ、ネットワーク帯域など）を効率的に活用できます。","オペレーティングシステムは、それぞれのアプリケーションに固有のポート番号やメモリ空間を割り当てており、衝突しないように管理しています。","これにより、リソースの無駄を減らし、システム全体の稼働率を向上させ、運用コストを抑えることができます。","このような仕組みは、クラウドやVPS（仮想専用サーバ）など、1台の物理マシン上で多数の仮想サーバを運用する現代のホスティング環境でも活用されています。"],"originalSlideText":"Rollen im Internet (5)\\n❑ Computer können gleichzeitig mehrere Client- als auch  Server-Anwendungen ausführen\\n E-Mail\\n Chat\\n Videostreaming\\n❑ Anwendungen kontaktieren möglicherweise jeweils einen anderen Server\\n❑ Clients können mehrfach geöffnet sein (z.B. mehrere Browserfenster)\\n❑ Mehrere Server-Anwendungen auf der gleichen Hardware erhöht die Auslastung und senkt Kosten","explanationImage":"","questionImage":""},{"id":27,"questionDe":"(s40) Warum implementieren Anwendungen oft sowohl Client- als auch Server-Funktionalität?","questionJa":"なぜアプリケーションはしばしばクライアントとサーバの両方の機能を持つのか？","answerDe":["Anwendungen benötigen oft sowohl Client- als auch Server-Funktionalität.","Beispiel: Eine PHP-Server-Anwendung greift auf eine MariaDB-Datenbank zu → sie fungiert als Client für den SQL-Server.","Zirkuläre Abhängigkeiten müssen vermieden werden.","Performance-Evaluierung solcher Systeme ist komplex."],"answerJa":["アプリケーションはクライアント機能とサーバ機能の両方を持つことが多い。","例：PHPサーバアプリケーションがMariaDBデータベースに接続する → データベースに対してはクライアントとして動作している。","このような構成では循環依存（サーバとクライアントが相互依存）を避ける必要がある。","こうした複合システムの性能評価は非常に複雑になる。"],"explanationDe":["In komplexen Softwaresystemen ist es häufig erforderlich, dass eine Anwendung gleichzeitig sowohl Client- als auch Server-Funktionalitäten implementiert.","Ein typisches Beispiel ist eine Webanwendung, die auf einem Server läuft und von Clients über HTTP angesprochen wird – also eine klassische Serverrolle übernimmt.","Gleichzeitig muss diese Anwendung oft selbst als Client agieren, z. B. wenn sie eine Datenbankabfrage an einen SQL-Server (wie MariaDB) stellt. Dabei verwendet sie die Rolle des Datenbank-Clients.","Solche Dualrollen sind in modernen Architekturen wie Microservices oder Web-Backends sehr verbreitet, wo Dienste sowohl Anfragen entgegennehmen als auch an andere Systeme weiterleiten.","Dabei entstehen Herausforderungen wie zirkuläre Abhängigkeiten – also Situationen, in denen zwei Systeme wechselseitig aufeinander angewiesen sind, was zu Deadlocks oder Warteschleifen führen kann.","Auch die Performance-Evaluierung wird schwieriger: Es ist schwer zu isolieren, welche Komponente Engpässe verursacht, da Server- und Client-Anteile in derselben Anwendung integriert sind.","Solche Strukturen erfordern sorgfältige Planung, Trennung von Zuständigkeiten und geeignete Monitoring-Strategien, um zuverlässig und effizient zu funktionieren."],"explanationJa":["現代のソフトウェアでは、1つのアプリケーションがサーバ機能とクライアント機能の両方を持つケースが一般的です。","たとえば、WebアプリケーションはHTTPを介して外部からのアクセスを受けるという点で“サーバ”として機能しますが、同時にデータベース（MariaDBなど）に接続して問い合わせを行う際には、“クライアント”として動作します。","このような構造は、マイクロサービスやWebバックエンドなどの複雑なアーキテクチャでは特に一般的です。各サービスが他のサービスと連携する必要があるため、送受信の両方の機能が必要となるのです。","ただし、こうした構成では「循環依存」に注意が必要です。これは、互いに相手に依存する関係が発生し、停止や無限ループの原因になる可能性があります。","また、パフォーマンスの評価も難しくなります。クライアント機能とサーバ機能が一体化しているため、どこがボトルネックなのか特定しにくくなるのです。","このようなシステムの設計では、機能の分離、依存関係の明確化、監視ツールの活用などが求められます。","適切に設計・管理されていれば、こうした統合型アプリケーションは高い柔軟性と拡張性を実現することができます。"],"originalSlideText":"Rollen im Internet (6)\\n❑ Anwendungen implementieren oft sowohl Server- als auch Client-Funktionalität\\n PHP-Server-Anwendung fragt eine MariaDB-Datenbank ab → Client für den SQL-Server\\n❑ Zirkuläre Abhängigkeiten müssen vermieden werden\\n❑ Komplizierte Performance-Evaluierung","explanationImage":"","questionImage":""},{"id":28,"questionDe":"(s41) Wie wird ein Server eindeutig identifiziert?","questionJa":"サーバはどのように特定されるか？","answerDe":["Clients müssen sich aktiv zu einer Server-Anwendung verbinden.","Identifikation erfolgt durch:","– IP-Adresse des Zielcomputers","– Portnummer zur Auswahl der richtigen Anwendung","IP-Adressen können über das Domain Name System (DNS) in sprechende Namen übersetzt werden (z. B. www.uni-leipzig.de).","Ports sind 16-Bit-Zahlen mit Standardwerten für bestimmte Dienste:","– HTTP: Port 80","– SSH: Port 23"],"answerJa":["クライアントはサーバアプリケーションに対して能動的に接続を行う必要がある。","サーバの識別は以下の情報によって行われる：","– サーバが動作するコンピュータのIPアドレス","– 対象のアプリケーションを特定するためのポート番号","IPアドレスはDNS（ドメインネームシステム）により人が読みやすい名前（例：www.uni-leipzig.de）に変換可能。","ポート番号は16ビットの数値で、代表的なサービスには標準ポートが割り当てられている：","– HTTP：ポート80","– SSH：ポート23"],"explanationDe":["Damit ein Client mit einer Server-Anwendung kommunizieren kann, muss er sie eindeutig identifizieren können – sowohl auf Netzwerk- als auch Anwendungsebene.","Zunächst erfolgt die Identifikation über die **IP-Adresse** des Computers, auf dem die Server-Anwendung läuft. Diese Adresse ist eindeutig im Netzwerk und kann über DNS in sprechende Namen (z. B. www.uni-leipzig.de) übersetzt werden.","DNS ermöglicht es, menschenlesbare Namen zu verwenden, ohne die numerischen IP-Adressen direkt kennen zu müssen.","Zusätzlich muss der Client wissen, **welche Anwendung** auf dem Server angesprochen werden soll – dazu dient die **Portnummer**.","Ports sind 16-Bit-Zahlen, also im Bereich von 0 bis 65535. Viele bekannte Dienste nutzen **standardisierte Ports**, z. B. HTTP (Port 80), SSH (Port 23), oder HTTPS (Port 443).","Durch die Kombination aus IP-Adresse und Port kann ein Client genau bestimmen, wohin die Daten geschickt werden sollen und welche Anwendung sie empfangen soll.","Dieses Adressierungssystem bildet die Grundlage für sämtliche Kommunikation im Internet – von Webseiten bis zu Datenbankabfragen."],"explanationJa":["クライアントがサーバと通信するためには、そのサーバアプリケーションを一意に識別できる必要があります。そのために使用されるのが「IPアドレス」と「ポート番号」です。","まず、IPアドレスはネットワーク上でコンピュータを一意に識別する番号で、これにより物理的な通信相手が特定されます。","ただしIPアドレスは数字で覚えにくいため、DNS（ドメインネームシステム）を使って「www.uni-leipzig.de」などの人間に読みやすい名前に変換されます。","次に、サーバ上には複数のアプリケーションが存在する可能性があるため、どのアプリケーションにアクセスするかを指定する必要があります。それが「ポート番号」です。","ポート番号は16ビットの数値（0〜65535）で、多くの一般的なサービスには既定のポート番号が割り当てられています。たとえばHTTPはポート80、SSHはポート23です。","このように、IPアドレスとポート番号の組み合わせによって、クライアントは通信相手（どのマシンの、どのサービス）を正確に指定できます。","この仕組みは、Webアクセスからリモートログイン、データベース接続に至るまで、あらゆるインターネット通信の基盤を成しています。"],"originalSlideText":"Server Adressierung (1)\\n❑ Clients müssen sich aktiv zu einer Server-Anwendung verbinden\\n❑ Identifikation der Server-Anwendung mittels\\n IP-Adresse: Adresse des Computers, auf dem die Server-Anwendung läuft\\n• Über das Domain Name System (DNS) werden IP-Adressen sprechende Bezeichner zugewiesen, z.B. www.uni-leipzig.de\\n TCP/UDP – Port: Auswahl der Server-Anwendung auf dem Ziel-Computer\\n• 16-Bit Zahl\\n• Standard-Ports für bestimmte Dienste\\n– HTTP: Port 80\\n– SSH: Port 23","explanationImage":"lecture03/lecture03_ex08.png","questionImage":""},{"id":29,"questionDe":"(s43) Wie funktioniert parallele Verarbeitung bei Servern?","questionJa":"サーバによる並列処理はどのように行われるか？","answerDe":["Server bearbeiten mehrere Verbindungen typischerweise parallel.","Ein Haupt-Thread nimmt neue Verbindungen entgegen.","Für jede akzeptierte Verbindung wird ein Handler-Thread gestartet.","Handler-Threads stammen aus einem Thread-Pool.","Es gibt eine Warteschlange für eingehende Verbindungen.","Ist der Thread-Pool leer, blockiert der Haupt-Thread und nimmt keine neuen Verbindungen an."],"answerJa":["サーバは複数の接続を通常並列に処理する。","メインスレッドが新しい接続を受け付ける。","接続を受け入れるたびに、処理用のハンドラースレッドが作成される。","ハンドラースレッドはスレッドプールから取り出される。","新規接続は待機キューに入れられる。","スレッドプールが空の場合、メインスレッドはブロックされ、新たな接続は一時的に受け付けられない。"],"explanationDe":["Um mehrere Clients gleichzeitig bedienen zu können, verwenden Server parallele Verarbeitung. Das bedeutet, dass mehrere Anfragen gleichzeitig angenommen und verarbeitet werden.","Der Server besitzt typischerweise einen Haupt-Thread, der ausschließlich dafür zuständig ist, neue eingehende Verbindungen zu akzeptieren.","Für jede dieser akzeptierten Verbindungen wird ein sogenannter Handler-Thread aus einem sogenannten Thread-Pool gestartet, der die Kommunikation mit dem jeweiligen Client übernimmt.","Ein Thread-Pool ist eine Sammlung vorgefertigter Threads, die bei Bedarf verwendet und nach Beendigung einer Aufgabe wieder dem Pool zurückgeführt werden. Das spart Ressourcen im Vergleich zur ständigen Neuanlage von Threads.","Eingehende Verbindungen werden in eine Warteschlange gelegt, wenn gerade keine Threads verfügbar sind.","Ist der Pool vollständig ausgelastet, muss der Haupt-Thread blockieren – das heißt, er kann keine weiteren Verbindungen annehmen, bis wieder ein Thread im Pool frei wird.","Dieses Modell ermöglicht eine hohe Auslastung und Skalierbarkeit, stellt aber auch Anforderungen an das Ressourcenmanagement und die Synchronisation zwischen Threads."],"explanationJa":["多くのクライアントからの同時アクセスに対応するため、サーバは並列処理の仕組みを用いています。これにより、複数のリクエストを同時に処理できるようになります。","サーバには「メインスレッド」があり、このスレッドは新しい接続の受付専用です。クライアントから接続要求が届くと、これを受け入れます。","接続が受け付けられると、その接続ごとに「ハンドラースレッド」と呼ばれる処理用スレッドが起動し、クライアントとの通信を担当します。","これらのスレッドはあらかじめ準備された「スレッドプール」から取得され、処理が終われば再利用されます。毎回新たにスレッドを生成するよりも効率的です。","スレッドがすぐに使えない場合、新規接続は一時的に「待機キュー」に入れられます。","しかし、スレッドプールがすべて使用中の場合、メインスレッドは一時的にブロックされ、新たな接続を受け付けられなくなります。","このモデルは高い並列性と応答性を実現する一方で、リソースの効率的な管理やスレッド間の同期などの課題にも対応する必要があります。"],"originalSlideText":"Parallele Verarbeitung\\n❑ Server bearbeiten mehrere Verbindungen typischerweise parallel → mehrere Threads → Clients behindern sich nicht gegenseitig\\n Ein Haupt-Thread zur Annahme von neuen Verbindungen\\n Ein Handler-Thread pro akzeptierter Verbindung → Bearbeitet die Daten / Requests des Clients\\n❑ Handler-Threads werden einem Thread-Pool entnommen\\n❑ Eine Warteschlange für eingehende Verbindungen→ ist der Thread-Pool leer blockiert der Haupt-Thread und nimmt zunächst keine neuen Anfragen mehr an","explanationImage":"","questionImage":""},{"id":30,"questionDe":"(s44) Was ist Peer-to-Peer Kommunikation und wie unterscheidet sie sich vom Client-Server-Modell?","questionJa":"P2P通信とは何で、クライアントサーバモデルとどう異なるか？","answerDe":["Einzelner Server ist Schwachstelle (Flaschenhals, Single Point of Failure).","Peer-to-Peer (P2P) trennt nicht mehr zwischen Client und Server.","Jede Anwendungsinstanz bietet auch Dienste an.","Beispiel: File Sharing mit BitTorrent."],"answerJa":["単一のサーバはボトルネックや単一障害点（Single Point of Failure）となる。","P2P（ピア・ツー・ピア）は、クライアントとサーバの区別をなくす通信方式。","各アプリケーション（ノード）がサービスを提供する機能も持つ。","例：BitTorrentによるファイル共有。"],"explanationDe":["Im klassischen Client-Server-Modell sind Rollen klar verteilt: Der Server bietet Dienste an, der Client konsumiert sie. Dabei stellt der Server einen zentralen Knotenpunkt dar.","Diese Zentralisierung bringt Nachteile: Der Server kann zum Flaschenhals werden, wenn zu viele Anfragen gleichzeitig kommen. Fällt er aus, sind alle Dienste betroffen (Single Point of Failure).","Im Gegensatz dazu gibt es bei der Peer-to-Peer (P2P)-Kommunikation keine feste Rollenverteilung – jede Instanz (Peer) kann sowohl Dienste bereitstellen als auch selbst nutzen.","Das macht P2P-Systeme robuster, skalierbarer und kosteneffizienter, da keine zentrale Infrastruktur benötigt wird.","Ein typisches Beispiel ist BitTorrent: Beim Herunterladen einer Datei wird diese in kleine Teile zerlegt, die von vielen Peers gleichzeitig geladen und verteilt werden.","Je mehr Teilnehmer vorhanden sind, desto leistungsfähiger wird das System – das Gegenteil vom klassischen Server, bei dem mehr Nutzer zu Überlastung führen können.","Allerdings bringt P2P auch Herausforderungen mit sich: Sicherheit, Verfügbarkeit und Verwaltung sind komplexer, da es keinen zentralen Kontrollpunkt gibt."],"explanationJa":["クライアント・サーバモデルでは、サーバがサービスを提供し、クライアントがそれを利用するという明確な役割分担があります。これは通信が一方向であることを前提にしています。","しかしこのモデルでは、サーバが1つのボトルネックになりがちで、アクセスが集中すると性能が落ちたり、障害が起きるとサービス全体が停止する可能性があります（Single Point of Failure）。","それに対してP2P（ピア・ツー・ピア）通信では、すべてのノード（端末）が対等な立場であり、クライアントにもサーバにもなれるという特徴があります。","このモデルでは、各ノードが自身の持つデータやサービスを他のノードと共有できるため、中央サーバが不要で、分散型の柔軟な通信が可能になります。","代表例はBitTorrentです。ファイルを小さなブロックに分割し、それぞれを複数の参加者（ピア）から同時にダウンロードすることで、効率的なファイル共有が実現されます。","利用者が増えれば増えるほど通信効率が上がるという、クライアント・サーバモデルとは逆の特性もあります。","ただし、P2Pにはセキュリティ管理や信頼性確保が難しいという課題もあり、適切な用途や仕組みの選定が必要です。"],"originalSlideText":"P2P Kommunikation\\n❑ Einzelner Server als Flaschenhals und Single Point of Failure\\n❑ Peer-To-Peer (P2P) – Anwendungen trennen nicht mehr zwischen Client und Server\\n❑ Jeder Anwendungsinstanz bietet auch Dienste an\\n Z.B. File Sharing mittels BitTorrent","explanationImage":"lecture03/lecture03_ex09.png","questionImage":""},{"id":31,"questionDe":"(s45) Welche grundlegenden Prinzipien gelten für das Internet und seine Protokolle?","questionJa":"インターネットとそのプロトコルに関する基本的な原則は何か？","answerDe":["Das Internet basiert auf offenen Standards und Protokollen.","Protokolle werden zu Protokollfamilien zusammengefasst.","Protokolle interagieren in einem Schichtmodell.","TCP/IP ist die Standard-Protokollfamilie im Internet.","Das OSI-Schichtenmodell mit 7 Schichten konnte sich nicht durchsetzen."],"answerJa":["インターネットはオープンな標準とプロトコルに基づいて構築されている。","プロトコルはプロトコルファミリーとしてまとめられる。","それらのプロトコルは階層構造（レイヤーモデル）で連携して動作する。","インターネットの標準プロトコルファミリーはTCP/IPである。","OSIの7層モデルは一般的には普及しなかった。"],"explanationDe":["Ein zentrales Prinzip des Internets ist die Verwendung von **offenen Standards** – das heißt, die verwendeten Protokolle sind öffentlich dokumentiert und frei verfügbar.","Diese Protokolle werden nicht isoliert entworfen, sondern zu sogenannten **Protokollfamilien** zusammengefasst – Gruppen von aufeinander abgestimmten Protokollen, die gemeinsam funktionieren.","Die bekannteste und am weitesten verbreitete Familie ist der **TCP/IP-Stack**, der sich im realen Einsatz gegenüber dem theoretisch eleganteren OSI-Modell durchgesetzt hat.","Protokolle innerhalb dieser Familie sind modular organisiert und arbeiten nach dem **Schichtenmodell**: Jede Schicht erfüllt eine bestimmte Aufgabe, z. B. Adressierung, Transport oder Anwendung.","Diese Trennung vereinfacht die Entwicklung, Wartung und Erweiterung des Systems, da einzelne Schichten unabhängig voneinander aktualisiert oder ausgetauscht werden können.","Das OSI-Modell, das ursprünglich von ISO/ITU entwickelt wurde, konnte sich in der Praxis nicht etablieren – es war zu komplex und wurde von der rasanten Entwicklung von TCP/IP überholt.","Die Offenheit und Modularität der TCP/IP-Architektur sind entscheidende Faktoren für die globale Verbreitung und Weiterentwicklung des Internets."],"explanationJa":["インターネットの根本原則の一つは、「オープンスタンダード」に基づいて構築されているという点です。つまり、使用されるプロトコルは誰でも参照・実装できるように公開されています。","これらのプロトコルは単独で使われるのではなく、機能ごとに分担された「プロトコルファミリー（例：TCP/IP）」として一体的に設計されています。","各プロトコルは階層構造（レイヤーモデル）で整理されており、アドレス指定、トランスポート、アプリケーションなど、役割に応じて分けられています。","この構造によって、特定の層だけを入れ替えたり改良したりでき、柔軟な拡張や保守が可能になります。","TCP/IPスタックは、こうした実用性と柔軟性により、理論的に整理された7層構造のOSIモデルを実用面で凌駕し、現在の標準となっています。","OSIモデルはISO/ITUによって設計されましたが、実際には複雑すぎて普及しませんでした。","このように、公開性とモジュール性は、インターネットの世界的普及と継続的発展を支える中核的な要素なのです。"],"originalSlideText":"Zusammenfassung (1)\\n❑ Für das Internet werden offene Standards und Protokolle benötigt\\n❑ Protokolle werden zu Familien zusammengefasst und interagieren in einem Schichtmodell\\n❑ TCP/IP ist die Standard Internet-Protokollfamilie\\n❑ OSI-Schichtenmodell mit 7 Schichten hat sich nicht durchgesetzt","explanationImage":"","questionImage":""},{"id":32,"questionDe":"(s46) Was sind die wichtigsten Merkmale von TCP, UDP und Anwendungen im Internet?","questionJa":"TCP、UDP、そしてネットワークアプリケーションに関する重要な特徴は何か？","answerDe":["„Das Internet“ bezeichnet den TCP/IP Protokoll-Stack.","TCP ist ein Streaming-Protokoll.","UDP ist ein Nachrichten-Protokoll.","Anwendungen nutzen TCP/IP über APIs.","Netzwerk-Anwendungen bestehen aus einem Client und einem Server."],"answerJa":["「インターネット」はTCP/IPプロトコルスタックを指す。","TCPはストリーミング（連続データ伝送）型プロトコルである。","UDPはメッセージ（個別データ伝送）型プロトコルである。","アプリケーションはAPIを通じてTCP/IPを利用している。","ネットワークアプリケーションはクライアントとサーバで構成される。"],"explanationDe":["Technisch gesehen ist das Internet durch den **TCP/IP-Protokoll-Stack** definiert – eine Sammlung von Protokollen, die zusammen die Datenübertragung ermöglichen.","Innerhalb dieses Stacks übernimmt **TCP** (Transmission Control Protocol) die zuverlässige, verbindungsorientierte Übertragung von Datenströmen. Es garantiert Reihenfolge, Vollständigkeit und Fehlerbehandlung – ideal für Webzugriffe, E-Mail oder Dateiübertragung.","**UDP** (User Datagram Protocol) hingegen ist ein einfaches, verbindungsloses Protokoll für schnelle, aber unzuverlässige Übertragung einzelner Nachrichten – bevorzugt bei Streaming, Online-Spielen oder VoIP.","Anwendungen wie Webbrowser, Mailclients oder Chat-Apps nutzen die Dienste von TCP oder UDP über **APIs**, wobei die wichtigste API-Schnittstelle die Socket-API ist.","Jede Netzwerkanwendung basiert auf einem **Client/Server-Modell**, bei dem der Client aktiv eine Verbindung aufbaut und der Server passiv auf Anfragen wartet.","Diese Struktur ist die Grundlage für praktisch alle heutigen Internetdienste und ermöglicht eine klare Arbeitsteilung zwischen den Kommunikationspartnern."],"explanationJa":["技術的に「インターネット」とは、TCP/IPという一連のプロトコル群（スタック）によって構成されています。","その中で**TCP**は、信頼性の高い通信を実現する接続型のプロトコルです。パケットの順序や完全性を保証し、エラー処理も行うため、Webアクセスやファイル転送、Eメールなどに適しています。","一方で**UDP**は、接続を必要としない軽量なプロトコルで、1つ1つのメッセージを高速に送るのに適しています。信頼性は保証されませんが、リアルタイム性が重要なVoIPやオンラインゲーム、動画ストリーミングなどで使われます。","アプリケーションはこれらのプロトコルを直接扱うのではなく、**API（アプリケーション・プログラミング・インターフェース）**を介して利用します。Socket APIが代表的です。","すべてのネットワークアプリケーションは基本的に**クライアントとサーバ**で構成されており、クライアントが接続を開始し、サーバがサービスを提供します。","この構造は、Web、メール、チャット、クラウドサービスなど、現代のあらゆるインターネットサービスの基盤となっています。"],"originalSlideText":"Zusammenfassung (2)\\n❑ „Das Internet“ bezeichnet den TCP/IP Protokoll-Stack\\n❑ TCP ist ein Streaming-Protokoll\\n❑ UDP ist ein Nachrichten-Protokoll\\n❑ Anwendungen nutzen TCP/IP über APIs\\n❑ Netzwerk-Anwendungen bestehen aus einem Client und einem Server","explanationImage":"","questionImage":""}]');const u={class:"container py-4"},g={class:"text-center mb-5"},h={class:"display-5 fw-bold text-primary"},m={class:"fs-5 text-muted"},c={class:"text-dark"};var k={__name:"Lecture03Page",setup(e){const n=(0,s.lq)(),i=(0,a.KR)(""),k=(0,a.KR)(""),w=(0,a.KR)(""),b=(0,a.KR)([]);return(0,t.sV)(()=>{const e="lecture03",t=parseInt(n.name.split("_")[1]),r=l[e];i.value=r.title,w.value=t.toString().padStart(2,"0");const a=r.lectures.find(e=>e.number===t);k.value=a?a.title:"",b.value=o}),(e,n)=>((0,t.uX)(),(0,t.CE)("div",u,[(0,t.Lk)("div",g,[(0,t.Lk)("h1",h,(0,r.v_)(i.value),1),(0,t.Lk)("p",m,[(0,t.eW)(" Lecture "+(0,r.v_)(w.value)+": ",1),(0,t.Lk)("span",c,(0,r.v_)(k.value),1)]),n[0]||(n[0]=(0,t.Lk)("hr",{class:"w-25 mx-auto border-primary"},null,-1))]),((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(b.value,e=>((0,t.uX)(),(0,t.Wv)(d.A,{key:e.id,question:e},null,8,["question"]))),128))]))}};const w=k;var b=w}}]);
//# sourceMappingURL=4381.127e5bf6.js.map