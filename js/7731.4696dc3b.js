"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[7731],{7244:function(a,d,t){t.r(d),t.d(d,{default:function(){return v}});var e=t(6768),s=t.p+"img/Figure_0802.676ab455.png";const r={class:"container my-4"};var n={__name:"chapter15_81",setup(a){return(a,d)=>((0,e.uX)(),(0,e.CE)("div",r,d[0]||(d[0]=[(0,e.Fv)('<h3 class="mb-4" data-v-77fd8788>8 AIMD</h3><div class="container my-4" data-v-77fd8788><h3 class="mb-4" data-v-77fd8788>8. AIMDと輻輳制御の基礎</h3><div class="border rounded p-3 bg-light mb-4" data-v-77fd8788><p data-v-77fd8788><strong data-v-77fd8788>Aufgabe:</strong><br data-v-77fd8788> Erklären Sie den Ablauf des AIMD-Algorithmus anhand des Diagramms unten: Wie reagiert der Algorithmus auf steigende Netzbelastung? </p><hr data-v-77fd8788><p data-v-77fd8788><strong data-v-77fd8788>問題:</strong><br data-v-77fd8788> 下の図を参考にしながら、AIMDアルゴリズムの仕組みと、ネットワーク混雑にどのように反応するかを説明しなさい。 </p></div><div class="text-center mb-4" data-v-77fd8788><img src="'+s+'" class="img-fluid" alt="AIMD Congestion Control Graph" data-v-77fd8788><p class="text-muted mt-2" data-v-77fd8788>図 8.2 — AIMDに基づく輻輳ウィンドウの変化</p></div><div class="row" data-v-77fd8788><div class="col-md-6" data-v-77fd8788><h5 data-v-77fd8788>Erklärung (Deutsch)</h5><p data-v-77fd8788> Der AIMD-Algorithmus (Additive Increase, Multiplicative Decrease) ist eine Methode zur Kontrolle der Netzwerküberlastung. </p><ul data-v-77fd8788><li data-v-77fd8788><strong data-v-77fd8788>Additive Increase:</strong> Solange keine Überlastung erkannt wird, erhöht der Sender sein Congestion Window (cwnd) schrittweise – <span style="color:red;" data-v-77fd8788>typischerweise um 1 MSS (Maximum Segment Size) pro Round Trip Time.</span></li><li data-v-77fd8788><strong data-v-77fd8788>Multiplicative Decrease:</strong> Sobald ein Paketverlust erkannt wird (z. B. <span style="color:red;" data-v-77fd8788>durch Timeout oder dreifaches ACK</span>), wird das Fenster <strong data-v-77fd8788>multiplikativ reduziert</strong>, z. B. halbiert (cwnd × 0.5).</li></ul><p data-v-77fd8788> Die Abbildung zeigt diesen zyklischen Ablauf: Ein stetiger Anstieg der Fenstergröße, gefolgt von einem plötzlichen Rückgang – ein klassisches Verhalten von TCP-Kongestionskontrolle. </p></div><div class="col-md-6" data-v-77fd8788><h5 data-v-77fd8788>解説（日本語）</h5><p data-v-77fd8788> AIMD（加算法増加・乗算法減少）は、TCPで使われる典型的な輻輳制御アルゴリズムです。 </p><ul data-v-77fd8788><li data-v-77fd8788><strong data-v-77fd8788>加算的増加（AI）:</strong> パケットロスが検出されない間は、<span style="color:red;" data-v-77fd8788>送信ウィンドウ（cwnd）を1RTTごとに少しずつ増やしていきます（通常は1MSSずつ）。</span></li><li data-v-77fd8788><strong data-v-77fd8788>乗算的減少（MD）:</strong> パケット損失が発生すると（タイムアウトや重複ACKなど）、cwndを<strong data-v-77fd8788>一気に半分に減少</strong>させます。</li></ul><p data-v-77fd8788> この図はその動きを表しています。ウィンドウサイズは徐々に上昇しますが、ロスが起こると急に落ちて再び上昇する…というサイクルが繰り返されます。 </p></div></div></div>',2)])))}},i=t(1241);const l=(0,i.A)(n,[["__scopeId","data-v-77fd8788"]]);var v=l}}]);
//# sourceMappingURL=7731.4696dc3b.js.map