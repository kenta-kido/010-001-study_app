{"version":3,"file":"js/7731.4696dc3b.js","mappings":"qTACEA,EAAAA,EAAAA,IAuDM,MAvDNC,EAuDMC,EAAA,KAAAA,EAAA,K,s+EClDR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_81.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_81.vue?9199"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">8 AIMD</h3>\r\n<div class=\"container my-4\">\r\n  <h3 class=\"mb-4\">8. AIMDと輻輳制御の基礎</h3>\r\n\r\n  <!-- 問題文 -->\r\n  <div class=\"border rounded p-3 bg-light mb-4\">\r\n    <p><strong>Aufgabe:</strong><br />\r\n      Erklären Sie den Ablauf des AIMD-Algorithmus anhand des Diagramms unten: Wie reagiert der Algorithmus auf steigende Netzbelastung?\r\n    </p>\r\n    <hr />\r\n    <p><strong>問題:</strong><br />\r\n      下の図を参考にしながら、AIMDアルゴリズムの仕組みと、ネットワーク混雑にどのように反応するかを説明しなさい。\r\n    </p>\r\n  </div>\r\n\r\n  <!-- 図の挿入 -->\r\n  <div class=\"text-center mb-4\">\r\n    <img src=\"@/assets/lecture/lecture03/Figure_0802.png\" class=\"img-fluid\" alt=\"AIMD Congestion Control Graph\">\r\n    <p class=\"text-muted mt-2\">図 8.2 — AIMDに基づく輻輳ウィンドウの変化</p>\r\n  </div>\r\n\r\n  <!-- 解説 -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h5>Erklärung (Deutsch)</h5>\r\n      <p>\r\n        Der AIMD-Algorithmus (Additive Increase, Multiplicative Decrease) ist eine Methode zur Kontrolle der Netzwerküberlastung.\r\n      </p>\r\n      <ul>\r\n        <li><strong>Additive Increase:</strong> Solange keine Überlastung erkannt wird, erhöht der Sender sein Congestion Window (cwnd) schrittweise – <span style=\"color: red;\">typischerweise um 1 MSS (Maximum Segment Size) pro Round Trip Time.</span></li>\r\n        <li><strong>Multiplicative Decrease:</strong> Sobald ein Paketverlust erkannt wird (z.&nbsp;B. <span style=\"color: red;\">durch Timeout oder dreifaches ACK</span>), wird das Fenster <strong>multiplikativ reduziert</strong>, z.&nbsp;B. halbiert (cwnd × 0.5).</li>\r\n      </ul>\r\n      <p>\r\n        Die Abbildung zeigt diesen zyklischen Ablauf: Ein stetiger Anstieg der Fenstergröße, gefolgt von einem plötzlichen Rückgang – ein klassisches Verhalten von TCP-Kongestionskontrolle.\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <h5>解説（日本語）</h5>\r\n      <p>\r\n        AIMD（加算法増加・乗算法減少）は、TCPで使われる典型的な輻輳制御アルゴリズムです。\r\n      </p>\r\n      <ul>\r\n        <li><strong>加算的増加（AI）:</strong> パケットロスが検出されない間は、<span style=\"color: red;\">送信ウィンドウ（cwnd）を1RTTごとに少しずつ増やしていきます（通常は1MSSずつ）。</span></li>\r\n        <li><strong>乗算的減少（MD）:</strong> パケット損失が発生すると（タイムアウトや重複ACKなど）、cwndを<strong>一気に半分に減少</strong>させます。</li>\r\n      </ul>\r\n      <p>\r\n        この図はその動きを表しています。ウィンドウサイズは徐々に上昇しますが、ロスが起こると急に落ちて再び上昇する…というサイクルが繰り返されます。\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Keine zusätzliche Logik erforderlich\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_81.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_81.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_81.vue?vue&type=style&index=0&id=77fd8788&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-77fd8788\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}