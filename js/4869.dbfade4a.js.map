{"version":3,"file":"js/4869.dbfade4a.js","mappings":"gRACEA,EAAAA,EAAAA,IAkFM,MAlFNC,EAkFMC,EAAA,KAAAA,EAAA,K,+nJC7ER,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_22.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_22.vue?bd43"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">2(b) Keine Kollisionen bei Switch</h3>\r\n\r\n    <!-- 問題文 -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n      <p><strong>Aufgabe:</strong><br />\r\n        Warum gibt es bei Switches keine Kollisionen?\r\n      </p>\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        なぜスイッチでは衝突（コリジョン）が発生しないのか？\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答 -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n        <ul>\r\n          <li>In einem modernen Ethernet-Netzwerk ist jeder Host über eine eigene Punkt-zu-Punkt-Verbindung direkt mit dem Switch verbunden.</li>\r\n          <li>Im Gegensatz zu früheren Bus-Topologien oder Hub-basierten Netzwerken, wo mehrere Geräte sich eine Leitung teilten, hat bei einem Switch jeder Port seinen eigenen Übertragungskanal.</li>\r\n          <li>Switches arbeiten im Vollduplex-Modus: Senden und Empfangen ist gleichzeitig möglich, ohne dass Signale sich gegenseitig stören.</li>\r\n          <li>Ein Switch nutzt Store-and-Forward-Verfahren und kontrolliert aktiv den Datenfluss – es wird niemals mehr als ein Frame gleichzeitig über denselben Port weitergeleitet.</li>\r\n          <li>Dadurch gibt es keine Kollisionen und Protokolle wie CSMA/CD, die früher zur Kollisionsvermeidung dienten, sind heute überflüssig.</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        <ul>\r\n          <li>現在のイーサネットでは、各ホストはスイッチと1対1で接続されており、「ポイント・ツー・ポイント接続」と呼ばれます。</li>\r\n          <li>これは、過去のバス型トポロジーやハブを使用した構成（複数の端末が同じ通信路を共有）とは異なり、各通信が独立していることを意味します。</li>\r\n          <li>スイッチは<strong>フルデュプレックス通信</strong>に対応しており、送信と受信が同時に可能であるため、信号がぶつかる（＝衝突）ことはありません。</li>\r\n          <li>スイッチは<strong>ストア・アンド・フォワード方式</strong>で、各ポートに送るフレームを一つずつ管理するため、物理的に同じラインに複数のフレームが流れることはありません。</li>\r\n          <li>そのため、過去にバス型Ethernetで使用されていた<strong>CSMA/CD</strong>のようなMACプロトコルは、現代のスイッチベースのネットワークでは不要となっています。</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 解説 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Erklärung (Deutsch)</h5>\r\n        <p>\r\n          In den frühen Tagen von Ethernet wurde meist eine <strong>Bus-Topologie</strong> verwendet – ein einziges Kabel verband alle Geräte. Diese teilten sich das Medium und konnten nicht gleichzeitig senden, ohne dass es zu Kollisionen kam.\r\n        </p>\r\n        <p>\r\n          Um diese Kollisionen zu erkennen und zu kontrollieren, wurde das <strong>CSMA/CD</strong>-Protokoll eingeführt: Geräte hörten auf das Medium, bevor sie sendeten, und stoppten bei Kollisionen.\r\n        </p>\r\n        <p>\r\n          Mit dem Übergang zu <strong>Hub-basierten Stern-Topologien</strong> blieb das physikalische Layout zwar sternförmig, aber logisch war es weiterhin ein geteiltes Medium – also weiterhin kollisionsanfällig.\r\n        </p>\r\n        <p>\r\n          Moderne Switches verbinden jeden Host über eine eigene, dedizierte Leitung mit dem Switch.\r\n          <br/>Außerdem unterstützen sie Vollduplex-Kommunikation sowie das Speichern und Weiterleiten von Frames (Store-and-Forward).\r\n          <br/>Bei diesem Verfahren <span style=\"color: red;\">wird ein Frame zunächst im Speicher abgelegt, bevor der Switch den Zielport bestimmt.</span> Dadurch können Übertragungsfehler leichter erkannt und vermieden werden.\r\n        </p>\r\n        <p>\r\n          Da es durch diese Struktur weder physikalisch noch logisch zu Kollisionen kommt, ist ein MAC-Protokoll wie CSMA/CD im heutigen Ethernet mit Switches nicht mehr notwendig.\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解説（日本語）</h5>\r\n        <p>\r\n          初期のEthernetでは、<strong style=\"color: red;\">バス型トポロジー</strong>が一般的で、1本のケーブルに複数のホストが接続されていました。この構成では、複数の端末が同時に送信すると<strong>衝突（コリジョン）</strong>が発生します。\r\n        </p>\r\n        <p>\r\n          そのため、「送信前にキャリア（信号）を感知し、衝突時にはランダムに再送する」<strong>CSMA/CD</strong> というMACプロトコルが必要でした。\r\n        </p>\r\n        <p>\r\n          その後、<span style=\"color: red;\"><strong>ハブ</strong>を用いたスター型トポロジー</span>が導入されましたが、信号は全ポートにブロードキャストされるため、論理的には依然としてバスと同様の問題を抱えていました。\r\n        </p>\r\n        <p>\r\n          現在主流のスイッチは、各ホストとスイッチが<strong>1対1の専用リンク</strong>で接続され、しかも<strong>フルデュプレックス通信</strong>と<strong>パケットの一時保存と順次転送（ストア・アンド・フォワード）</strong>によって、衝突が起こらない構造になっています。\r\n          <br/>この方式では、<span style=\"color: red;\">フレームを一度メモリに蓄積してから宛先ポートを判断</span>するため、誤送信やフレームエラーも防ぎやすくなっています。\r\n        </p>\r\n        <p>\r\n          このように、物理的・論理的にコリジョンが構造的に排除されているため、CSMA/CDのような衝突回避のためのMACプロトコルは、今日のスイッチ型Ethernetでは必要なくなっています。\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// No logic required\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_22.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_22.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_22.vue?vue&type=style&index=0&id=fbcda0d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fbcda0d6\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}