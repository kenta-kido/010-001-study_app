"use strict";(self["webpackChunkstudy_site"]=self["webpackChunkstudy_site"]||[]).push([[1819],{9334:function(a,e,d){d.r(e),d.d(e,{default:function(){return u}});var t=d(6768),r=d(144),s=d.p+"img/Figure_0602.65f333ba.png";const i={class:"container my-4"},v={class:"text-center my-4"},n=["src"];var l={__name:"chapter15_61",setup(a){return(a,e)=>((0,t.uX)(),(0,t.CE)("div",i,[e[1]||(e[1]=(0,t.Fv)('<h3 class="mb-4" data-v-528530a3>6(a) UDP – Bereich der Prüfsumme im Header</h3><div class="border rounded p-3 bg-light mb-4" data-v-528530a3><p data-v-528530a3><strong data-v-528530a3>Aufgabe:</strong><br data-v-528530a3> Über welchen Bereich werden die Prüfsummen im UDP-Header angegeben?<br data-v-528530a3> Was genau wird durch die Prüfsumme abgedeckt, und warum ist das nötig? </p><hr data-v-528530a3><p data-v-528530a3><strong data-v-528530a3>問題:</strong><br data-v-528530a3> UDPヘッダのチェックサムは、どの範囲を対象として指定されているか？<br data-v-528530a3> どのような部分に対して計算され、なぜそれが必要なのか？ </p></div><div class="row" data-v-528530a3><div class="col-md-6" data-v-528530a3><h5 data-v-528530a3>Antwort (Deutsch)</h5><p data-v-528530a3> Die <strong data-v-528530a3>UDP-Prüfsumme</strong> ist ein Feld im UDP-Header, das <em data-v-528530a3>über einen bestimmten Datenbereich berechnet</em> wird und dann im Header angegeben wird. </p><p data-v-528530a3> Der berechnete Wert bezieht sich nicht nur auf das UDP-Segment selbst, sondern auch auf wichtige Informationen aus der IP-Schicht. Dadurch wird sichergestellt, dass das Paket korrekt beim Empfänger ankommt. </p><p data-v-528530a3>Der Prüfsummenbereich umfasst:</p><ul data-v-528530a3><li data-v-528530a3>den gesamten UDP-Header (8 Byte)</li><li data-v-528530a3>die UDP-Nutzdaten (Application Data)</li><li data-v-528530a3>einen sogenannten <strong data-v-528530a3>Pseudo-Header</strong> aus der IP-Schicht:</li><ul data-v-528530a3><li data-v-528530a3>Quell-IP-Adresse</li><li data-v-528530a3>Ziel-IP-Adresse</li><li data-v-528530a3>Protokollnummer (17 für UDP)</li><li data-v-528530a3>Länge des UDP-Segments</li></ul></ul><p data-v-528530a3> Diese Konstruktion erhöht die <strong data-v-528530a3>Zuverlässigkeit</strong> in der Datenübertragung, obwohl UDP selbst verbindungslos ist. </p></div><div class="col-md-6" data-v-528530a3><h5 data-v-528530a3>解答（日本語）</h5><p data-v-528530a3><strong data-v-528530a3>UDPのチェックサム</strong>は、ヘッダ内にある16ビットのフィールドで、<em data-v-528530a3>特定の範囲に対して計算された値</em>が記録されています。 </p><p data-v-528530a3> このチェックサムによって、UDPセグメントの転送中にデータの破損や改ざんがないかを受信側が検出できます。 </p><p data-v-528530a3>チェックサムが計算される対象は以下の通りです：</p><ul data-v-528530a3><li data-v-528530a3>UDPヘッダ全体（8バイト）</li><li data-v-528530a3>UDPデータ（アプリケーションからのメッセージ）</li><li data-v-528530a3>IP層の「擬似ヘッダ（Pseudo Header）」：</li><ul data-v-528530a3><li data-v-528530a3>送信元IPアドレス</li><li data-v-528530a3>宛先IPアドレス</li><li data-v-528530a3>プロトコル番号（UDPは17）</li><li data-v-528530a3>UDPの全長（ヘッダ＋データ）</li></ul></ul><p data-v-528530a3> このようにして、UDP単体では補えないIP層との整合性も含めて、<strong data-v-528530a3>パケットの完全性を確認</strong>する仕組みとなっています。 </p></div></div>',3)),(0,t.Lk)("div",v,[(0,t.Lk)("img",{src:(0,r.R1)(s),alt:"UDP-Pseudo-Header",class:"img-fluid rounded border"},null,8,n),e[0]||(e[0]=(0,t.Lk)("p",{class:"text-muted mt-2"},"Abbildung: UDP-Pseudo-Header",-1))]),e[2]||(e[2]=(0,t.Fv)('<div class="row mb-4" data-v-528530a3><div class="col-12" data-v-528530a3><p class="fw-bold fs-5" style="color:#004085;" data-v-528530a3> UDPチェックサムはオプション（ただしIPv6では必須）<br data-v-528530a3> UDP-Prüfsumme ist optional (aber bei IPv6 verpflichtend) </p></div></div><div class="row mt-4" data-v-528530a3><div class="col-md-6" data-v-528530a3><h5 data-v-528530a3>Erklärung (Deutsch)</h5><p data-v-528530a3> Im UDP-Protokoll ist die Prüfsumme unter IPv4 offiziell <strong data-v-528530a3>optional</strong>. Das bedeutet: </p><ul data-v-528530a3><li data-v-528530a3>Wenn die Prüfsumme den Wert <code data-v-528530a3>0x0000</code> hat, wird sie ignoriert.</li><li data-v-528530a3>Das UDP-Paket wird trotzdem akzeptiert, ohne Validierung.</li></ul><p data-v-528530a3> Bei IPv6 hingegen ist die UDP-Prüfsumme <strong data-v-528530a3>verpflichtend</strong> und darf <strong data-v-528530a3>niemals 0</strong> sein. Andernfalls wird das Paket vom Empfänger verworfen. </p></div><div class="col-md-6" data-v-528530a3><h5 data-v-528530a3>解説（日本語）</h5><p data-v-528530a3> UDPプロトコルでは、IPv4環境下において<strong data-v-528530a3>チェックサムは任意</strong>です。つまり： </p><ul data-v-528530a3><li data-v-528530a3>チェックサムが <code data-v-528530a3>0x0000</code> の場合、チェック処理は行われません。</li><li data-v-528530a3>そのパケットは、内容が壊れていても<strong data-v-528530a3>そのまま受け取られる</strong>ことがあります。</li></ul><p data-v-528530a3> しかし<strong data-v-528530a3>IPv6ではチェックサムは必須</strong>で、値が0であることは許されていません。<br data-v-528530a3> そのようなUDPパケットは<strong data-v-528530a3>破棄されます</strong>。 </p></div></div><div class="row mb-4" data-v-528530a3><div class="col-12" data-v-528530a3><p class="fw-bold fs-5" style="color:#004085;" data-v-528530a3> 計算結果が全て0のときの置き換え規則（0xFFFF）<br data-v-528530a3> Regel für Prüfsumme = 0: Ersetzung durch 0xFFFF </p></div></div><div class="row mt-4" data-v-528530a3><div class="col-md-6" data-v-528530a3><h5 data-v-528530a3>Erklärung (Deutsch)</h5><p data-v-528530a3> Wenn die Prüfsumme nach der Berechnung <code data-v-528530a3>0x0000</code> ergibt, darf sie nicht direkt im UDP-Header eingetragen werden. Denn <code data-v-528530a3>0x0000</code> steht für „<em data-v-528530a3>keine Prüfsumme verwendet</em>“. </p><p data-v-528530a3> Um Verwechslung zu vermeiden, wird stattdessen <strong data-v-528530a3><code data-v-528530a3>0xFFFF</code></strong> eingetragen. Dies ist laut <strong data-v-528530a3>RFC 768</strong> die offizielle Regel. </p><p data-v-528530a3> Bei der Validierung wird die Prüfsumme wieder hinzuaddiert. Falls das ursprüngliche Datenwort <code data-v-528530a3>0xFFFF</code> war, ergibt sich durch <code data-v-528530a3>0xFFFF + 0xFFFF = 0x1FFFE</code> → mit Carry-Rückführung wieder <code data-v-528530a3>0xFFFF</code>. Das Paket gilt somit als korrekt. </p></div><div class="col-md-6" data-v-528530a3><h5 data-v-528530a3>解説（日本語）</h5><p data-v-528530a3> UDPチェックサムの計算結果が <code data-v-528530a3>0x0000</code>（全ビット0）になることがあります。 しかしこの値は「チェックサム未使用」という意味にとられてしまうため、 <strong data-v-528530a3>そのままでは使えません。</strong></p><p data-v-528530a3> そのため、計算結果が0x0000であっても、 <strong data-v-528530a3>代わりに<code data-v-528530a3>0xFFFF</code>（全ビット1）をUDPヘッダに記載する</strong>というルールが定められています（RFC 768）。 </p><p data-v-528530a3> 受信側ではチェック時に <code data-v-528530a3>0xFFFF + 0xFFFF = 0x1FFFE</code> のようになっても、 キャリービットを加算（折り返し）して <code data-v-528530a3>0xFFFF</code> になるので、<strong data-v-528530a3>正常と判断されます</strong>。 </p></div></div>',4))]))}},o=d(1241);const c=(0,o.A)(l,[["__scopeId","data-v-528530a3"]]);var u=c}}]);
//# sourceMappingURL=1819.bd152c89.js.map