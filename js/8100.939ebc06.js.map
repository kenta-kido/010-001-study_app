{"version":3,"file":"js/8100.939ebc06.js","mappings":"qTACEA,EAAAA,EAAAA,IAiKM,MAjKNC,EAiKMC,EAAA,KAAAA,EAAA,K,25MC5JR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_71.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_71.vue?b838"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">7(a) Vergleich von Überlastkontroll-Strategien</h3>\r\n\r\n    <!-- 問題文（Deutsch + 日本語） -->\r\n    <div class=\"border rounded p-3 bg-light mb-4\">\r\n      <p><strong>Aufgabe:</strong><br />\r\n        Vergleichen Sie die Überlastkontrolle in Peer-to-Peer-Systemen mit netzgestützter Überlastkontrolle.\r\n      </p>\r\n      <hr />\r\n      <p><strong>問題:</strong><br />\r\n        P2P型の輻輳制御と、ネットワーク側が支援する輻輳制御を比較せよ。\r\n      </p>\r\n    </div>\r\n\r\n    <!-- 解答：ドイツ語 & 日本語 横並び -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Antwort (Deutsch)</h5>\r\n        <p><strong>Ende-zu-Ende Überlastkontrolle:</strong></p>\r\n        <ul>\r\n          <li style=\"color: red;\">Das Netz liefert keine direkte Rückmeldung über den Überlastungszustand.</li>\r\n          <li style=\"color: red;\">Die aktuelle Auslastung wird anhand beobachtbarer Parameter wie Paketverlust oder Verzögerungszeit geschätzt.</li>\r\n          <li>Die Überlastkontrolle erfolgt ausschließlich durch die Endsysteme, typischerweise auf Basis von TCP.</li>\r\n        </ul>\r\n        <p><strong>Netzgestützte Überlastkontrolle:</strong></p>\r\n        <ul>\r\n          <li style=\"color: red;\">Router geben dem Sender und Empfänger explizit Rückmeldung über den Zustand des Netzes.</li>\r\n          <li><span style=\"color: red;\">Ein spezielles Bit im Paket signalisiert eine Überlastung</span> (z.&nbsp;B. ECN, DECbit, ATM).</li>\r\n          <li style=\"color: red;\">Das Netz kann auch eine zulässige Senderrate vorgeben, mit der Pakete versendet werden sollen.</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解答（日本語）</h5>\r\n        <p><strong>エンドツーエンド型輻輳制御:</strong></p>\r\n        <ul>\r\n          <li style=\"color: red;\">ネットワークからの直接的な輻輳通知は行われない。</li>\r\n          <li><span style=\"color: red;\">パケット損失や遅延など、送信側・受信側が観測できる情報から輻輳状態を推測</span>する。</li>\r\n          <li>制御は送信側・受信側のエンドシステムで完結し、主にTCPによって実現される。</li>\r\n        </ul>\r\n        <p><strong>ネットワーク支援型輻輳制御:</strong></p>\r\n        <ul>\r\n          <li style=\"color: red;\">ルーターが送信者や受信者に対してネットワークの輻輳状態を明示的に通知する。</li>\r\n          <li><span style=\"color: red;\">パケット中のビットを用いて輻輳</span>を示す（例：ECN、DECbit、ATMなど）。</li>\r\n          <li style=\"color: red;\">ネットワーク側がパケット送信レートを決定し、それに基づいて送信者が制御を行う。</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 図の挿入 -->\r\n    <div class=\"text-center my-4\">\r\n      <img\r\n        src=\"@/assets/lecture/lecture03/Figure_0701.png\"\r\n        alt=\"Vergleich der Überlastkontrollstrategien\"\r\n        class=\"img-fluid rounded border\"\r\n      />\r\n      <p class=\"text-muted mt-2\">図 7.1 — エンドツーエンド型とネットワーク支援型の輻輳制御の比較</p>\r\n    </div>\r\n\r\n<!-- 解説 -->\r\n<div class=\"row mt-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      In Computernetzwerken gibt es zwei grundlegende Strategien zur Überlastkontrolle:\r\n      <strong>Ende-zu-Ende</strong> und <strong>netzgestützte</strong> Verfahren.\r\n    </p>\r\n    <p>\r\n      Beim Ende-zu-Ende-Ansatz verlassen sich die Endsysteme (Sender und Empfänger)\r\n      auf <span style=\"color: red;\">beobachtbare Hinweise wie Paketverlust oder Verzögerung,\r\n      um eine Überlastung im Netzwerk zu erkennen.</span>\r\n    </p>\r\n    <p>\r\n      Dies bedeutet, dass <span style=\"color: red;\">das Netzwerk selbst keine explizite Rückmeldung über seinen Zustand liefert</span>.\r\n      Stattdessen schätzt das Transportprotokoll (z.&nbsp;B. TCP) <span style=\"color: red;\">anhand von Timeout oder Duplikat-Acknowledgments,\r\n      ob das Netz überlastet ist.</span>\r\n    </p>\r\n    <p>\r\n      Diese Methode ist in vielen Netzwerken verwendbar,\r\n      da sie keine spezielle Unterstützung durch Router oder Switches erfordert.\r\n    </p>\r\n    <p>\r\n      Ein Nachteil ist jedoch, dass <span style=\"color: red;\">solche Erkennungen reaktiv sind</span> und <span style=\"color: red;\">die Reaktion auf Überlastung verzögert erfolgen kann.</span>\r\n      Dadurch kann es zu Paketverlusten oder unnötiger Verzögerung kommen.\r\n    </p>\r\n    <p>\r\n      Bei der netzgestützten Überlastkontrolle <span style=\"color: red;\">helfen die Netzwerkgeräte aktiv mit und geben Informationen über die Überlastung weiter.</span>\r\n      <span style=\"color: red;\">Router erkennen Überlast und geben Rückmeldungen an die Endsysteme.</span>\r\n    </p>\r\n    <p>\r\n      Diese Rückmeldung kann etwa durch das Setzen eines sogenannten <span style=\"color: red;\">Congestion-Bits</span> im IP-Header erfolgen (wie bei ECN),\r\n      oder durch spezielle Pakete, sogenannte Choke-Pakete.\r\n    </p>\r\n    <p>\r\n      Fortgeschrittene Systeme wie ATM ABR erlauben sogar, dass ein Router dem Sender mitteilt,\r\n      mit welcher maximalen Rate Daten gesendet werden dürfen.\r\n    </p>\r\n    <p>\r\n      Diese Verfahren ermöglichen eine genauere und oft auch schnellere Steuerung,\r\n      setzen jedoch voraus, dass das Netzwerk selbst komplexere Funktionen unterstützt.\r\n    </p>\r\n    <p>\r\n      Moderne Protokolle wie TCP können auch hybride Ansätze nutzen,\r\n      bei denen beide Methoden kombiniert werden,\r\n      z.&nbsp;B. durch Verwendung von ECN mit TCP.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      コンピュータネットワークにおける輻輳制御には、\r\n      基本的に<strong>エンドツーエンド型</strong>と<strong>ネットワーク支援型</strong>の2つの方法があります。\r\n    </p>\r\n    <p>\r\n      エンドツーエンド型では、<span style=\"color: red;\">送信側と受信側のエンドシステムが、\r\n      パケットの損失や通信の遅延といった観測可能な情報をもとに\r\n      輻輳状態を推測</span>します。\r\n    </p>\r\n    <p>\r\n      つまり、<span style=\"color: red;\">ネットワーク自体は輻輳について明示的に通知しません。</span>\r\n      TCPなどのトランスポート層プロトコルが、\r\n      <span style=\"color: red;\">タイムアウトや3重ACKなどを根拠に輻輳を判断</span>します。\r\n    </p>\r\n    <p>\r\n      この方法は特別なルーター機能などを必要とせず、\r\n      汎用的なネットワーク環境で使えるという利点があります。\r\n    </p>\r\n    <p>\r\n      その一方で、<span style=\"color: red;\">判断が遅れたり誤った判断をしたりすることがあり</span>、\r\n      輻輳への反応が遅くなる可能性があります。\r\n      そのため、効率的な制御が難しい場合もあります。\r\n    </p>\r\n    <p>\r\n      一方、ネットワーク支援型の輻輳制御では、\r\n      <span style=\"color: red;\">ルーターなどのネットワーク機器が輻輳を検知し、\r\n      送信者や受信者に通知</span>を行います。\r\n    </p>\r\n    <p>\r\n      通知の方法としては、パケットのヘッダー内にある<span style=\"color: red;\">輻輳ビット</span>をセットする（ECN）か、\r\n      「チョークパケット」と呼ばれる警告パケットを送る方法があります。\r\n    </p>\r\n    <p>\r\n      より高度な仕組みとしては、ATMネットワークのABRのように、\r\n      ルーターが送信可能な最大レートを送信者に指示する方式もあります。\r\n    </p>\r\n    <p>\r\n      これにより、精密で迅速な制御が可能になりますが、\r\n      ネットワーク機器に高度な機能が求められるというデメリットもあります。\r\n    </p>\r\n    <p>\r\n      現在のインターネットでは、基本はエンドツーエンド型ですが、\r\n      TCPとECNを組み合わせたようなハイブリッド方式も実用化されており、\r\n      両方の利点を取り入れた設計が進んでいます。\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Keine zusätzliche Logik erforderlich\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>\r\n","import script from \"./chapter15_71.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_71.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_71.vue?vue&type=style&index=0&id=211472c6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-211472c6\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_cache","__exports__"],"sourceRoot":""}