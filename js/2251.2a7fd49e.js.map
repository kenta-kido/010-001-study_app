{"version":3,"file":"js/2251.2a7fd49e.js","mappings":"ycACEA,EAAAA,EAAAA,IAggBM,MAhgBNC,EAggBM,C,g4RAzSRC,EAAAA,EAAAA,IAsEM,MAtENC,EAsEM,C,4uDAtBFD,EAAAA,EAAAA,IAGM,MAHNE,EAGM,EAFJF,EAAAA,EAAAA,IAAgG,OAA1FG,KAAKC,EAAAA,EAAAA,IAAAC,GAAQC,IAAI,2BAA2BC,MAAM,YAAYC,MAAA,uB,uBACpER,EAAAA,EAAAA,IAA+F,KAA5FO,MAAM,mBAAkB,oEAAgE,M,aAIjGP,EAAAA,EAAAA,IAQM,OARDO,MAAM,oCAAkC,EAC3CP,EAAAA,EAAAA,IAEI,WAFDA,EAAAA,EAAAA,IAAuB,cAAf,WAAeA,EAAAA,EAAAA,IAAM,O,QAAA,yDAGhCA,EAAAA,EAAAA,IAAM,OACNA,EAAAA,EAAAA,IAEI,WAFDA,EAAAA,EAAAA,IAAqB,cAAb,SAAaA,EAAAA,EAAAA,IAAM,O,QAAA,sC,KAM5BA,EAAAA,EAAAA,IAGM,MAHNS,EAGM,EAFJT,EAAAA,EAAAA,IAAgG,OAA1FG,KAAKC,EAAAA,EAAAA,IAAAC,GAAQC,IAAI,2BAA2BC,MAAM,YAAYC,MAAA,uB,uBACpER,EAAAA,EAAAA,IAA+F,KAA5FO,MAAM,mBAAkB,oEAAgE,Q,+vSCrRjG,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_61_ex.vue","webpack://study-site/./src/views/lecture/lecture03/chapter15/chapter15_61_ex.vue?5348"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">UDP-Prüfsumme</h3>\r\n<!-- Thema: Warum ist die UDP-Prüfsumme „naiv“ und welche Grenzen hat sie? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Warum gilt die UDP-Prüfsumme als „naiv“ und welche Schwächen hat sie?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPのチェックサムはなぜ「ナイーブ（単純）」と言われるのか？その限界とは？\r\n  </p>\r\n</div>\r\n\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Die UDP-Prüfsumme verwendet eine einfache 1er-Komplement-Summenbildung, um Datenübertragungen auf Bitfehler zu prüfen.\r\n      Doch dieses Verfahren hat <strong>strukturelle Schwächen</strong>:\r\n    </p>\r\n    <ul>\r\n      <li>Mehrere Bitfehler können sich gegenseitig aufheben → Prüfsumme bleibt gleich</li>\r\n      <li>Die Erkennungsrate liegt unter 100 %, insbesondere bei komplexeren Fehlern</li>\r\n    </ul>\r\n    <p>\r\n      Laut <strong>RFC 1071</strong> erkennt die UDP/TCP-Prüfsumme alle Einzelfehler sicher, aber nur eingeschränkt Mehrbit-Fehler.\r\n      Daher wird sie als <strong>naiv</strong> oder minimaler Schutzmechanismus betrachtet.\r\n    </p>\r\n    <p>\r\n      UDP ist ein leichtgewichtiges Protokoll – die Prüfsumme bietet nur eine „schnelle Plausibilitätsprüfung“.\r\n      Für sicherheitskritische oder zuverlässige Daten wird stattdessen Folgendes verwendet:\r\n    </p>\r\n    <ul>\r\n      <li>TCP (mit Fehlererkennung, Reihenfolge, Wiederholung)</li>\r\n      <li>Stärkere Prüfverfahren in der Anwendungsschicht wie CRC, SHA, MD5</li>\r\n    </ul>\r\n    <p>\r\n      <strong>Vergleich zur CRC:</strong><br />\r\n      Die CRC (Cyclic Redundancy Check) erkennt komplexe Bitmuster, auch Burstfehler, sehr zuverlässig.\r\n    </p>\r\n    <table class=\"table table-bordered table-sm\">\r\n      <thead><tr><th>Verfahren</th><th>Fehlerschutz</th><th>Typische Anwendung</th></tr></thead>\r\n      <tbody>\r\n        <tr><td>UDP-Prüfsumme</td><td>Grundlegend (naiv)</td><td>VoIP, Streaming, DNS</td></tr>\r\n        <tr><td>CRC</td><td>Sehr hoch</td><td>Ethernet, Speichermedien</td></tr>\r\n        <tr><td>SHA/MD5</td><td>Kryptographisch sicher</td><td>Signaturen, Datenintegrität</td></tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      UDPのチェックサムは「<strong>1の補数加算</strong>」によってデータの整合性を検証しますが、\r\n      その手法には構造的な限界があります：\r\n    </p>\r\n    <ul>\r\n      <li>複数のビットが同時に反転した場合、それらが<strong>相殺されてしまい</strong>チェックサムが変わらないことがある</li>\r\n      <li>そのため、<strong>すべてのエラーを検出できるわけではない</strong></li>\r\n    </ul>\r\n    <p>\r\n      RFC 1071 によれば、UDP/TCPのチェックサムは「単一ビットエラー」には強いが、\r\n      「複数ビットの誤り」には検出漏れの可能性があるとされています。\r\n    </p>\r\n    <p>\r\n      このような性質から、UDPのチェックサムは<strong>最低限の保護手段</strong>として位置づけられ、\r\n      より高い信頼性が必要な場合は以下の手法が使われます：\r\n    </p>\r\n    <ul>\r\n      <li>TCP（再送・順序保証あり）</li>\r\n      <li>アプリ層での<strong>CRC</strong>や<strong>ハッシュ（SHA, MD5など）</strong>による整合性検証</li>\r\n    </ul>\r\n    <p>\r\n      <strong>CRCとの比較：</strong><br />\r\n      CRC（巡回冗長検査）は、複雑なビットパターンやバーストエラーも検出できる高精度な手法です。\r\n    </p>\r\n    <table class=\"table table-bordered table-sm\">\r\n      <thead><tr><th>方式</th><th>検出能力</th><th>用途例</th></tr></thead>\r\n      <tbody>\r\n        <tr><td>UDPチェックサム</td><td>基本的（ナイーブ）</td><td>VoIP, ストリーミング, DNS</td></tr>\r\n        <tr><td>CRC</td><td>非常に高い</td><td>イーサネット, ディスク</td></tr>\r\n        <tr><td>SHA/MD5</td><td>暗号学的に安全</td><td>署名, 改ざん検出</td></tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Wie funktioniert Padding bei UDP-Prüfsummen? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Wie funktioniert Padding bei UDP und welche Länge wird für die Prüfsummenberechnung verwendet?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPのチェックサム計算時のパディング処理と、UDP長（Length）の扱いについて\r\n  </p>\r\n</div>\r\n\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Bei der UDP-Prüfsummenberechnung müssen die Daten in 16-Bit-Wörtern verarbeitet werden.\r\n      Falls das UDP-Datenfeld (Payload) eine ungerade Länge hat, wird <strong>ein Padding-Byte mit dem Wert 0x00</strong> hinzugefügt –\r\n      <em>nur für die Prüfsumme</em>.\r\n    </p>\r\n    <ul>\r\n      <li>Das Padding wird <strong>nicht</strong> im Paket übertragen.</li>\r\n      <li>Die im UDP-Header angegebene Länge bleibt <strong>unverändert</strong>.</li>\r\n    </ul>\r\n    <p>Beispiel:</p>\r\n    <ul>\r\n      <li>UDP-Header = 8 Byte</li>\r\n      <li>Daten = 5 Byte → Prüfsumme berechnet über 8 + 5 + 1 (Padding) = 14 Byte</li>\r\n      <li><code>UDP-Length = 13</code> im Header</li>\r\n    </ul>\r\n    <p>\r\n      Der Empfänger rekonstruiert dieselbe Prüfsummenstruktur, ggf. ebenfalls mit Padding, und verwendet den <strong>originalen UDP-Längenwert</strong> aus dem Header.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      UDPのチェックサムは、2バイト（16ビット）単位で計算されます。そのため、データ部が奇数バイトの場合は、\r\n      計算のために<strong>末尾に0x00の1バイトをパディング</strong>します。\r\n    </p>\r\n    <ul>\r\n      <li>このパディングは<strong>実際には送信されません</strong>。</li>\r\n      <li>UDPヘッダのLengthフィールドの値は、<strong>元の長さ（ヘッダ＋データ）</strong>のままです。</li>\r\n    </ul>\r\n    <p>例：</p>\r\n    <ul>\r\n      <li>UDPヘッダ：8バイト</li>\r\n      <li>データ：5バイト → パディング1バイト追加 → 計算上は14バイト</li>\r\n      <li><code>UDP長 = 13</code>（8 + 5）と記録</li>\r\n    </ul>\r\n    <p>\r\n      受信側も同じようにLengthフィールドの値を使ってチェックサムを再計算し、必要ならパディングを追加して整合性を確認します。\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Wie funktioniert Padding bei der UDP-Prüfsumme und was steht im Length-Feld? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Wie funktioniert Padding bei der UDP-Prüfsummenberechnung? Und was steht im UDP-Length-Feld?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPチェックサム計算におけるパディングとは？UDP長フィールドには何が入るのか？\r\n  </p>\r\n</div>\r\n\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      UDP verwendet 16-Bit-Blöcke zur Berechnung der Prüfsumme. Wenn die Nutzdaten eine ungerade Anzahl von Bytes haben,\r\n      wird am Ende ein Padding-Byte mit dem Wert <code>0x00</code> hinzugefügt – nur für die Berechnung.\r\n      Dieses Padding wird <strong>nicht gesendet</strong> und ist temporär.\r\n    </p>\r\n    <p>\r\n      Im UDP-Header steht im Feld <strong>Length</strong> immer die tatsächliche Länge des UDP-Segments (Header + Nutzdaten),\r\n      <strong>ohne Padding</strong>.\r\n    </p>\r\n    <p>\r\n      Der Empfänger verwendet dasselbe Length-Feld aus dem empfangenen UDP-Header, um die Prüfsumme zu verifizieren.\r\n      Auch er fügt ggf. temporär ein Padding-Byte für die Berechnung ein.\r\n    </p>\r\n    <p><strong>Beispiel:</strong></p>\r\n    <ul>\r\n      <li>Header = 8 Byte</li>\r\n      <li>Daten = 5 Byte</li>\r\n      <li>UDP-Länge = 13 (im Header)</li>\r\n      <li>Padding auf 14 Byte zur Berechnung</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      UDPチェックサムは16ビット単位で計算されるため、データ長が奇数バイトの場合は、チェックサム計算のために\r\n      <strong>最後に1バイトの0（0x00）を一時的に追加（パディング）</strong>します。\r\n      このパディングは送信されず、計算時だけ使われます。\r\n    </p>\r\n    <p>\r\n      UDPヘッダー内の <strong>Lengthフィールド</strong> には、\r\n      <strong>本来のUDPパケットの長さ（＝ヘッダー＋データ）</strong> が記録され、パディングは含まれません。\r\n    </p>\r\n    <p>\r\n      受信側では、送られてきたUDPヘッダーの Length を使用し、\r\n      必要に応じて同様にパディングを加えてチェックサムを再計算・検証します。\r\n    </p>\r\n    <p><strong>例：</strong></p>\r\n    <ul>\r\n      <li>ヘッダー：8バイト</li>\r\n      <li>データ：5バイト（奇数）</li>\r\n      <li>UDP長 = 13（ヘッダー＋データ）</li>\r\n      <li>計算時のみ14バイトにパディング</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Was ist ein UDP-Pseudo-Header und wofür wird er verwendet? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Was ist ein Pseudo-Header bei UDP und wie wird er verwendet?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPにおける擬似ヘッダー（Pseudo Header）とは？どのように使われるのか？\r\n  </p>\r\n</div>\r\n\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Der sogenannte <strong>Pseudo-Header</strong> wird weder übertragen noch gespeichert, sondern dient\r\n      <u>nur der Prüfsummenberechnung</u> auf Sender- und Empfängerseite.\r\n    </p>\r\n    <p>\r\n      Er enthält Felder aus der IP-Schicht, um sicherzustellen, dass das UDP-Paket an die richtige Adresse\r\n      gesendet wurde und keine Layer-3-Verwechslung auftritt.\r\n    </p>\r\n    <p>Der Pseudo-Header besteht aus:</p>\r\n    <ul>\r\n      <li>Source IP Address (32 Bit)</li>\r\n      <li>Destination IP Address (32 Bit)</li>\r\n      <li>Zero (8 Bit, immer 0)</li>\r\n      <li>Protocol Number (8 Bit, z.B. 17 für UDP)</li>\r\n      <li>UDP Length (16 Bit)</li>\r\n    </ul>\r\n    <p>\r\n      Sender und Empfänger bauen diesen Header <strong>jeweils selbst</strong> aus den IP- und UDP-Feldern und führen die Prüfsummenberechnung durch.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      <strong>擬似ヘッダー（Pseudo Header）</strong>は、<u>UDPチェックサム計算のためだけに使用される一時的な構造体</u>で、\r\n      実際にはパケットとして送信されません。\r\n    </p>\r\n    <p>\r\n      IP層の情報を含めることで、UDPレイヤのデータが正しく処理されたかを検証します。\r\n      送信側も受信側も、<strong>自分自身で擬似ヘッダーを構成</strong>し、それをチェックサム計算に使います。\r\n    </p>\r\n    <p>擬似ヘッダーの構成：</p>\r\n    <ul>\r\n      <li>送信元IPアドレス（32ビット）</li>\r\n      <li>宛先IPアドレス（32ビット）</li>\r\n      <li>ゼロ（8ビット）</li>\r\n      <li>プロトコル番号（8ビット, UDPは17）</li>\r\n      <li>UDP長（16ビット）</li>\r\n    </ul>\r\n    <p>\r\n      この構成により、UDPチェックサムは <strong>IPレイヤも含めた整合性検証</strong> を実現できます。\r\n    </p>\r\n  </div>\r\n\r\n    <!-- 図の挿入 -->\r\n    <div class=\"text-center mt-4\">\r\n      <img :src=\"imgUrl\" alt=\"UDP Checksum Calculation\" class=\"img-fluid\" style=\"max-width: 700px;\" />\r\n      <p class=\"text-muted mt-2\">Abbildung: Struktur zur Prüfsummenberechnung inkl. Pseudo Header</p>\r\n    </div>\r\n\r\n  <!-- Thema: Wie funktioniert Padding bei der UDP-Prüfsumme und was steht im Length-Feld? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Prüfsumme über Pseudo Header und Segmentstruktur\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPチェックサムの構成要素と「1の補数加算」による計算\r\n  </p>\r\n</div>\r\n\r\n    <!-- 図の挿入 -->\r\n    <div class=\"text-center mt-4\">\r\n      <img :src=\"imgUrl\" alt=\"UDP Checksum Calculation\" class=\"img-fluid\" style=\"max-width: 700px;\" />\r\n      <p class=\"text-muted mt-2\">Abbildung: Struktur zur Prüfsummenberechnung inkl. Pseudo Header</p>\r\n    </div>\r\n\r\n</div>\r\n    <!-- 解説：Deutsch & 日本語 -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <h5>Erklärung (Deutsch)</h5>\r\n        <p>\r\n          Die UDP-Prüfsumme wird über folgende Felder berechnet:\r\n        </p>\r\n        <ul>\r\n          <li><strong>Pseudo Header</strong> aus der IP-Schicht (nicht übertragen):</li>\r\n          <ul>\r\n            <li>Quell-IP-Adresse (2 × 16 Bit)</li>\r\n            <li>Ziel-IP-Adresse (2 × 16 Bit)</li>\r\n            <li>0 (8 Bit), Protokollnummer (8 Bit, UDP = 17)</li>\r\n            <li>UDP-Gesamtlänge (Header + Daten)</li>\r\n          </ul>\r\n          <li>UDP-Header (Source Port, Destination Port, Length, Checksum = 0 während der Berechnung)</li>\r\n          <li>UDP-Daten (Payload, ggf. mit Padding auf 16 Bit)</li>\r\n        </ul>\r\n\r\n        <p>\r\n          Die Summe wird mit der <strong>1er-Komplementaddition</strong> gebildet: Man addiert alle 16-Bit-Wörter nacheinander. \r\n          Falls dabei ein Übertrag entsteht (17. Bit), wird dieser zurück auf das niederwertige Ende addiert (Wraparound).\r\n        </p>\r\n        <p>\r\n          Zum Schluss wird das <strong>1er-Komplement</strong> (Bitweise Invertierung) der Gesamtsumme genommen und als Checksumme im UDP-Header gespeichert.\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <h5>解説（日本語）</h5>\r\n        <p>\r\n          UDPチェックサムは以下の範囲のデータを対象に計算されます：\r\n        </p>\r\n        <ul>\r\n          <li><strong>IP層の擬似ヘッダ（Pseudo Header）</strong>（送信はされない）：\r\n            <ul>\r\n              <li>送信元IPアドレス（16ビット × 2）</li>\r\n              <li>宛先IPアドレス（16ビット × 2）</li>\r\n              <li>0（8ビット）＋ プロトコル番号（8ビット、UDP=17）</li>\r\n              <li>UDP長（ヘッダ＋データ）</li>\r\n            </ul>\r\n          </li>\r\n          <li>UDPヘッダ（送信元ポート、宛先ポート、長さ、チェックサム ※計算時は 0）</li>\r\n          <li>UDPのデータ（必要に応じて奇数バイトのとき 0x00 でパディング）</li>\r\n        </ul>\r\n\r\n        <p>\r\n          すべてのフィールドを<strong>16ビット単位で通常の加算</strong>を行い、\r\n          もし加算結果が17ビット（オーバーフロー）になった場合は、\r\n          上位の1ビットを下位に「折り返して加算」します（<strong>1の補数加算</strong>）。\r\n        </p>\r\n        <p>\r\n          最後にその合計に対して<strong>ビット反転（1の補数）</strong>をとった値がチェックサムとしてUDPヘッダに記録されます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!-- Thema: Welche Felder des Pseudo-Headers stammen aus dem IP-Header? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Welche Informationen des Pseudo-Headers stammen aus dem IP-Header?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    擬似ヘッダーの各フィールドはどこから取得されるのか？IPヘッダーとの関係は？\r\n  </p>\r\n</div>\r\n\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Der Pseudo-Header wird ausschließlich für die UDP-Prüfsummenberechnung verwendet und ist nicht Bestandteil des übertragenen Pakets.\r\n      Alle Felder des Pseudo-Headers stammen aus dem <strong>IP-Header</strong>:\r\n    </p>\r\n    <ul>\r\n      <li><strong>Source IP Address:</strong> aus dem IP-Header (Quelladresse)</li>\r\n      <li><strong>Destination IP Address:</strong> aus dem IP-Header (Zieladresse)</li>\r\n      <li><strong>Protokollnummer:</strong> ebenfalls aus dem IP-Header (z.&nbsp;B. 17 für UDP)</li>\r\n      <li><strong>UDP Length:</strong> aus dem UDP-Header</li>\r\n    </ul>\r\n    <p>\r\n      Der Pseudo-Header wird vom Sender und vom Empfänger <strong>lokal erzeugt</strong>, um die Prüfsumme korrekt zu berechnen bzw. zu prüfen.\r\n      Dabei greifen beide auf die tatsächlichen IP-Header-Felder des Pakets zu.\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      擬似ヘッダー（Pseudo Header）は、<strong>UDPチェックサムの計算時のみ</strong>内部的に構成され、<strong>実際のパケットには含まれません</strong>。\r\n      この擬似ヘッダーの情報はすべて、<strong>IPヘッダーから取得</strong>されます。\r\n    </p>\r\n    <ul>\r\n      <li><strong>送信元IPアドレス：</strong>IPヘッダーから</li>\r\n      <li><strong>宛先IPアドレス：</strong>IPヘッダーから</li>\r\n      <li><strong>プロトコル番号：</strong>IPヘッダーから（UDPなら17）</li>\r\n      <li><strong>UDP長（Length）：</strong>UDPヘッダーから</li>\r\n    </ul>\r\n    <p>\r\n      送信側・受信側の双方が、受信したIPヘッダーやUDPヘッダーからこれらの情報を参照し、<strong>自分で擬似ヘッダーを構成してチェックサム処理を行います</strong>。\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Wo und wie wird die UDP-Prüfsumme tatsächlich berechnet und geprüft? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Wie funktioniert die UDP-Prüfsummenberechnung im Zusammenspiel der Schichten? Welche Rolle spielt der IP-Header?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPチェックサムはどこでどのように計算・検証されるのか？IPヘッダー情報はどう関わるのか？\r\n  </p>\r\n</div>\r\n\r\n<div class=\"row mb-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Obwohl die UDP-Prüfsumme ein Teil der Transportschicht (Layer 4) ist, erfordert ihre Berechnung Informationen aus dem IP-Header (Layer 3),\r\n      insbesondere die Quell- und Zieladresse sowie die Protokollnummer.\r\n    </p>\r\n    <p>\r\n      Die Berechnung erfolgt daher <strong>nicht rein im UDP-Modul</strong>, sondern im Zusammenspiel mit der Netzwerkschicht – meist im Kernel des Betriebssystems.\r\n    </p>\r\n    <p>\r\n      Beim Senden stellt der UDP-Code die Nutzdaten und Header bereit, während die Prüfsumme mit Hilfe des Pseudo-Headers und der IP-Daten ermittelt wird.\r\n    </p>\r\n    <p>\r\n      Beim Empfangen prüft das System die Prüfsumme <strong>noch bevor die Daten an die Anwendung weitergeleitet werden</strong>. Schlägt die Prüfung fehl, wird das Paket verworfen.\r\n    </p>\r\n    <p><strong>Zusammenfassung:</strong></p>\r\n    <ul>\r\n      <li>UDP verwendet einen Pseudo-Header aus Layer 3 zur Prüfsumme</li>\r\n      <li>Prüfung erfolgt auf OS-Ebene zwischen IP- und UDP-Schicht</li>\r\n      <li>Ungültige Pakete werden nie an die Anwendung weitergegeben</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      UDPチェックサムは第4層（トランスポート層）に属しますが、<strong>計算には第3層（IP層）の情報</strong>（送信元/宛先IPアドレス、プロトコル番号など）が必要です。\r\n    </p>\r\n    <p>\r\n      そのため、UDP層だけでは完結せず、OSカーネル内でIP層の情報を参照しながらチェックサムが計算されます（＝レイヤー間の協調）。\r\n    </p>\r\n    <p>\r\n      受信時も、パケットがUDPとして識別された後、<strong>UDP層に渡される前にチェックサムが検証</strong>されます。\r\n      チェックサムが一致しなければそのセグメントは廃棄され、<strong>アプリケーションには一切届きません</strong>。\r\n    </p>\r\n    <p><strong>まとめ：</strong></p>\r\n    <ul>\r\n      <li>UDPチェックサムには擬似ヘッダー（Pseudo Header）が必要</li>\r\n      <li>送信時はIP情報を参照して計算</li>\r\n      <li>受信時もIPとUDPの中間で検証</li>\r\n      <li>不一致なら破棄 → アプリには届かない</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Thema: Wie funktioniert UDP-Kapselung in den Netzwerk-Schichten? -->\r\n<div class=\"border rounded p-3 bg-light mb-4\">\r\n  <p><strong>Thema:</strong><br />\r\n    Wie funktioniert die UDP-Kapselung innerhalb des Netzwerkmodells?\r\n  </p>\r\n  <hr />\r\n  <p><strong>テーマ:</strong><br />\r\n    UDPのカプセル化とは？ネットワーク階層におけるデータの包み方\r\n  </p>\r\n</div>\r\n\r\n<!-- 図の挿入 -->\r\n<div class=\"text-center mt-4\">\r\n  <img src=\"@/assets/lecture/lecture03/Figure_0604.png\" class=\"img-fluid\" alt=\"UDPカプセル化の構造\" style=\"max-width: 700px;\" />\r\n  <p class=\"text-muted mt-2\">Abbildung: UDP-Kapselung durch die Schichten (Transport → Netzwerk → Data Link)</p>\r\n</div>\r\n\r\n<!-- 解説：Deutsch & 日本語 -->\r\n<div class=\"row mt-4\">\r\n  <div class=\"col-md-6\">\r\n    <h5>Erklärung (Deutsch)</h5>\r\n    <p>\r\n      Diese Abbildung zeigt den Kapselungsprozess eines UDP-Datagramms im Rahmen des OSI-Schichtenmodells:\r\n    </p>\r\n    <ul>\r\n      <li>Ein <strong>UDP-Datagramm</strong> besteht aus UDP-Header und UDP-Nutzdaten</li>\r\n      <li>Dieses wird in das <strong>IP-Paket</strong> eingebettet – genauer: in das Payload-Feld des IP-Headers</li>\r\n      <li>Das vollständige IP-Paket wird anschließend in einen <strong>Frame</strong> (z.&nbsp;B. Ethernet) eingebettet</li>\r\n    </ul>\r\n    <p>\r\n      Die <strong>Protokollnummer im IP-Header</strong> (z.&nbsp;B. 17 für UDP) zeigt dem Empfänger an, welches Protokoll die Nutzdaten enthält.\r\n    </p>\r\n    <p><strong>Zusammenfassung:</strong></p>\r\n    <ul>\r\n      <li>UDP = Nutzlast der Netzwerkschicht (IP)</li>\r\n      <li>IP = Nutzlast der Sicherungsschicht (Frame)</li>\r\n      <li>Jede Schicht fügt ihren eigenen Header hinzu, bevor sie die Daten an die darunterliegende Schicht übergibt</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n    <h5>解説（日本語）</h5>\r\n    <p>\r\n      この図は、UDPパケットが通信の際にネットワークの各層でどのように「包まれていく」か（カプセル化）を示したものです。\r\n    </p>\r\n    <ul>\r\n      <li><strong>UDPデータグラム</strong>（UDPヘッダ＋データ）が最初に生成されます（トランスポート層）</li>\r\n      <li>それが <strong>IPパケット</strong> に包まれます（ネットワーク層）</li>\r\n      <li>最終的に <strong>フレーム</strong>（例えばEthernet）にカプセル化されて物理的に送信されます（データリンク層）</li>\r\n    </ul>\r\n    <p>\r\n      IPヘッダー内の <strong>プロトコル番号</strong>（UDPは17）によって、受信側は「これはUDPだ」と識別できます。\r\n    </p>\r\n    <p><strong>まとめ：</strong></p>\r\n    <ul>\r\n      <li>UDPはIPのペイロード</li>\r\n      <li>IPはフレームのペイロード</li>\r\n      <li>各層でそれぞれのヘッダーが追加され、順にカプセル化されて送信される</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport imgUrl from '@/assets/lecture/lecture03/Figure_0603.png';\r\n</script>\r\n\r\n<style scoped>\r\n.border {\r\n  border: 1px solid #ccc;\r\n}\r\n.bg-light {\r\n  background-color: #f8f9fa;\r\n}\r\n</style>","import script from \"./chapter15_61_ex.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter15_61_ex.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chapter15_61_ex.vue?vue&type=style&index=0&id=1a77a4aa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1a77a4aa\"]])\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","_unref","imgUrl","alt","class","style","_hoisted_5","__exports__"],"sourceRoot":""}