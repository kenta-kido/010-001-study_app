{"version":3,"file":"js/8371.fd2b5bb5.js","mappings":"mWACEA,EAAAA,EAAAA,IAqMM,MArMNC,EAqMM,C,6wDAzIRC,EAAAA,EAAAA,IAYM,MAZNC,EAYM,EAXJD,EAAAA,EAAAA,IAIE,OAHCE,KAAKC,EAAAA,EAAAA,IAAAC,GACNC,IAAI,gFACJC,MAAM,4B,uBAERN,EAAAA,EAAAA,IAEI,KAFDM,MAAM,wBAAuB,mFAEhC,I,aACAN,EAAAA,EAAAA,IAEI,KAFDM,MAAM,cAAa,qCAEtB,M,u1GCrEF,MAAMC,EAAc,EAEpB,O","sources":["webpack://study-site/./src/views/lecture/lecture04/chapter03/chapter03_40.vue","webpack://study-site/./src/views/lecture/lecture04/chapter03/chapter03_40.vue?724e"],"sourcesContent":["<template>\r\n  <div class=\"container my-4\">\r\n    <h3 class=\"mb-4\">3.4 Principles of Reliable Data Transfer</h3>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          In this section, we consider the problem of reliable data transfer in a general context.\r\n          This is appropriate since the problem of implementing reliable data transfer occurs\r\n          not only at the transport layer, but also at the link layer and the application layer as well.\r\n        </p>\r\n        <p>\r\n          The general problem is thus of central importance to networking. Indeed,\r\n          if one had to identify a “top-ten” list of fundamentally important problems in all\r\n          of networking, this would be a candidate to lead the list.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          このセクションでは、信頼性のあるデータ転送の問題を一般的な文脈で考察します。\r\n          この問題はトランスポート層だけでなく、リンク層やアプリケーション層でも発生するため、\r\n          非常に重要です。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          この一般的な問題はネットワーキングにおいて中心的な意味を持ちます。\r\n          もしネットワークにおける「重要な課題トップ10」を挙げるならば、\r\n          この問題は間違いなくその筆頭候補となるでしょう。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          In the next section, we’ll examine TCP and show, in particular, that TCP exploits many of the principles that we are about to describe.\r\n        </p>\r\n        <p>\r\n          Figure 3.8 illustrates the framework for our study of reliable data transfer.\r\n          The service abstraction provided to the upper-layer entities is that of a reliable channel through which data can be transferred.\r\n        </p>\r\n        <p>\r\n          With a reliable channel, no transferred data bits are corrupted (flipped from 0 to 1, or vice versa)\r\n          or lost, and all are delivered in the order in which they were sent.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          次のセクションでは、TCPを取り上げ、TCPがこれから紹介する多くの原則をどのように活用しているかを示します。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          図3.8は、信頼性のあるデータ転送を学ぶための枠組みを示しています。\r\n          上位層に提供されるサービス抽象は、データを転送できる「信頼できるチャネル」です。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          信頼できるチャネルでは、データビットの破損（0と1の反転）や損失はなく、\r\n          送信された順序通りにデータが配信されます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n<!-- 図3.8: Reliable data transfer -->\r\n<div class=\"text-center my-4\">\r\n  <img\r\n    :src=\"imgUrl8\"\r\n    alt=\"Figure 3.8 - Reliable data transfer: Service model and service implementation\"\r\n    class=\"img-fluid rounded border\"\r\n  />\r\n  <p class=\"text-muted mt-2 mb-0\">\r\n    Figure 3.8 — Reliable data transfer: Service model and service implementation\r\n  </p>\r\n  <p class=\"text-muted\">\r\n    図3.8 — 信頼性のあるデータ転送：サービスモデルとその実装\r\n  </p>\r\n</div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          It is the responsibility of a reliable data transfer protocol to implement this service abstraction.\r\n          This task is made difficult by the fact that the layer below the reliable data transfer protocol may be unreliable.\r\n        </p>\r\n        <p>\r\n          For example, TCP is a reliable data transfer protocol that is implemented on top of an unreliable (IP) end-to-end network layer.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          このサービス抽象を実現するのが、信頼性のあるデータ転送プロトコルの責任です。\r\n          ただし、下位層が信頼できない場合もあるため、この実装は容易ではありません。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          たとえば、TCPは信頼性のあるデータ転送プロトコルですが、\r\n          信頼性のないエンドツーエンドのネットワーク層（IP）の上に構築されています。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          More generally, the layer beneath the two reliably communicating end points\r\n          might consist of a single physical link or a global internetwork.\r\n        </p>\r\n        <p>\r\n          For our purposes, however, we can view this lower layer simply as an unreliable point-to-point channel.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          より一般的には、信頼的に通信する2点の下層は、単一の物理リンクや\r\n          グローバルなインターネットワークからなるかもしれません。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          しかし本セクションでは、下位層を「信頼できない点対点チャネル」として扱います。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          In this section, we will incrementally develop the sender and receiver sides of a reliable data transfer protocol,\r\n          considering increasingly complex models of the underlying channel.\r\n        </p>\r\n        <p>\r\n          One assumption we’ll adopt throughout our discussion is that packets will be delivered in the order in which they were sent, with some packets possibly being lost.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          このセクションでは、下層チャネルのモデルを徐々に複雑化させながら、\r\n          信頼性のあるデータ転送プロトコルの送信側・受信側を段階的に開発していきます。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          ここでの前提は、「パケットは送信された順序で配送されるが、一部が失われる可能性がある」ということです。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 関数名の扱い -->\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          The sending side of the data transfer protocol will be invoked by a call to\r\n          <code>rdt_send()</code>. It will pass the data to the upper layer at the receiving side.\r\n        </p>\r\n        <p>\r\n          On the receiving side, <code>rdt_rcv()</code> will be called when a packet arrives, and\r\n          <code>deliver_data()</code> will be used to send data up to the application.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          データ転送プロトコルの送信側は、<code>rdt_send()</code> という関数の呼び出しで動作します。\r\n          これにより、受信側の上位層へデータが渡されます。\r\n        </p>\r\n        <p class=\"text-muted\">\r\n          一方で受信側では、パケットが到着すると <code>rdt_rcv()</code> が呼ばれ、\r\n          <code>deliver_data()</code> を使ってアプリケーション層へデータが引き渡されます。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- packet という用語と意味 -->\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          In the following, we use the term <strong>“packet”</strong> rather than “segment”,\r\n          since this discussion applies to general networks, not only the Internet transport layer.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          以降では、トランスポート層の「セグメント」ではなく、\r\n          より汎用的な用語である <strong>「パケット」</strong> を使用します。\r\n          この議論はインターネットに限定されない一般的なネットワークに適用されるためです。\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 単方向転送とudt_send -->\r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-6\">\r\n        <p>\r\n          In this section, we consider only unidirectional data transfer from sender to receiver.\r\n          Still, both sides will transmit packets including control packets using\r\n          <code>udt_send()</code>, where <code>udt</code> stands for unreliable data transfer.\r\n        </p>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <p class=\"text-muted\">\r\n          このセクションでは、送信側から受信側への単方向データ転送のみを対象とします。\r\n          それでも、データ転送プロトコルの送受信両側は、\r\n          <code>udt_send()</code> を使ってコントロールパケットを含むパケットを相互に送信します。\r\n          （<code>udt</code> は unreliable data transfer の略です）\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport imgUrl8 from '@/assets/lecture/lecture04/Figure_08.png';\r\n</script>\r\n","import script from \"./chapter03_40.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chapter03_40.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","_unref","imgUrl8","alt","class","__exports__"],"sourceRoot":""}